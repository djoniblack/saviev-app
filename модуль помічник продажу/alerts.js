// alerts.js (lightweight, –±–µ–∑ –∫–ª–∞—Å—Å–æ–≤ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è)

// === –°–ò–°–¢–ï–ú–ê –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø ===
const ALERTS_DEBUG_MODE = window.location.hostname === 'localhost' || 
                         window.location.search.includes('debug=true') ||
                         localStorage.getItem('alertsDebugMode') === 'true';

const ALERTS_LOG_LEVEL = ALERTS_DEBUG_MODE ? 'verbose' : 'error'; // verbose, info, warn, error

// –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –º–æ–¥—É–ª—è alerts
const alertsLogger = {
    verbose: (...args) => ALERTS_DEBUG_MODE && ALERTS_LOG_LEVEL === 'verbose' && console.log('[ALERTS VERBOSE]', ...args),
    info: (...args) => ['verbose', 'info'].includes(ALERTS_LOG_LEVEL) && console.log('[ALERTS INFO]', ...args),
    warn: (...args) => ['verbose', 'info', 'warn'].includes(ALERTS_LOG_LEVEL) && console.warn('[ALERTS WARN]', ...args),
    error: (...args) => console.error('[ALERTS ERROR]', ...args)
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è –æ—Ç–ª–∞–¥–∫–∏
window.toggleAlertsDebug = function() {
    const newMode = !ALERTS_DEBUG_MODE;
    localStorage.setItem('alertsDebugMode', newMode.toString());
    alertsLogger.info(`–†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ alerts ${newMode ? '–≤–∫–ª—é—á–µ–Ω' : '–≤—ã–∫–ª—é—á–µ–Ω'}. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.`);
};

let masterData = [];
let clientLinks = {};
let clientNames = {}; // –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏–∑ API
let clientManagerDirectory = {}; // –ü–æ–ª–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –∫–ª–∏–µ–Ω—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä –∏–∑ API
let currentSignal = 'revenue-drop';
let currentManager = '';
let currentDepartment = '';
let currentPeriod = 3;
let currentSearch = '';
let currentStatus = ''; // –ù–æ–≤—ã–π —Ñ–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º –∫–ª–∏–µ–Ω—Ç–æ–≤
let revenueChart, freqChart, avgCheckChart;
let isAlertsInitialized = false; // --- NEW: –ü—Ä–∞–ø–æ—Ä —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó ---

// === –î–∞–Ω–Ω—ã–µ –∏–∑ Firebase ===
let managersData = [];
let departmentsData = [];

// === NEW: –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç—Ä–µ–∫–∏–Ω–≥–∞ –¥–µ–π—Å—Ç–≤–∏–π ===
let clientActionsData = {}; // {clientCode: {status, actions: [], lastActivity, potentialOrderDate}}
let currentUserId = null;

// === NEW: –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π ===
let notificationCheckInterval = null;
let lastNotificationCheck = new Date();

// === NEW: –°–∏—Å—Ç–µ–º–∞ AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π ===
let aiRecommendations = [];
let lastRecommendationUpdate = null;

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∫–ª–∏–µ–Ω—Ç–∞ –≤ –∞–ª–µ—Ä—Ç–∞—Ö
 */
function getClientAlertStatus(clientCode) {
  return clientActionsData[clientCode]?.status || 'new';
}

/**
 * –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
 */
// === –ù–û–í–´–ï –§–£–ù–ö–¶–ò–ò –î–õ–Ø UI ===

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∫–ª–∏–µ–Ω—Ç–∞
function renderClientStatus(clientCode) {
  const status = getClientAlertStatus(clientCode);
  
  const statusColors = {
    'new': 'bg-red-600 text-white',
    'in_progress': 'bg-yellow-600 text-white', 
    'resolved': 'bg-green-600 text-white',
    'closed': 'bg-gray-600 text-white'
  };
  
  const statusLabels = {
    'new': 'üÜï –ù–æ–≤–∏–π',
    'in_progress': 'üîÑ –í —Ä–æ–±–æ—Ç—ñ',
    'resolved': '‚úÖ –í–∏—Ä—ñ—à–µ–Ω–æ',
    'closed': 'üóÇÔ∏è –ó–∞–∫—Ä–∏—Ç–æ'
  };
  
  return `<div class="text-xs px-2 py-1 rounded ${statusColors[status]}">${statusLabels[status]}</div>`;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≥–∞–º–±—É—Ä–≥–µ—Ä –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π
function renderActionsMenu(clientCode) {
  return `
    <div class="relative">
      <button class="px-3 py-2 bg-gray-700 text-white rounded hover:bg-gray-600 flex items-center gap-1" 
              onclick="toggleActionsMenu('${clientCode}')" 
              id="actions-btn-${clientCode}">
        <span class="text-sm">–î—ñ—ó</span>
        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z"/>
        </svg>
      </button>
      <div class="absolute top-full left-0 mt-1 bg-white rounded-lg shadow-lg border border-gray-200 min-w-40 z-50 hidden" 
           id="actions-menu-${clientCode}">
        <button class="w-full px-4 py-2 text-left text-gray-700 hover:bg-gray-100 flex items-center gap-2 border-b" 
                onclick="quickAction('${clientCode}', 'call')">
          üìû –î–∑–≤—ñ–Ω–æ–∫
        </button>
        <button class="w-full px-4 py-2 text-left text-gray-700 hover:bg-gray-100 flex items-center gap-2 border-b" 
                onclick="quickAction('${clientCode}', 'meeting')">
          ü§ù –ó—É—Å—Ç—Ä—ñ—á
        </button>
        <button class="w-full px-4 py-2 text-left text-gray-700 hover:bg-gray-100 flex items-center gap-2 border-b" 
                onclick="quickAction('${clientCode}', 'email')">
          üìß Email
        </button>
        <button class="w-full px-4 py-2 text-left text-gray-700 hover:bg-gray-100 flex items-center gap-2 border-b" 
                onclick="quickAction('${clientCode}', 'proposal')">
          üìÑ –ö–æ–º–µ—Ä—Ü—ñ–π–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è
        </button>
        <button class="w-full px-4 py-2 text-left text-gray-700 hover:bg-gray-100 flex items-center gap-2 rounded-b-lg" 
                onclick="changeClientStatus('${clientCode}')">
          üîÑ –ó–º—ñ–Ω–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å
        </button>
      </div>
    </div>
  `;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π
window.toggleActionsMenu = function(clientCode) {
  const menu = document.getElementById(`actions-menu-${clientCode}`);
  const button = document.getElementById(`actions-btn-${clientCode}`);
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –¥—Ä—É–≥–∏–µ –º–µ–Ω—é
  document.querySelectorAll('[id^="actions-menu-"]').forEach(otherMenu => {
    if (otherMenu.id !== `actions-menu-${clientCode}`) {
      otherMenu.classList.add('hidden');
    }
  });
  
  // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –º–µ–Ω—é
  menu.classList.toggle('hidden');
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
  if (!menu.classList.contains('hidden')) {
    const closeMenu = (e) => {
      if (!button.contains(e.target) && !menu.contains(e.target)) {
        menu.classList.add('hidden');
        document.removeEventListener('click', closeMenu);
      }
    };
    setTimeout(() => document.addEventListener('click', closeMenu), 0);
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∫–ª–∏–µ–Ω—Ç–∞
window.changeClientStatus = async function(clientCode) {
  const currentStatus = getClientAlertStatus(clientCode);
  
  const statusOptions = [
    { value: 'new', label: 'üÜï –ù–æ–≤–∏–π' },
    { value: 'in_progress', label: 'üîÑ –í —Ä–æ–±–æ—Ç—ñ' },
    { value: 'resolved', label: '‚úÖ –í–∏—Ä—ñ—à–µ–Ω–æ' },
    { value: 'closed', label: 'üóÇÔ∏è –ó–∞–∫—Ä–∏—Ç–æ' }
  ];
  
  const modal = document.createElement('div');
  modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[200]';
  modal.innerHTML = `
    <div class="bg-gray-800 rounded-lg p-6 max-w-md w-full mx-4">
      <h3 class="text-xl font-bold text-white mb-4">–ó–º—ñ–Ω–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –∫–ª—ñ—î–Ω—Ç–∞</h3>
      <p class="text-gray-300 mb-4">–ö–ª—ñ—î–Ω—Ç: <strong>${getClientName(clientCode, clientCode)}</strong></p>
      <p class="text-gray-300 mb-4">–ü–æ—Ç–æ—á–Ω–∏–π —Å—Ç–∞—Ç—É—Å: <strong>${statusOptions.find(s => s.value === currentStatus)?.label || currentStatus}</strong></p>
      
      <div class="space-y-2 mb-6">
        ${statusOptions.map(option => `
          <label class="flex items-center space-x-3 cursor-pointer">
            <input type="radio" name="status" value="${option.value}" 
                   ${option.value === currentStatus ? 'checked' : ''} 
                   class="text-indigo-600">
            <span class="text-white">${option.label}</span>
          </label>
        `).join('')}
      </div>
      
      <div class="flex justify-end space-x-3">
        <button onclick="this.closest('.fixed').remove()" 
                class="px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700">
          –°–∫–∞—Å—É–≤–∞—Ç–∏
        </button>
        <button onclick="saveClientStatus('${clientCode}')" 
                class="px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700">
          –ó–±–µ—Ä–µ–≥—Ç–∏
        </button>
      </div>
    </div>
  `;
  
  document.body.appendChild(modal);
  
  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –¥–µ–π—Å—Ç–≤–∏–π
  const menu = document.getElementById(`actions-menu-${clientCode}`);
  if (menu) menu.classList.add('hidden');
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤
function checkAndUpdateClientStatuses() {
  const today = new Date();
  today.setHours(0, 0, 0, 0);
  
  Object.keys(clientActionsData).forEach(clientCode => {
    const clientData = clientActionsData[clientCode];
    if (!clientData || clientData.status === 'resolved' || clientData.status === 'closed') return;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—É—é –¥–∞—Ç—É –∑–∞–∫–∞–∑–∞
    if (clientData.potentialOrderDate) {
      const orderDate = new Date(clientData.potentialOrderDate);
      if (orderDate < today) {
        clientActionsData[clientCode].status = 'resolved';
        alertsLogger.info(`‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç–∞—Ç—É—Å "resolved" –¥–ª—è –∫–ª—ñ—î–Ω—Ç–∞ ${clientCode}`);
      }
    }
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å—Ç–∞—Ç—É—Å–∞ –∫–ª–∏–µ–Ω—Ç–∞
window.saveClientStatus = async function(clientCode) {
  try {
    const selectedStatus = document.querySelector('input[name="status"]:checked')?.value;
    if (!selectedStatus) {
      alert('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∏–±–µ—Ä—ñ—Ç—å —Å—Ç–∞—Ç—É—Å');
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    if (!window.hasPermission || !window.hasPermission('alerts_change_status')) {
      alert('–ü–æ–º–∏–ª–∫–∞: –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è –∑–º—ñ–Ω–∏ —Å—Ç–∞—Ç—É—Å—É');
      return;
    }
    
    const userId = window.state?.currentUserId;
    const companyId = window.state?.currentCompanyId;
    
    if (!userId || !companyId) {
      alert('–ü–æ–º–∏–ª–∫–∞: –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ –∫–æ–º–ø–∞–Ω—ñ—é');
      return;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    if (!clientActionsData[clientCode]) {
      clientActionsData[clientCode] = {
        status: 'new',
        actions: [],
        lastActivity: null,
        potentialOrderDate: null,
        expectedAmount: null
      };
    }
    
    clientActionsData[clientCode].status = selectedStatus;
    clientActionsData[clientCode].lastActivity = new Date().toISOString();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Firebase
    const { db, doc, setDoc, serverTimestamp } = await import('../js/firebase.js');
    const docRef = doc(db, 'companies', companyId, 'clientAlerts', clientCode);
    
    await setDoc(docRef, {
      ...clientActionsData[clientCode],
      updatedAt: serverTimestamp()
    }, { merge: true });
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    document.querySelector('.fixed').remove();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    renderSignals();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showActionNotification(`–°—Ç–∞—Ç—É—Å –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞: ${selectedStatus}`, 'success');
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–º—ñ–Ω–∏ —Å—Ç–∞—Ç—É—Å—É:', error);
    showActionNotification('–ü–æ–º–∏–ª–∫–∞ –∑–º—ñ–Ω–∏ —Å—Ç–∞—Ç—É—Å—É: ' + error.message, 'error');
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏ AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
window.toggleAIRecommendations = function() {
  const panel = document.getElementById('ai-recommendations-panel');
  if (panel) {
    panel.classList.toggle('hidden');
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –¥–µ—Ç–∞–ª–µ–π –¥–µ–π—Å—Ç–≤–∏–π –ø–æ –¥–∞—Ç–µ
window.toggleActionDetails = function(safeId) {
  const details = document.getElementById(safeId);
  const arrow = document.getElementById(`arrow-${safeId}`);
  
  if (!details || !arrow) return;
  
  // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å
  details.classList.toggle('hidden');
  
  // –ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Å—Ç—Ä–µ–ª–∫—É
  if (details.classList.contains('hidden')) {
    arrow.style.transform = 'rotate(0deg)';
  } else {
    arrow.style.transform = 'rotate(90deg)';
  }
};

// –°–¢–ê–†–ê–Ø –§–£–ù–ö–¶–ò–Ø (–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –Ω–æ –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ –Ω–æ–≤—ã–µ)
function renderActionButtons(clientCode) {
  return renderActionsMenu(clientCode);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –¥–µ–π—Å—Ç–≤–∏–π –∫–ª–∏–µ–Ω—Ç–∞ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
function renderClientActionsHistory(clientCode) {
  const clientData = clientActionsData[clientCode];
  
  if (!clientData || !clientData.actions || clientData.actions.length === 0) {
    return `
      <div class="text-center text-gray-400 py-8">
        <svg class="w-12 h-12 mx-auto mb-4 text-gray-600" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9zM4 5a2 2 0 012-2v1a1 1 0 001 1h6a1 1 0 001-1V3a2 2 0 012 2v6a2 2 0 01-2 2H6a2 2 0 01-2-2V5zM8 10a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z"/>
        </svg>
        <p class="text-sm">–ü–æ–∫–∏ —â–æ –Ω–µ–º–∞—î –∑–∞–ø–∏—Å–∞–Ω–∏—Ö –¥—ñ–π –ø–æ —Ü—å–æ–º—É –∫–ª—ñ—î–Ω—Ç—É</p>
        <p class="text-xs text-gray-500 mt-1">–î–æ–¥–∞–π—Ç–µ –ø–µ—Ä—à—É –¥—ñ—é —á–µ—Ä–µ–∑ –º–µ–Ω—é "–î—ñ—ó" –≤ —Ç–∞–±–ª–∏—Ü—ñ –∞–ª–µ—Ä—Ç—ñ–≤</p>
      </div>
    `;
  }
  
  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏—è –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)  
  const sortedActions = [...clientData.actions].sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));
  
  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏—è –ø–æ –¥–∞—Ç–∞–º
  const groupedByDate = {};
  sortedActions.forEach(action => {
    const createdDate = new Date(action.createdAt);
    const dateKey = createdDate.toLocaleDateString('uk-UA');
    if (!groupedByDate[dateKey]) {
      groupedByDate[dateKey] = [];
    }
    groupedByDate[dateKey].push(action);
  });
  
  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)
  const sortedDates = Object.keys(groupedByDate).sort((a, b) => {
    const dateA = new Date(a.split('.').reverse().join('-'));
    const dateB = new Date(b.split('.').reverse().join('-'));
    return dateB - dateA;
  });
  
  return `
    <div class="space-y-2">
      <div class="flex justify-between items-center mb-4">
        <h5 class="text-sm font-semibold text-gray-300">–í—Å—å–æ–≥–æ –¥—ñ–π: ${sortedActions.length}</h5>
        <div class="text-xs text-gray-400">
          –°—Ç–∞—Ç—É—Å: ${renderClientStatus(clientCode)}
        </div>
      </div>
      
      ${sortedDates.map(dateKey => {
        const dayActions = groupedByDate[dateKey];
        const safeId = `actions-${clientCode}-${dateKey}`.replace(/[^\w-]/g, '_');
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫–∏ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π –≤ —ç—Ç–æ—Ç –¥–µ–Ω—å
        const dayActionTypes = [...new Set(dayActions.map(a => a.type))];
        const actionIcons = {
          'call': 'üìû',
          'meeting': 'ü§ù', 
          'email': 'üìß',
          'proposal': 'üìÑ'
        };
        const dayIcons = dayActionTypes.map(type => actionIcons[type] || 'üìã').join(' ');
        
        return `
          <div class="bg-gray-800 rounded-lg border border-gray-700">
            <!-- –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–∞—Ç—ã -->
            <div class="flex justify-between items-center p-3 cursor-pointer hover:bg-gray-750 transition-colors" 
                 onclick="toggleActionDetails('${safeId}')">
              <div class="flex items-center gap-3">
                <div class="flex items-center gap-2">
                  <svg class="w-4 h-4 text-gray-400 transition-transform duration-200" id="arrow-${safeId}" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"/>
                  </svg>
                  <span class="font-medium text-white">${dateKey}</span>
                </div>
                <div class="text-lg">${dayIcons}</div>
              </div>
              <div class="flex items-center gap-3">
                <span class="text-xs px-2 py-1 bg-blue-600/20 text-blue-300 rounded-full">
                  ${dayActions.length} ${dayActions.length === 1 ? '–¥—ñ—è' : dayActions.length < 5 ? '–¥—ñ—ó' : '–¥—ñ–π'}
                </span>
                <span class="text-xs text-gray-500">
                  ${dayActions[0] ? new Date(dayActions[0].createdAt).toLocaleTimeString('uk-UA', { hour: '2-digit', minute: '2-digit' }) : ''}
                  ${dayActions.length > 1 ? ` - ${new Date(dayActions[dayActions.length-1].createdAt).toLocaleTimeString('uk-UA', { hour: '2-digit', minute: '2-digit' })}` : ''}
                </span>
              </div>
            </div>
            
            <!-- –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (—Å–∫—Ä—ã—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é) -->
            <div id="${safeId}" class="hidden border-t border-gray-700">
              ${dayActions.map((action, index) => {
                const actionLabels = {
                  'call': '–î–∑–≤—ñ–Ω–æ–∫',
                  'meeting': '–ó—É—Å—Ç—Ä—ñ—á',
                  'email': 'Email',
                  'proposal': '–ö–æ–º–µ—Ä—Ü—ñ–π–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è'
                };
                
                const createdDate = new Date(action.createdAt);
                const formattedTime = createdDate.toLocaleTimeString('uk-UA', { hour: '2-digit', minute: '2-digit' });
                
                return `
                  <div class="p-3 ${index < dayActions.length - 1 ? 'border-b border-gray-700/50' : ''} bg-gray-750/30">
                    <div class="flex justify-between items-start mb-2">
                      <div class="flex items-center gap-2">
                        <span class="text-base">${actionIcons[action.type] || 'üìã'}</span>
                        <span class="font-medium text-gray-200">${actionLabels[action.type] || action.type}</span>
                      </div>
                      <div class="text-xs text-gray-500">
                        ${formattedTime}
                      </div>
                    </div>
                    
                    ${action.comment ? `
                      <div class="mb-2 ml-6">
                        <span class="text-xs text-gray-400">–ö–æ–º–µ–Ω—Ç–∞—Ä:</span>
                        <p class="text-sm text-gray-300 mt-1">${action.comment}</p>
                      </div>
                    ` : ''}
                    
                    ${action.nextAction ? `
                      <div class="mb-2 ml-6">
                        <span class="text-xs text-gray-400">–ù–∞—Å—Ç—É–ø–Ω–∞ –¥—ñ—è:</span>
                        <p class="text-sm text-blue-300">${action.nextAction}</p>
                        ${action.nextActionDate ? `<span class="text-xs text-gray-500">–Ω–∞ ${action.nextActionDate}</span>` : ''}
                      </div>
                    ` : ''}
                  </div>
                `;
              }).join('')}
            </div>
          </div>
        `;
      }).join('')}
      
      ${clientData.potentialOrderDate ? `
        <div class="bg-green-900/30 border border-green-600 rounded-lg p-3 mt-4">
          <div class="flex items-center gap-2 mb-1">
            <span class="text-green-400">üéØ</span>
            <span class="font-medium text-green-200">–ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</span>
          </div>
          <p class="text-sm text-gray-200">
            –î–∞—Ç–∞: <span class="text-green-300">${clientData.potentialOrderDate}</span>
            ${clientData.expectedAmount ? ` ‚Ä¢ –°—É–º–∞: <span class="text-green-300">${clientData.expectedAmount} –≥—Ä–Ω</span>` : ''}
          </p>
        </div>
      ` : ''}
    </div>
  `;
}

/**
 * –ë—ã—Å—Ç—Ä–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ –∫–ª–∏–µ–Ω—Ç—É
 */
window.quickAction = function(clientCode, actionType) {
  alertsLogger.info(`üöÄ –®–≤–∏–¥–∫–∞ –¥—ñ—è: ${actionType} –¥–ª—è –∫–ª—ñ—î–Ω—Ç–∞ ${clientCode}`);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –¥–µ—Ç–∞–ª–µ–π –¥–µ–π—Å—Ç–≤–∏—è
  showActionModal(clientCode, actionType);
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è
 */
function showActionModal(clientCode, actionType) {
  const oldModal = document.getElementById('action-modal');
  if (oldModal) oldModal.remove();
  
  const actionLabels = {
    'call': 'üìû –î–∑–≤—ñ–Ω–æ–∫',
    'meeting': 'ü§ù –ó—É—Å—Ç—Ä—ñ—á', 
    'email': 'üìß –õ–∏—Å—Ç',
    'proposal': 'üìÑ –ö–æ–º–µ—Ä—Ü—ñ–π–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è',
    'other': 'üìù –Ü–Ω—à–µ'
  };
  
  const clientName = getClientName(clientCode, '');
  
  const modal = document.createElement('div');
  modal.id = 'action-modal';
  modal.className = 'fixed inset-0 z-[110] flex items-center justify-center bg-black bg-opacity-60';
  modal.innerHTML = `
    <div class="bg-gray-800 rounded-xl shadow-2xl p-6 w-full max-w-md relative">
      <button id="close-action-modal" class="absolute top-4 right-4 text-gray-400 hover:text-white text-xl">&times;</button>
      
      <h3 class="text-xl font-bold text-white mb-4">
        ${actionLabels[actionType] || actionLabels.other}
      </h3>
      
      <div class="mb-4">
        <p class="text-gray-300 text-sm mb-2">–ö–ª—ñ—î–Ω—Ç: <span class="text-indigo-400 font-medium">${clientName || clientCode}</span></p>
      </div>
      
      <form id="action-form" class="space-y-4">
        <div>
          <label class="block text-sm font-medium text-gray-300 mb-2">–ö–æ–º–µ–Ω—Ç–∞—Ä</label>
          <textarea id="action-comment" 
                    class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-indigo-500" 
                    rows="3" 
                    placeholder="–û–ø–∏—à—ñ—Ç—å —â–æ –±—É–ª–æ –∑—Ä–æ–±–ª–µ–Ω–æ..."></textarea>
        </div>
        
        <div>
          <label class="block text-sm font-medium text-gray-300 mb-2">–ù–∞—Å—Ç—É–ø–Ω–∞ –¥—ñ—è</label>
          <select id="next-action" 
                  class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-indigo-500">
            <option value="">–ù–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ</option>
            <option value="call">–î–∑–≤—ñ–Ω–æ–∫</option>
            <option value="meeting">–ó—É—Å—Ç—Ä—ñ—á</option>
            <option value="email">–õ–∏—Å—Ç</option>
            <option value="proposal">–ö–æ–º–µ—Ä—Ü—ñ–π–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è</option>
            <option value="other">–Ü–Ω—à–µ</option>
          </select>
        </div>
        
        <div id="next-action-date-container" class="hidden">
          <label class="block text-sm font-medium text-gray-300 mb-2">–î–∞—Ç–∞ –Ω–∞—Å—Ç—É–ø–Ω–æ—ó –¥—ñ—ó</label>
          <input type="date" id="next-action-date" 
                 class="w-full px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-indigo-500">
        </div>
        
        <div>
          <label class="block text-sm font-medium text-gray-300 mb-2">–ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</label>
          <div class="grid grid-cols-2 gap-2">
            <input type="date" id="potential-order-date" 
                   class="px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-indigo-500"
                   placeholder="–î–∞—Ç–∞">
            <input type="number" id="potential-amount" 
                   class="px-3 py-2 bg-gray-700 border border-gray-600 rounded-md text-white focus:outline-none focus:ring-2 focus:ring-indigo-500"
                   placeholder="–°—É–º–∞">
          </div>
        </div>
        
        <div class="flex gap-3">
          <button type="submit" 
                  class="flex-1 px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500">
            –ó–±–µ—Ä–µ–≥—Ç–∏
          </button>
          <button type="button" id="cancel-action" 
                  class="px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500">
            –°–∫–∞—Å—É–≤–∞—Ç–∏
          </button>
        </div>
      </form>
    </div>
  `;
  
  document.body.appendChild(modal);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  const closeModal = () => modal.remove();
  document.getElementById('close-action-modal').onclick = closeModal;
  document.getElementById('cancel-action').onclick = closeModal;
  modal.onclick = (e) => { if (e.target === modal) closeModal(); };
  
  // –ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –ø–æ–ª–µ –¥–∞—Ç—ã —Å–ª–µ–¥—É—é—â–µ–π –∞–∫—Ü–∏–∏
  document.getElementById('next-action').onchange = function() {
    const container = document.getElementById('next-action-date-container');
    if (this.value) {
      container.classList.remove('hidden');
    } else {
      container.classList.add('hidden');
    }
  };
  
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã
  document.getElementById('action-form').onsubmit = function(e) {
    e.preventDefault();
    saveClientAction(clientCode, actionType);
    closeModal();
  };
  }

  // === NEW: –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –¥–æ–º–æ–≤–ª–µ–Ω–æ—Å—Ç–µ–π ===
  function renderOverdueAgreements() {
    const now = new Date();
    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());
    
    // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏
    const overdueClients = [];
    
    Object.keys(clientActionsData).forEach(clientCode => {
      const clientData = clientActionsData[clientCode];
      if (!clientData || !clientData.actions) return;
      
      // –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è —Å nextActionDate
      const actionsWithDates = clientData.actions.filter(action => 
        action.nextActionDate && action.status !== 'cancelled'
      );
      
      if (actionsWithDates.length === 0) return;
      
      // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–≤–µ—Ä—Ö—É)
      actionsWithDates.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));
      
      // –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
      const latestAction = actionsWithDates[0];
      const actionDate = new Date(latestAction.nextActionDate);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–æ –ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ
      if (actionDate < today) {
        const daysPastDue = Math.floor((today - actionDate) / (1000 * 60 * 60 * 24));
        
        // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∏–µ–Ω—Ç–µ –∏–∑ –ø—Ä–æ–¥–∞–∂ –∏–ª–∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞
        const clientName = getClientName(clientCode, clientCode);
        const clientLink = clientLinks[clientCode];
        
        overdueClients.push({
          code: clientCode,
          name: clientName,
          link: clientLink,
          plannedDate: latestAction.nextActionDate,
          plannedAction: latestAction.nextAction,
          daysPastDue: daysPastDue,
          lastComment: latestAction.comment || '',
          status: clientData.status || 'new',
          potentialOrderDate: clientData.potentialOrderDate,
          expectedAmount: clientData.expectedAmount
        });
      }
    });
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –¥–Ω–µ–π (—Å–∞–º—ã–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ —Å–≤–µ—Ä—Ö—É)
    const sortedOverdue = overdueClients.sort((a, b) => b.daysPastDue - a.daysPastDue);
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
    const filteredOverdue = window.alertsFilterClients(sortedOverdue);
    
    // –†–µ–Ω–¥–µ—Ä–∏–º —Ç–∞–±–ª–∏—Ü—É
    const content = window.alertsGet('alerts-content-container');
    if (!content) return;
    
    if (filteredOverdue.length === 0) {
      content.innerHTML = `
        <div class="text-center py-12">
          <div class="text-6xl mb-4">üéâ</div>
          <h2 class="text-2xl font-bold text-white mb-2">–í—ñ–¥–º—ñ–Ω–Ω–æ! –ù–µ–º–∞—î –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–∏—Ö –¥–æ–º–æ–≤–ª–µ–Ω–æ—Å—Ç–µ–π</h2>
          <p class="text-gray-400">–í—Å—ñ –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω—ñ –¥—ñ—ó –≤–∏–∫–æ–Ω–∞–Ω—ñ –≤—á–∞—Å–Ω–æ –∞–±–æ —â–µ –Ω–µ –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω—ñ</p>
        </div>
      `;
      return;
    }
    
    content.innerHTML = `
              <div class="flex justify-between items-center mb-6">
          <div>
            <h2 class="text-2xl font-bold text-white">–ü—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω—ñ –¥–æ–º–æ–≤–ª–µ–Ω–æ—Å—Ç—ñ</h2>
            <p class="text-gray-400 mt-1">–ö–ª—ñ—î–Ω—Ç–∏ –∑ –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–∏–∏–º–∏ –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–∏–º–∏ –¥—ñ—è–º–∏</p>
          </div>
          <div class="flex items-center gap-4">
            <div class="text-sm text-gray-300">
              <span class="text-red-400 font-semibold">${filteredOverdue.length}</span> 
              ${filteredOverdue.length === 1 ? '–ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–∞ –¥–æ–º–æ–≤–ª–µ–Ω—ñ—Å—Ç—å' : 
                filteredOverdue.length < 5 ? '–ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω—ñ –¥–æ–º–æ–≤–ª–µ–Ω–æ—Å—Ç—ñ' : '–ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–∏—Ö –¥–æ–º–æ–≤–ª–µ–Ω–æ—Å—Ç–µ–π'}
            </div>
          </div>
        </div>
        
        <!-- –û–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ -->
        <div class="bg-gray-700 rounded-lg p-4 mb-6">
          <h3 class="text-lg font-semibold text-white mb-3">üìã –û–ø–∏—Å —Å—Ç–∞—Ç—É—Å—ñ–≤ –∫–ª—ñ—î–Ω—Ç—ñ–≤:</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-3 text-sm">
            <div class="flex items-center gap-2">
              <span class="px-2 py-1 rounded bg-red-600 text-white text-xs">üÜï –ù–æ–≤–∏–π</span>
              <span class="text-gray-300">–ö–ª—ñ—î–Ω—Ç —â–æ–π–Ω–æ –¥–æ–¥–∞–Ω–∏–π –¥–æ —Å–∏—Å—Ç–µ–º–∏, —â–µ –Ω–µ –ø—Ä–∞—Ü—é–≤–∞–ª–∏</span>
            </div>
            <div class="flex items-center gap-2">
              <span class="px-2 py-1 rounded bg-yellow-600 text-white text-xs">üîÑ –í —Ä–æ–±–æ—Ç—ñ</span>
              <span class="text-gray-300">–ê–∫—Ç–∏–≤–Ω–∞ —Ä–æ–±–æ—Ç–∞ –∑ –∫–ª—ñ—î–Ω—Ç–æ–º, —î –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω—ñ –¥—ñ—ó</span>
            </div>
            <div class="flex items-center gap-2">
              <span class="px-2 py-1 rounded bg-green-600 text-white text-xs">‚úÖ –í–∏—Ä—ñ—à–µ–Ω–æ</span>
              <span class="text-gray-300">–ü—Ä–æ–±–ª–µ–º–∞ –≤–∏—Ä—ñ—à–µ–Ω–∞ –∞–±–æ –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω–∏–π –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ –º–∏–Ω—É–ª–æ–º—É</span>
            </div>
            <div class="flex items-center gap-2">
              <span class="px-2 py-1 rounded bg-gray-600 text-white text-xs">üóÇÔ∏è –ó–∞–∫—Ä–∏—Ç–æ</span>
              <span class="text-gray-300">–ö–ª—ñ—î–Ω—Ç –∑–∞–∫—Ä–∏—Ç–∏–π, —Ä–æ–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</span>
            </div>
          </div>
        </div>
      
      <div class="overflow-x-auto">
        <table class="min-w-full text-sm">
          <thead>
            <tr class="border-b border-gray-700">
              <th class="px-4 py-3 text-left text-gray-300 font-medium">–ö–ª—ñ—î–Ω—Ç</th>
              <th class="px-4 py-3 text-left text-gray-300 font-medium">–ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–µ</th>
              <th class="px-4 py-3 text-left text-gray-300 font-medium">–î–∞—Ç–∞</th>
              <th class="px-4 py-3 text-left text-gray-300 font-medium">–ü—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–æ</th>
              <th class="px-4 py-3 text-left text-gray-300 font-medium">CRM</th>
              <th class="px-4 py-3 text-left text-gray-300 font-medium">–°—Ç–∞—Ç—É—Å</th>
              <th class="px-4 py-3 text-left text-gray-300 font-medium">–î—ñ—ó</th>
              <th class="px-4 py-3 text-left text-gray-300 font-medium">–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ</th>
            </tr>
          </thead>
          <tbody class="divide-y divide-gray-700">
            ${filteredOverdue.map(client => {
              const urgencyClass = client.daysPastDue > 7 ? 'bg-red-900/30' : 
                                   client.daysPastDue > 3 ? 'bg-orange-900/30' : 'bg-yellow-900/30';
              const urgencyIcon = client.daysPastDue > 7 ? 'üö®' : 
                                  client.daysPastDue > 3 ? '‚ö†Ô∏è' : '‚è∞';
              
              return `
                <tr class="hover:bg-gray-800/50 transition-colors ${urgencyClass}">
                  <td class="px-4 py-3">
                    <div class="flex items-center gap-2">
                      <span class="text-lg">${urgencyIcon}</span>
                      <div>
                        <div class="font-medium text-white">${client.name}</div>
                        <div class="text-xs text-gray-400">${client.code}</div>
                      </div>
                    </div>
                  </td>
                  <td class="px-4 py-3">
                    <div class="text-gray-200">${client.plannedAction}</div>
                    ${client.lastComment ? `<div class="text-xs text-gray-400 mt-1">${client.lastComment}</div>` : ''}
                  </td>
                  <td class="px-4 py-3 text-gray-300">${client.plannedDate}</td>
                  <td class="px-4 py-3">
                    <span class="px-2 py-1 rounded text-xs font-medium ${
                      client.daysPastDue > 7 ? 'bg-red-600 text-white' :
                      client.daysPastDue > 3 ? 'bg-orange-600 text-white' : 
                      'bg-yellow-600 text-black'
                    }">
                      ${client.daysPastDue} ${client.daysPastDue === 1 ? '–¥–µ–Ω—å' : 
                        client.daysPastDue < 5 ? '–¥–Ω—ñ' : '–¥–Ω—ñ–≤'}
                    </span>
                  </td>
                  <td class="px-4 py-3">
                    ${client.link ? `<a href="${client.link}" target="_blank" class="text-blue-400 hover:text-blue-300 underline">CRM</a>` : ''}
                  </td>
                  <td class="px-4 py-3">${renderClientStatus(client.code)}</td>
                  <td class="px-4 py-3">${renderActionsMenu(client.code)}</td>
                  <td class="px-4 py-3">
                    <button class="px-3 py-1 bg-gray-700 text-gray-200 rounded hover:bg-gray-600 text-sm" 
                            onclick="window.showClientDetail('${client.code}')">
                      –î–µ—Ç–∞–ª—å–Ω—ñ—à–µ
                    </button>
                  </td>
                </tr>
              `;
            }).join('')}
          </tbody>
        </table>
      </div>
      
      ${filteredOverdue.length > 0 ? `
        <div class="mt-6 p-4 bg-blue-900/20 border border-blue-600 rounded-lg">
          <div class="flex items-center gap-2 mb-2">
            <span class="text-blue-400">üí°</span>
            <span class="font-medium text-blue-200">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:</span>
          </div>
          <ul class="text-sm text-blue-300 space-y-1 ml-6">
            <li>‚Ä¢ –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑ –Ω–∞–π–±—ñ–ª—å—à–æ—é –ø—Ä–æ—Å—Ç—Ä–æ—á–∫–æ—é –≤ –ø–µ—Ä—à—É —á–µ—Ä–≥—É</li>
            <li>‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –≥–∞–º–±—É—Ä–≥–µ—Ä –º–µ–Ω—é "–î—ñ—ó" –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö –ø–ª–∞–Ω—ñ–≤</li>
            <li>‚Ä¢ –û–Ω–æ–≤—ñ—Ç—å —Å—Ç–∞—Ç—É—Å –∫–ª—ñ—î–Ω—Ç—ñ–≤ –ø—ñ—Å–ª—è –∫–æ–Ω—Ç–∞–∫—Ç—É</li>
          </ul>
        </div>
      ` : ''}
    `;
  }

  // === NEW: –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ ===
  function renderManagerAnalytics() {
    const content = window.alertsGet('alerts-content-container');
    if (!content) return;
    
    // –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º
    const managerStats = {};
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –≤—Å–µ—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    managersData.forEach(manager => {
      managerStats[manager.id] = {
        id: manager.id,
        name: manager.name,
        department: manager.department?.name || manager.department || '–ù–µ–≤—ñ–¥–æ–º–∏–π –≤—ñ–¥–¥—ñ–ª',
        totalClients: 0,
        activeClients: 0,
        resolvedClients: 0,
        closedClients: 0,
        overdueActions: 0,
        totalActions: 0,
        potentialOrders: 0,
        potentialAmount: 0,
        avgResponseTime: 0,
        conversionRate: 0,
        lastActivityDate: null
      };
    });
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º
    Object.keys(clientActionsData).forEach(clientCode => {
      const clientData = clientActionsData[clientCode];
      if (!clientData || !clientData.actions || clientData.actions.length === 0) return;
      
      // –ù–∞—Ö–æ–¥–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —ç—Ç–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
      const clientInfo = clientManagerDirectory[clientCode];
      if (!clientInfo || !clientInfo.manager) return;
      
      // –ò—â–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤ —Å–ø–∏—Å–∫–µ
      const manager = managersData.find(m => m.name === clientInfo.manager);
      if (!manager || !managerStats[manager.id]) return;
      
      const stats = managerStats[manager.id];
      
      // –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
      stats.totalClients++;
      stats.totalActions += clientData.actions.length;
      
      // –°—Ç–∞—Ç—É—Å –∫–ª–∏–µ–Ω—Ç–∞
      const status = clientData.status || 'new';
      if (status === 'in_progress') stats.activeClients++;
      else if (status === 'resolved') stats.resolvedClients++;
      else if (status === 'closed') stats.closedClients++;
      
      // –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∑–∞–∫–∞–∑—ã
      if (clientData.potentialOrderDate) {
        stats.potentialOrders++;
        if (clientData.expectedAmount) {
          stats.potentialAmount += clientData.expectedAmount;
        }
      }
      
      // –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
      const now = new Date();
      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());
      
      const actionsWithDates = clientData.actions.filter(action => 
        action.nextActionDate && action.status !== 'cancelled'
      );
      
      if (actionsWithDates.length > 0) {
        actionsWithDates.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));
        const latestAction = actionsWithDates[0];
        const actionDate = new Date(latestAction.nextActionDate);
        
        if (actionDate < today) {
          stats.overdueActions++;
        }
      }
      
      // –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
      if (clientData.lastActivity) {
        const activityDate = new Date(clientData.lastActivity);
        if (!stats.lastActivityDate || activityDate > stats.lastActivityDate) {
          stats.lastActivityDate = activityDate;
        }
      }
    });
    
    // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
    Object.values(managerStats).forEach(stats => {
      if (stats.totalClients > 0) {
        stats.conversionRate = ((stats.resolvedClients / stats.totalClients) * 100).toFixed(1);
      }
    });
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –ø–æ –æ–±—â–µ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    const sortedManagers = Object.values(managerStats)
      .filter(stats => stats.totalClients > 0)
      .sort((a, b) => {
        // –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞: –∫–æ–Ω–≤–µ—Ä—Å–∏—è * –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ - –ø—Ä–æ—Å—Ä–æ—á–∫–∞
        const scoreA = (parseFloat(a.conversionRate) * a.totalClients) - (a.overdueActions * 10);
        const scoreB = (parseFloat(b.conversionRate) * b.totalClients) - (b.overdueActions * 10);
        return scoreB - scoreA;
      });
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
    const filteredManagers = sortedManagers.filter(manager => {
      if (currentDepartment) {
        const managerData = managersData.find(m => m.id === manager.id);
        if (managerData) {
          return managerData.departmentId === currentDepartment ||
                 managerData.department === currentDepartment ||
                 (managerData.department && managerData.department.id === currentDepartment);
        }
        return false;
      }
      if (currentManager) {
        return manager.id === currentManager;
      }
      return true;
    });
    
    content.innerHTML = `
      <div class="flex justify-between items-center mb-6">
        <div>
          <h2 class="text-2xl font-bold text-white">–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤</h2>
          <p class="text-gray-400 mt-1">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–æ–±–æ—Ç–∏ –∑ –∫–ª—ñ—î–Ω—Ç–∞–º–∏ –ø–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º</p>
        </div>
        <div class="text-sm text-gray-300">
          <span class="text-blue-400 font-semibold">${filteredManagers.length}</span> 
          ${filteredManagers.length === 1 ? '–º–µ–Ω–µ–¥–∂–µ—Ä' : 
            filteredManagers.length < 5 ? '–º–µ–Ω–µ–¥–∂–µ—Ä–∏' : '–º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤'} –≤ —Ä–æ–±–æ—Ç—ñ
        </div>
      </div>
      
      ${filteredManagers.length === 0 ? `
        <div class="text-center py-12">
          <div class="text-6xl mb-4">üìä</div>
          <h2 class="text-2xl font-bold text-white mb-2">–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É</h2>
          <p class="text-gray-400">–í–∏–±–µ—Ä—ñ—Ç—å —ñ–Ω—à—ñ —Ñ—ñ–ª—å—Ç—Ä–∏ –∞–±–æ –¥–æ—á–µ–∫–∞–π—Ç–µ—Å—è –Ω–∞–∫–æ–ø–∏—á–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö</p>
        </div>
      ` : `
        <!-- –¢–æ–ø-3 –º–µ–Ω–µ–¥–∂–µ—Ä–∞ -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
          ${filteredManagers.slice(0, 3).map((manager, index) => {
            const medals = ['ü•á', 'ü•à', 'ü•â'];
            const colors = ['from-yellow-600 to-yellow-700', 'from-gray-500 to-gray-600', 'from-orange-600 to-orange-700'];
            
            return `
              <div class="bg-gradient-to-br ${colors[index]} rounded-lg p-4 text-white">
                <div class="flex items-center justify-between mb-3">
                  <span class="text-2xl">${medals[index]}</span>
                  <span class="text-xs px-2 py-1 bg-white/20 rounded-full">#${index + 1}</span>
                </div>
                <h3 class="font-bold text-lg mb-1">${manager.name}</h3>
                <p class="text-xs opacity-75 mb-3">${manager.department}</p>
                <div class="grid grid-cols-2 gap-2 text-xs">
                  <div>
                    <p class="opacity-75">–ö–ª—ñ—î–Ω—Ç—ñ–≤</p>
                    <p class="font-bold text-lg">${manager.totalClients}</p>
                  </div>
                  <div>
                    <p class="opacity-75">–ö–æ–Ω–≤–µ—Ä—Å—ñ—è</p>
                    <p class="font-bold text-lg">${manager.conversionRate}%</p>
                  </div>
                </div>
              </div>
            `;
          }).join('')}
        </div>
        
        <!-- –î–µ—Ç–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ -->
        <div class="bg-gray-700 rounded-lg overflow-hidden">
          <div class="overflow-x-auto">
            <table class="min-w-full text-sm">
              <thead class="bg-gray-800">
                <tr>
                  <th class="px-4 py-3 text-left text-gray-300 font-medium">–ú–µ–Ω–µ–¥–∂–µ—Ä</th>
                  <th class="px-4 py-3 text-center text-gray-300 font-medium">–ö–ª—ñ—î–Ω—Ç—ñ–≤</th>
                  <th class="px-4 py-3 text-center text-gray-300 font-medium">–ê–∫—Ç–∏–≤–Ω–∏—Ö</th>
                  <th class="px-4 py-3 text-center text-gray-300 font-medium">–í–∏—Ä—ñ—à–µ–Ω–æ</th>
                  <th class="px-4 py-3 text-center text-gray-300 font-medium">–ö–æ–Ω–≤–µ—Ä—Å—ñ—è</th>
                  <th class="px-4 py-3 text-center text-gray-300 font-medium">–ü—Ä–æ—Å—Ç—Ä–æ—á–∫–∞</th>
                  <th class="px-4 py-3 text-center text-gray-300 font-medium">–ü–æ—Ç–µ–Ω—Ü—ñ–∞–ª</th>
                  <th class="px-4 py-3 text-center text-gray-300 font-medium">–û—Å—Ç–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å</th>
                </tr>
              </thead>
              <tbody class="divide-y divide-gray-600">
                ${filteredManagers.map((manager, index) => {
                  const conversionColor = parseFloat(manager.conversionRate) >= 70 ? 'text-green-400' :
                                         parseFloat(manager.conversionRate) >= 50 ? 'text-yellow-400' : 'text-red-400';
                  
                  const overdueColor = manager.overdueActions === 0 ? 'text-green-400' :
                                      manager.overdueActions <= 2 ? 'text-yellow-400' : 'text-red-400';
                  
                  const lastActivity = manager.lastActivityDate ? 
                    manager.lastActivityDate.toLocaleDateString('uk-UA') : '–ù–µ–º–∞—î';
                  
                  return `
                    <tr class="hover:bg-gray-600/50 transition-colors">
                      <td class="px-4 py-3">
                        <div class="flex items-center gap-2">
                          <span class="text-lg">${index < 3 ? ['ü•á', 'ü•à', 'ü•â'][index] : 'üë§'}</span>
                          <div>
                            <div class="font-medium text-white">${manager.name}</div>
                            <div class="text-xs text-gray-400">${manager.department}</div>
                          </div>
                        </div>
                      </td>
                      <td class="px-4 py-3 text-center text-white font-medium">${manager.totalClients}</td>
                      <td class="px-4 py-3 text-center text-yellow-400">${manager.activeClients}</td>
                      <td class="px-4 py-3 text-center text-green-400">${manager.resolvedClients}</td>
                      <td class="px-4 py-3 text-center ${conversionColor} font-bold">${manager.conversionRate}%</td>
                      <td class="px-4 py-3 text-center ${overdueColor} font-medium">${manager.overdueActions}</td>
                      <td class="px-4 py-3 text-center">
                        <div class="text-white font-medium">${manager.potentialOrders}</div>
                        ${manager.potentialAmount > 0 ? `
                          <div class="text-xs text-green-300">~${(manager.potentialAmount / 1000).toFixed(0)}k –≥—Ä–Ω</div>
                        ` : ''}
                      </td>
                      <td class="px-4 py-3 text-center text-gray-300 text-xs">${lastActivity}</td>
                    </tr>
                  `;
                }).join('')}
              </tbody>
            </table>
          </div>
        </div>
        
        <!-- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ -->
        <div class="mt-6 grid grid-cols-1 md:grid-cols-2 gap-4">
          <div class="bg-blue-900/20 border border-blue-600 rounded-lg p-4">
            <div class="flex items-center gap-2 mb-2">
              <span class="text-blue-400">üèÜ</span>
              <span class="font-medium text-blue-200">–õ—ñ–¥–µ—Ä–∏ –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ:</span>
            </div>
            <ul class="text-sm text-blue-300 space-y-1">
              ${filteredManagers.slice(0, 3).map(m => 
                `<li>‚Ä¢ ${m.name} - ${m.conversionRate}% –∫–æ–Ω–≤–µ—Ä—Å—ñ—è, ${m.totalClients} –∫–ª—ñ—î–Ω—Ç—ñ–≤</li>`
              ).join('')}
            </ul>
          </div>
          
          <div class="bg-orange-900/20 border border-orange-600 rounded-lg p-4">
            <div class="flex items-center gap-2 mb-2">
              <span class="text-orange-400">‚ö†Ô∏è</span>
              <span class="font-medium text-orange-200">–ü–æ—Ç—Ä–µ–±—É—é—Ç—å —É–≤–∞–≥–∏:</span>
            </div>
            <ul class="text-sm text-orange-300 space-y-1">
              ${filteredManagers.filter(m => m.overdueActions > 0 || parseFloat(m.conversionRate) < 50)
                .slice(0, 3).map(m => 
                  `<li>‚Ä¢ ${m.name} - ${m.overdueActions > 0 ? `${m.overdueActions} –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω—å` : `${m.conversionRate}% –∫–æ–Ω–≤–µ—Ä—Å—ñ—è`}</li>`
                ).join('') || '<li>‚Ä¢ –í—Å—ñ –º–µ–Ω–µ–¥–∂–µ—Ä–∏ –ø—Ä–∞—Ü—é—é—Ç—å –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ! üéâ</li>'}
            </ul>
          </div>
        </div>
      `}
    `;
     }

  // === NEW: –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π ===
  function initNotificationSystem() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    if (notificationCheckInterval) {
      clearInterval(notificationCheckInterval);
    }
    
    notificationCheckInterval = setInterval(() => {
      checkForNotifications();
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
      checkAndUpdateClientStatuses();
      
      // –û–±–Ω–æ–≤–ª—è–µ–º AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
      if (!lastRecommendationUpdate || (new Date() - lastRecommendationUpdate) > 300000) {
        generateAIRecommendations();
        // –î–æ–¥–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–∞ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó renderDashboard
        if (typeof renderDashboard === 'function') {
          renderDashboard(); // –ü–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–≤–∞–µ–º –¥–∞—à–±–æ—Ä–¥ —Å –Ω–æ–≤—ã–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
        } else {
          console.warn('‚ö†Ô∏è –§—É–Ω–∫—Ü—ñ—è renderDashboard –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ - –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞—à–±–æ—Ä–¥—É');
        }
      }
    }, 30000); // 30 —Å–µ–∫—É–Ω–¥
    
    // –ü–µ—Ä–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ä–∞–∑—É
    setTimeout(() => checkForNotifications(), 2000);
    
    console.log('üîî –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
  }
  
  function checkForNotifications() {
    const now = new Date();
    const notifications = [];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    Object.keys(clientActionsData).forEach(clientCode => {
      const clientData = clientActionsData[clientCode];
      if (!clientData || !clientData.actions) return;
      
      const actionsWithDates = clientData.actions.filter(action => 
        action.nextActionDate && action.status !== 'cancelled'
      );
      
      if (actionsWithDates.length === 0) return;
      
      // –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
      actionsWithDates.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));
      const latestAction = actionsWithDates[0];
      const actionDate = new Date(latestAction.nextActionDate);
      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Å—Ä–æ—á–∫—É
      if (actionDate < today) {
        const daysPastDue = Math.floor((today - actionDate) / (1000 * 60 * 60 * 24));
        const clientName = getClientName(clientCode, clientCode);
        
        notifications.push({
          type: 'overdue',
          priority: daysPastDue > 7 ? 'high' : daysPastDue > 3 ? 'medium' : 'low',
          title: `–ü—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–∞ –¥—ñ—è: ${clientName}`,
          message: `${latestAction.nextAction} –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ –Ω–∞ ${latestAction.nextActionDate} (${daysPastDue} –¥–Ω—ñ–≤ —Ç–æ–º—É)`,
          clientCode: clientCode,
          daysPastDue: daysPastDue
        });
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
      const todayStr = now.toISOString().split('T')[0];
      if (latestAction.nextActionDate === todayStr) {
        const clientName = getClientName(clientCode, clientCode);
        
        notifications.push({
          type: 'today',
          priority: 'medium',
          title: `–°—å–æ–≥–æ–¥–Ω—ñ: ${clientName}`,
          message: `–ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–æ: ${latestAction.nextAction}`,
          clientCode: clientCode
        });
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∑–∞–∫–∞–∑—ã –Ω–∞ –∑–∞–≤—Ç—Ä–∞/–ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞
      if (clientData.potentialOrderDate) {
        const potentialDate = new Date(clientData.potentialOrderDate);
        const tomorrow = new Date(today);
        tomorrow.setDate(today.getDate() + 1);
        const dayAfterTomorrow = new Date(today);
        dayAfterTomorrow.setDate(today.getDate() + 2);
        
        if (potentialDate <= dayAfterTomorrow && potentialDate >= tomorrow) {
          const clientName = getClientName(clientCode, clientCode);
          const daysUntil = Math.floor((potentialDate - today) / (1000 * 60 * 60 * 24));
          
          notifications.push({
            type: 'potential',
            priority: 'high',
            title: `–ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: ${clientName}`,
            message: `–û—á—ñ–∫—É—î—Ç—å—Å—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ${daysUntil === 1 ? '–∑–∞–≤—Ç—Ä–∞' : '–ø—ñ—Å–ª—è–∑–∞–≤—Ç—Ä–∞'}`,
            clientCode: clientCode,
            expectedAmount: clientData.expectedAmount
          });
        }
      }
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    if (notifications.length > 0) {
      showNotificationSummary(notifications);
    }
  }
  
  function showNotificationSummary(notifications) {
    // –§–∏–ª—å—Ç—Ä—É–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
    const uniqueNotifications = notifications.filter((notif, index, arr) => 
      arr.findIndex(n => n.clientCode === notif.clientCode && n.type === notif.type) === index
    );
    
    const priorityOrder = { high: 3, medium: 2, low: 1 };
    uniqueNotifications.sort((a, b) => priorityOrder[b.priority] - priorityOrder[a.priority]);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ–ø-5 —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    const topNotifications = uniqueNotifications.slice(0, 5);
    
    if (topNotifications.length === 0) return;
    
    // –°–æ–∑–¥–∞–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    const notificationElement = document.createElement('div');
    notificationElement.className = `
      fixed top-4 right-4 z-[150] bg-gray-800 border border-gray-600 rounded-lg shadow-xl 
      max-w-sm transition-all duration-300 transform translate-x-full
    `;
    
    const overdueCount = topNotifications.filter(n => n.type === 'overdue').length;
    const todayCount = topNotifications.filter(n => n.type === 'today').length;
    const potentialCount = topNotifications.filter(n => n.type === 'potential').length;
    
    notificationElement.innerHTML = `
      <div class="p-4">
        <div class="flex items-center justify-between mb-3">
          <h3 class="text-lg font-bold text-white flex items-center gap-2">
            <span class="text-2xl">üîî</span>
            –°–ø–æ–≤—ñ—â–µ–Ω–Ω—è
          </h3>
          <button onclick="this.parentElement.parentElement.parentElement.remove()" 
                  class="text-gray-400 hover:text-white">‚úï</button>
        </div>
        
        <div class="space-y-2 mb-4">
          ${overdueCount > 0 ? `
            <div class="flex items-center gap-2 text-red-400 text-sm">
              <span>‚è∞</span>
              <span>${overdueCount} –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω—ñ –¥—ñ—ó</span>
            </div>
          ` : ''}
          ${todayCount > 0 ? `
            <div class="flex items-center gap-2 text-yellow-400 text-sm">
              <span>üìÖ</span>
              <span>${todayCount} –¥—ñ—ó –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ</span>
            </div>
          ` : ''}
          ${potentialCount > 0 ? `
            <div class="flex items-center gap-2 text-green-400 text-sm">
              <span>üéØ</span>
              <span>${potentialCount} –ø–æ—Ç–µ–Ω—Ü—ñ–π–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</span>
            </div>
          ` : ''}
        </div>
        
        <div class="space-y-2 mb-4 max-h-48 overflow-y-auto">
          ${topNotifications.map(notif => `
            <div class="p-2 bg-gray-700 rounded text-sm">
              <div class="font-medium text-white">${notif.title}</div>
              <div class="text-gray-300 text-xs">${notif.message}</div>
              ${notif.expectedAmount ? `
                <div class="text-green-300 text-xs mt-1">~${(notif.expectedAmount / 1000).toFixed(0)}k –≥—Ä–Ω</div>
              ` : ''}
            </div>
          `).join('')}
        </div>
        
        <div class="flex gap-2">
          <button onclick="showAlertsModule('overdue-agreements')" 
                  class="flex-1 px-3 py-2 bg-indigo-600 text-white rounded text-sm hover:bg-indigo-700">
            –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤—Å—ñ
          </button>
          <button onclick="this.parentElement.parentElement.parentElement.remove()" 
                  class="px-3 py-2 bg-gray-600 text-white rounded text-sm hover:bg-gray-700">
            –ó–∞–∫—Ä–∏—Ç–∏
          </button>
        </div>
      </div>
    `;
    
    document.body.appendChild(notificationElement);
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    setTimeout(() => {
      notificationElement.style.transform = 'translateX(0)';
    }, 100);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è –Ω–µ–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    const hasHighPriority = topNotifications.some(n => n.priority === 'high');
    if (!hasHighPriority) {
      setTimeout(() => {
        if (notificationElement.parentElement) {
          notificationElement.style.transform = 'translateX(100%)';
          setTimeout(() => notificationElement.remove(), 300);
        }
      }, 10000);
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –º–æ–¥—É–ª—é —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
  window.showAlertsModule = function(tab = 'overdue-agreements') {
    // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
    document.querySelectorAll('.tab-btn').forEach(btn => {
      btn.classList.remove('active');
    });
    
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
    const alertsBtn = document.querySelector('[data-module="alerts"]');
    if (alertsBtn) {
      alertsBtn.classList.add('active');
      alertsBtn.click();
      
      // –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥—É–ª—è –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –Ω—É–∂–Ω—É—é –≤–∫–ª–∞–¥–∫—É
      setTimeout(() => {
        if (window.setSignal) {
          window.setSignal(tab);
        }
      }, 500);
    }
     };

  // === NEW: –î–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –ø–æ –∫–ª–∏–µ–Ω—Ç–∞–º ===
  function renderClientReports() {
    const content = window.alertsGet('alerts-content-container');
    if (!content) return;
    
    // –°–æ–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –≤—Å–µ–º –∫–ª–∏–µ–Ω—Ç–∞–º —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏
    const clientReports = [];
    
    Object.keys(clientActionsData).forEach(clientCode => {
      const clientData = clientActionsData[clientCode];
      if (!clientData || !clientData.actions || clientData.actions.length === 0) return;
      
      const clientInfo = clientManagerDirectory[clientCode];
      const clientName = getClientName(clientCode, clientCode);
      const clientLink = clientLinks[clientCode];
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏—è –∫–ª–∏–µ–Ω—Ç–∞
      const actions = [...clientData.actions].sort((a, b) => {
        // –î–æ–¥–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–∞ undefined –¥–ª—è createdAt
        const dateA = a && a.createdAt ? new Date(a.createdAt) : new Date(0);
        const dateB = b && b.createdAt ? new Date(b.createdAt) : new Date(0);
        return dateB - dateA;
      });
      const lastAction = actions[0];
      const firstAction = actions[actions.length - 1];
      
      // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –¥–µ–π—Å—Ç–≤–∏–π
      const actionStats = {};
      const actionTypes = ['call', 'meeting', 'email', 'commercial_proposal', 'other'];
      actionTypes.forEach(type => {
        actionStats[type] = actions.filter(a => a.type === type).length;
      });
      
      // –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
      const now = new Date();
      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());
      const overdueActions = actions.filter(action => {
        if (!action.nextActionDate || action.status === 'cancelled') return false;
        const actionDate = new Date(action.nextActionDate);
        return actionDate < today;
      });
      
      // –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–æ–º
      const firstActionDate = firstAction && firstAction.createdAt ? new Date(firstAction.createdAt) : new Date();
      const workingDays = Math.floor((now - firstActionDate) / (1000 * 60 * 60 * 24));
      
      // –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–∞–±–æ—Ç—ã
      const status = clientData.status || 'new';
      const isResolved = status === 'resolved';
      const isActive = status === 'in_progress';
      
      clientReports.push({
        code: clientCode,
        name: clientName,
        manager: clientInfo?.manager || '–ù–µ–≤—ñ–¥–æ–º–∏–π',
        link: clientLink,
        status: status,
        totalActions: actions.length,
        workingDays: workingDays,
        firstActionDate: firstActionDate,
        lastActionDate: new Date(lastAction.createdAt),
        overdueCount: overdueActions.length,
        actionStats: actionStats,
        isResolved: isResolved,
        isActive: isActive,
        potentialOrderDate: clientData.potentialOrderDate,
        expectedAmount: clientData.expectedAmount,
        lastActivity: clientData.lastActivity
      });
    });
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
    let filteredReports = clientReports;
    
    if (currentDepartment || currentManager) {
      filteredReports = filteredReports.filter(report => {
        if (currentManager) {
          const manager = managersData.find(m => m.name === report.manager);
          return manager && manager.id === currentManager;
        }
        if (currentDepartment) {
          const manager = managersData.find(m => m.name === report.manager);
          if (manager) {
            return manager.departmentId === currentDepartment ||
                   manager.department === currentDepartment ||
                   (manager.department && manager.department.id === currentDepartment);
          }
          return false;
        }
        return true;
      });
    }
    
    if (currentStatus) {
      filteredReports = filteredReports.filter(report => report.status === currentStatus);
    }
    
    if (currentSearch) {
      filteredReports = filteredReports.filter(report => 
        report.name.toLowerCase().includes(currentSearch.toLowerCase()) ||
        report.manager.toLowerCase().includes(currentSearch.toLowerCase())
      );
    }
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –¥–Ω–µ–π —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∏–µ–Ω—Ç–æ–º (—Å–∞–º—ã–µ "—Å—Ç–∞—Ä—ã–µ" –∫–ª–∏–µ–Ω—Ç—ã —Å–≤–µ—Ä—Ö—É)
    filteredReports.sort((a, b) => b.workingDays - a.workingDays);
    
    content.innerHTML = `
      <div class="flex justify-between items-center mb-6">
        <div>
          <h2 class="text-2xl font-bold text-white">–î–µ—Ç–∞–ª—å–Ω—ñ –∑–≤—ñ—Ç–∏ –ø–æ –∫–ª—ñ—î–Ω—Ç–∞—Ö</h2>
          <p class="text-gray-400 mt-1">–ü–æ–≤–Ω–∞ —ñ—Å—Ç–æ—Ä—ñ—è –≤–∑–∞—î–º–æ–¥—ñ–π —Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–æ–±–æ—Ç–∏ –∑ –∫–ª—ñ—î–Ω—Ç–∞–º–∏</p>
        </div>
        <div class="text-sm text-gray-300">
          <span class="text-blue-400 font-semibold">${filteredReports.length}</span> 
          ${filteredReports.length === 1 ? '–∫–ª—ñ—î–Ω—Ç' : 
            filteredReports.length < 5 ? '–∫–ª—ñ—î–Ω—Ç–∏' : '–∫–ª—ñ—î–Ω—Ç—ñ–≤'} –∑ —ñ—Å—Ç–æ—Ä—ñ—î—é
        </div>
      </div>
      
      ${filteredReports.length === 0 ? `
        <div class="text-center py-12">
          <div class="text-6xl mb-4">üìã</div>
          <h2 class="text-2xl font-bold text-white mb-2">–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –∑–≤—ñ—Ç—É</h2>
          <p class="text-gray-400">–í–∏–±–µ—Ä—ñ—Ç—å —ñ–Ω—à—ñ —Ñ—ñ–ª—å—Ç—Ä–∏ –∞–±–æ –¥–æ—á–µ–∫–∞–π—Ç–µ—Å—è –Ω–∞–∫–æ–ø–∏—á–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö</p>
        </div>
      ` : `
        <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–≤–µ—Ä—Ö—É -->
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
          <div class="bg-gradient-to-br from-blue-600 to-blue-700 rounded-lg p-3 text-white text-center">
            <div class="text-2xl mb-1">üìä</div>
            <div class="text-sm opacity-75">–°–µ—Ä–µ–¥–Ω—ñ–π —á–∞—Å —Ä–æ–±–æ—Ç–∏</div>
            <div class="text-lg font-bold">
              ${Math.round(filteredReports.reduce((sum, r) => sum + r.workingDays, 0) / filteredReports.length)} –¥–Ω—ñ–≤
            </div>
          </div>
          
          <div class="bg-gradient-to-br from-green-600 to-green-700 rounded-lg p-3 text-white text-center">
            <div class="text-2xl mb-1">‚úÖ</div>
            <div class="text-sm opacity-75">–£—Å–ø—ñ—à–Ω–æ –≤–∏—Ä—ñ—à–µ–Ω–æ</div>
            <div class="text-lg font-bold">
              ${filteredReports.filter(r => r.isResolved).length}
            </div>
          </div>
          
          <div class="bg-gradient-to-br from-yellow-600 to-yellow-700 rounded-lg p-3 text-white text-center">
            <div class="text-2xl mb-1">üîÑ</div>
            <div class="text-sm opacity-75">–ê–∫—Ç–∏–≤–Ω–æ –≤ —Ä–æ–±–æ—Ç—ñ</div>
            <div class="text-lg font-bold">
              ${filteredReports.filter(r => r.isActive).length}
            </div>
          </div>
          
          <div class="bg-gradient-to-br from-red-600 to-red-700 rounded-lg p-3 text-white text-center">
            <div class="text-2xl mb-1">‚è∞</div>
            <div class="text-sm opacity-75">–ó –ø—Ä–æ—Å—Ç—Ä–æ—á–∫–æ—é</div>
            <div class="text-lg font-bold">
              ${filteredReports.filter(r => r.overdueCount > 0).length}
            </div>
          </div>
        </div>
        
        <!-- –î–µ—Ç–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ -->
        <div class="bg-gray-700 rounded-lg overflow-hidden">
          <div class="overflow-x-auto">
            <table class="min-w-full text-sm">
              <thead class="bg-gray-800">
                <tr>
                  <th class="px-4 py-3 text-left text-gray-300 font-medium">–ö–ª—ñ—î–Ω—Ç</th>
                  <th class="px-4 py-3 text-center text-gray-300 font-medium">–ú–µ–Ω–µ–¥–∂–µ—Ä</th>
                  <th class="px-4 py-3 text-center text-gray-300 font-medium">–°—Ç–∞—Ç—É—Å</th>
                  <th class="px-4 py-3 text-center text-gray-300 font-medium">–î—ñ—ó</th>
                  <th class="px-4 py-3 text-center text-gray-300 font-medium">–î–Ω—ñ–≤ —Ä–æ–±–æ—Ç–∏</th>
                  <th class="px-4 py-3 text-center text-gray-300 font-medium">–ü—Ä–æ—Å—Ç—Ä–æ—á–∫–∞</th>
                  <th class="px-4 py-3 text-center text-gray-300 font-medium">–ü–æ—Ç–µ–Ω—Ü—ñ–∞–ª</th>
                  <th class="px-4 py-3 text-center text-gray-300 font-medium">–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ</th>
                </tr>
              </thead>
              <tbody class="divide-y divide-gray-600">
                ${filteredReports.map(report => {
                  const statusColors = {
                    'new': 'bg-gray-600 text-white',
                    'in_progress': 'bg-yellow-600 text-white',
                    'resolved': 'bg-green-600 text-white',
                    'closed': 'bg-gray-500 text-white'
                  };
                  
                  const statusLabels = {
                    'new': 'üÜï –ù–æ–≤–∏–π',
                    'in_progress': 'üîÑ –í —Ä–æ–±–æ—Ç—ñ',
                    'resolved': '‚úÖ –í–∏—Ä—ñ—à–µ–Ω–æ',
                    'closed': 'üóÇÔ∏è –ó–∞–∫—Ä–∏—Ç–æ'
                  };
                  
                  const workingDaysColor = report.workingDays > 30 ? 'text-red-400' :
                                          report.workingDays > 14 ? 'text-yellow-400' : 'text-green-400';
                  
                  const overdueColor = report.overdueCount === 0 ? 'text-green-400' :
                                      report.overdueCount <= 2 ? 'text-yellow-400' : 'text-red-400';
                  
                  return `
                    <tr class="hover:bg-gray-600/50 transition-colors">
                      <td class="px-4 py-3">
                        <div class="flex items-center gap-2">
                          <span class="text-lg">${report.isResolved ? '‚úÖ' : report.isActive ? 'üîÑ' : 'üÜï'}</span>
                          <div>
                            <div class="font-medium text-white">${report.name}</div>
                            <div class="text-xs text-gray-400">${report.code}</div>
                            ${report.link ? `
                              <a href="${report.link}" target="_blank" class="text-blue-400 hover:text-blue-300 underline text-xs">CRM</a>
                            ` : ''}
                          </div>
                        </div>
                      </td>
                      <td class="px-4 py-3 text-center text-gray-300">${report.manager}</td>
                      <td class="px-4 py-3 text-center">
                        <span class="px-2 py-1 rounded text-xs ${statusColors[report.status]}">
                          ${statusLabels[report.status]}
                        </span>
                      </td>
                      <td class="px-4 py-3 text-center">
                        <div class="text-white font-medium">${report.totalActions}</div>
                        <div class="text-xs text-gray-400">
                          üìû${report.actionStats.call} ü§ù${report.actionStats.meeting} 
                          üìß${report.actionStats.email} üìÑ${report.actionStats.commercial_proposal}
                        </div>
                      </td>
                      <td class="px-4 py-3 text-center ${workingDaysColor} font-medium">${report.workingDays}</td>
                      <td class="px-4 py-3 text-center ${overdueColor} font-medium">${report.overdueCount}</td>
                      <td class="px-4 py-3 text-center">
                        ${report.potentialOrderDate ? `
                          <div class="text-green-400 font-medium">üéØ ${report.potentialOrderDate}</div>
                          ${report.expectedAmount ? `
                            <div class="text-xs text-green-300">~${(report.expectedAmount / 1000).toFixed(0)}k –≥—Ä–Ω</div>
                          ` : ''}
                        ` : '<span class="text-gray-500">‚Äî</span>'}
                      </td>
                      <td class="px-4 py-3 text-center">
                        <button class="px-3 py-1 bg-indigo-600 text-white rounded hover:bg-indigo-700 text-sm" 
                                onclick="window.showClientDetail('${report.code}')">
                          –Ü—Å—Ç–æ—Ä—ñ—è
                        </button>
                      </td>
                    </tr>
                  `;
                }).join('')}
              </tbody>
            </table>
          </div>
        </div>
        
        <!-- –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –¥–µ–π—Å—Ç–≤–∏–π -->
        <div class="mt-6 bg-gray-700 rounded-lg p-4">
          <h3 class="text-lg font-semibold text-white mb-4">–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –¥—ñ–π</h3>
          <div class="grid grid-cols-2 md:grid-cols-5 gap-4">
            ${['call', 'meeting', 'email', 'commercial_proposal', 'other'].map(actionType => {
              const total = filteredReports.reduce((sum, r) => sum + r.actionStats[actionType], 0);
              const actionLabels = {
                'call': 'üìû –î–∑–≤—ñ–Ω–∫–∏',
                'meeting': 'ü§ù –ó—É—Å—Ç—Ä—ñ—á—ñ',
                'email': 'üìß Email',
                'commercial_proposal': 'üìÑ –ö–ü',
                'other': 'üìã –Ü–Ω—à–µ'
              };
              
              return `
                <div class="text-center">
                  <div class="text-2xl mb-2">${actionLabels[actionType].split(' ')[0]}</div>
                  <div class="text-sm text-gray-300">${actionLabels[actionType].split(' ')[1]}</div>
                  <div class="text-xl font-bold text-white">${total}</div>
                </div>
              `;
            }).join('')}
          </div>
        </div>
      `}
    `;
     }

  // === NEW: –°–∏—Å—Ç–µ–º–∞ AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π —Å push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ ===
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è AI —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Firestore
  window.saveAIRecommendationNotification = async function(recommendation) {
    try {
      const firebaseModule = await import('../js/firebase.js');
      const { collection, addDoc } = firebaseModule;
      const companyId = window.state?.currentCompanyId;
      if (!companyId) {
        console.warn('Company ID not found, cannot save AI notification');
        return;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
      if (!window.hasPermission('ai_notifications_create')) {
        console.warn('No permission to create AI notifications');
        return;
      }
      
      // –ù–∞—Ö–æ–¥–∏–º managerId –ø–æ –∏–º–µ–Ω–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
      const managerId = window.findManagerIdByName(recommendation.manager);
      if (!managerId) {
        console.warn(`Manager not found: ${recommendation.manager}`);
        return;
      }
      
      const notificationData = {
        type: 'ai_recommendation',
        title: recommendation.title,
        description: recommendation.description,
        clientCode: recommendation.clientCode,
        clientName: recommendation.clientName,
        managerId: managerId,
        managerName: recommendation.manager,
        priority: recommendation.priority,
        actionType: recommendation.actionType,
        reasoning: recommendation.reasoning,
        createdAt: new Date(),
        isRead: false,
        recommendationData: recommendation
      };
      
      alertsLogger.verbose('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ:', notificationData);
      
      const notificationsRef = collection(firebaseModule.db, 'companies', companyId, 'aiNotifications');
      await addDoc(notificationsRef, notificationData);
      
      alertsLogger.info(`‚úÖ AI —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ ${recommendation.manager} (ID: ${managerId})`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è AI —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ managerId –ø–æ –∏–º–µ–Ω–∏
  window.findManagerIdByName = function(managerName) {
    if (!window.state?.allEmployees) {
      console.warn('‚ùå allEmployees –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
      return null;
    }
    
    alertsLogger.verbose(`üîç –ò—â–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞: "${managerName}"`);
    alertsLogger.verbose('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏:', window.state.allEmployees.map(emp => ({ id: emp.id, name: emp.name })));
    
    const manager = window.state.allEmployees.find(emp => 
      emp.name && emp.name.trim().toLowerCase() === managerName.trim().toLowerCase()
    );
    
    if (manager) {
      alertsLogger.verbose(`‚úÖ –ù–∞–π–¥–µ–Ω –º–µ–Ω–µ–¥–∂–µ—Ä: ${manager.name} (ID: ${manager.id})`);
    } else {
      alertsLogger.warn(`‚ùå –ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω: "${managerName}"`);
    }
    
    return manager?.id || null;
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ AI —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  window.loadAIRecommendationNotifications = async function() {
    try {
      const firebaseModule = await import('../js/firebase.js');
      const { collection, query, where, orderBy, getDocs } = firebaseModule;
      const companyId = window.state?.currentCompanyId;
      const currentUserId = window.state?.currentUserId;
      
      alertsLogger.verbose('üîç –û—Ç–ª–∞–¥–∫–∞ AI —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', { companyId, currentUserId });
      
      if (!companyId || !currentUserId) {
        alertsLogger.warn('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç companyId –∏–ª–∏ currentUserId');
        return [];
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
      if (!window.hasPermission('ai_notifications_view')) {
        console.warn('No permission to view AI notifications');
        return [];
      }
      
      const notificationsRef = collection(firebaseModule.db, 'companies', companyId, 'aiNotifications');
      const q = query(
        notificationsRef,
        where('managerId', '==', currentUserId),
        where('isRead', '==', false),
        orderBy('createdAt', 'desc')
      );
      
      const snapshot = await getDocs(q);
      const notifications = [];
      
      snapshot.docs.forEach(doc => {
        notifications.push({
          id: doc.id,
          ...doc.data()
        });
      });
      
      alertsLogger.info(`üì± –ó–∞–≥—Ä—É–∂–µ–Ω–æ ${notifications.length} AI —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${currentUserId}`);
      return notifications;
    } catch (error) {
      alertsLogger.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ AI —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
      return [];
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–≥–æ
  window.markAIRecommendationAsRead = async function(notificationId) {
    try {
      const firebaseModule = await import('../js/firebase.js');
      const { doc, updateDoc } = firebaseModule;
      const companyId = window.state?.currentCompanyId;
      if (!companyId) return;
      
      const notificationRef = doc(firebaseModule.db, 'companies', companyId, 'aiNotifications', notificationId);
      await updateDoc(notificationRef, {
        isRead: true,
        readAt: new Date()
      });
      
      alertsLogger.info(`‚úÖ AI —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ${notificationId} –æ—Ç–º–µ—á–µ–Ω–æ –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–µ`);
    } catch (error) {
      alertsLogger.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–º–µ—Ç–∫–∏ AI —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–≥–æ:', error);
    }
  }
  
  window.generateAIRecommendations = async function() {
    const recommendations = [];
    const now = new Date();
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    Object.keys(clientActionsData).forEach(clientCode => {
      const clientData = clientActionsData[clientCode];
      if (!clientData || !clientData.actions) return;
      
      const clientName = getClientName(clientCode, clientCode);
      const clientInfo = clientManagerDirectory[clientCode];
      const managerName = clientInfo?.manager || '–ù–µ–≤—ñ–¥–æ–º–∏–π';
      
      const actions = [...clientData.actions].sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));
      const lastAction = actions[0];
      const firstAction = actions[actions.length - 1];
      
      const workingDays = Math.floor((now - new Date(firstAction.createdAt)) / (1000 * 60 * 60 * 24));
      const status = clientData.status || 'new';
      
      // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è 1: –î–æ–ª–≥–∞—è —Ä–∞–±–æ—Ç–∞ —Å –∫–ª–∏–µ–Ω—Ç–æ–º –±–µ–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
      if (workingDays > 21 && status === 'in_progress' && actions.length >= 3) {
        const callActions = actions.filter(a => a.type === 'call').length;
        const meetingActions = actions.filter(a => a.type === 'meeting').length;
        
        if (meetingActions === 0 && callActions >= 2) {
          recommendations.push({
            type: 'action_suggestion',
            priority: 'high',
            clientCode: clientCode,
            clientName: clientName,
            manager: managerName,
            title: '–†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –æ—Å–æ–±–∏—Å—Ç–∞ –∑—É—Å—Ç—Ä—ñ—á',
            description: `–ó –∫–ª—ñ—î–Ω—Ç–æ–º ${clientName} –ø—Ä–∞—Ü—é—î–º–æ ${workingDays} –¥–Ω—ñ–≤, –±—É–ª–æ ${callActions} –¥–∑–≤—ñ–Ω–∫—ñ–≤, –∞–ª–µ –∂–æ–¥–Ω–æ—ó –∑—É—Å—Ç—Ä—ñ—á—ñ. –ß–∞—Å –¥–ª—è –æ—Å–æ–±–∏—Å—Ç–æ—ó –∑—É—Å—Ç—Ä—ñ—á—ñ.`,
            actionType: 'meeting',
            reasoning: '–î–æ–≤–≥–∞ —Ä–æ–±–æ—Ç–∞ –±–µ–∑ –ø—Ä–æ–≥—Ä–µ—Å—É, –ø–æ—Ç—Ä—ñ–±–µ–Ω –æ—Å–æ–±–∏—Å—Ç–∏–π –∫–æ–Ω—Ç–∞–∫—Ç'
          });
        }
      }
      
      // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è 2: –ú–Ω–æ–≥–æ –∑–≤–æ–Ω–∫–æ–≤ –±–µ–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ - –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ö–ü
      if (status === 'in_progress') {
        const callActions = actions.filter(a => a.type === 'call').length;
        const proposalActions = actions.filter(a => a.type === 'commercial_proposal').length;
        
        if (callActions >= 3 && proposalActions === 0) {
          recommendations.push({
            type: 'action_suggestion',
            priority: 'medium',
            clientCode: clientCode,
            clientName: clientName,
            manager: managerName,
            title: '–ß–∞—Å –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∫–æ–º–µ—Ä—Ü—ñ–π–Ω—É –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é',
            description: `–ü—ñ—Å–ª—è ${callActions} –¥–∑–≤—ñ–Ω–∫—ñ–≤ –∑ ${clientName} –≤–∞—Ä—Ç–æ –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ö–ü –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–∏–∑–∞—Ü—ñ—ó –ø–æ—Ç—Ä–µ–±.`,
            actionType: 'commercial_proposal',
            reasoning: '–ë–∞–≥–∞—Ç–æ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –±–µ–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó'
          });
        }
      }
      
      // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è 3: –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
      const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());
      const actionsWithDates = actions.filter(action => 
        action.nextActionDate && action.status !== 'cancelled'
      );
      
      if (actionsWithDates.length > 0) {
        const latestAction = actionsWithDates[0];
        const actionDate = new Date(latestAction.nextActionDate);
        
        if (actionDate < today) {
          const daysPastDue = Math.floor((today - actionDate) / (1000 * 60 * 60 * 24));
          
          recommendations.push({
            type: 'urgent_action',
            priority: daysPastDue > 7 ? 'critical' : 'high',
            clientCode: clientCode,
            clientName: clientName,
            manager: managerName,
            title: `–¢–µ—Ä–º—ñ–Ω–æ–≤–∞ –¥—ñ—è: ${latestAction.nextAction}`,
            description: `–ó–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–µ ${latestAction.nextAction} –∑ ${clientName} –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–æ –Ω–∞ ${daysPastDue} –¥–Ω—ñ–≤!`,
            actionType: latestAction.type,
            reasoning: `–ü—Ä–æ—Å—Ç—Ä–æ—á–∫–∞ ${daysPastDue} –¥–Ω—ñ–≤`
          });
        }
      }
      
      // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è 4: –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑ —Å–∫–æ—Ä–æ
      if (clientData.potentialOrderDate) {
        const potentialDate = new Date(clientData.potentialOrderDate);
        const daysUntil = Math.floor((potentialDate - today) / (1000 * 60 * 60 * 24));
        
        if (daysUntil >= 0 && daysUntil <= 3) {
          recommendations.push({
            type: 'opportunity',
            priority: 'high',
            clientCode: clientCode,
            clientName: clientName,
            manager: managerName,
            title: '–ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –±–ª–∏–∑—å–∫–æ!',
            description: `${clientName} –ø–ª–∞–Ω—É–≤–∞–≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ ${clientData.potentialOrderDate} (${daysUntil === 0 ? '—Å—å–æ–≥–æ–¥–Ω—ñ' : `—á–µ—Ä–µ–∑ ${daysUntil} –¥–Ω—ñ–≤`})`,
            actionType: 'call',
            reasoning: '–ß–∞—Å –∑–∞–∫—Ä–∏–≤–∞—Ç–∏ —É–≥–æ–¥—É'
          });
        }
      }
      
      // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è 5: –°—Ç–∞—Ç—É—Å "–Ω–æ–≤—ã–π" —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ
      if (status === 'new' && workingDays > 3) {
        recommendations.push({
          type: 'status_issue',
          priority: 'medium',
          clientCode: clientCode,
          clientName: clientName,
          manager: managerName,
          title: '–û–Ω–æ–≤—ñ—Ç—å —Å—Ç–∞—Ç—É—Å –∫–ª—ñ—î–Ω—Ç–∞',
          description: `${clientName} –º–∞—î —Å—Ç–∞—Ç—É—Å "–Ω–æ–≤–∏–π" –≤–∂–µ ${workingDays} –¥–Ω—ñ–≤. –û–Ω–æ–≤—ñ—Ç—å —Å—Ç–∞—Ç—É—Å –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –ø–æ—Ç–æ—á–Ω–æ—ó —Ä–æ–±–æ—Ç–∏.`,
          actionType: 'status_update',
          reasoning: '–ù–µ–∞–∫—Ç—É–∞–ª—å–Ω–∏–π —Å—Ç–∞—Ç—É—Å –∑–∞–≤–∞–∂–∞—î –∞–Ω–∞–ª—ñ—Ç–∏—Ü—ñ'
        });
      }
    });
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É
    const priorityOrder = { critical: 4, high: 3, medium: 2, low: 1 };
    recommendations.sort((a, b) => priorityOrder[b.priority] - priorityOrder[a.priority]);
    
    aiRecommendations = recommendations;
    lastRecommendationUpdate = now;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Firestore –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    alertsLogger.verbose(`üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º ${recommendations.length} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Firestore...`);
    
          for (const recommendation of recommendations) {
        try {
          await window.saveAIRecommendationNotification(recommendation);
        } catch (error) {
          alertsLogger.error(`‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è ${recommendation.clientName}:`, error);
        }
      }
    
    alertsLogger.info(`ü§ñ –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ ${recommendations.length} AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π`);
    return recommendations;
  }
  
  function renderAIRecommendationsWidget() {
    if (!aiRecommendations.length) {
      generateAIRecommendations();
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ–ø-5 —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    const topRecommendations = aiRecommendations.slice(0, 5);
    
    if (topRecommendations.length === 0) {
      return `
        <div class="bg-green-900/20 border border-green-600 rounded-lg p-4">
          <div class="flex items-center gap-2 mb-2">
            <span class="text-green-400">ü§ñ</span>
            <span class="font-medium text-green-200">AI –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó</span>
          </div>
          <p class="text-sm text-green-300">–í—ñ–¥–º—ñ–Ω–Ω–æ! –ù–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π. –ü—Ä–æ–¥–æ–≤–∂—É–π—Ç–µ –≤ —Ç–æ–º—É –∂ –¥—É—Å—ñ! üéâ</p>
        </div>
      `;
    }
    
    const criticalCount = topRecommendations.filter(r => r.priority === 'critical').length;
    const highCount = topRecommendations.filter(r => r.priority === 'high').length;
    
    return `
      <div class="flex items-center justify-between mb-4">
        <div>
          <h2 class="text-2xl font-bold text-white mb-2">–°–∏–≥–Ω–∞–ª—ñ–∑–∞—Ü—ñ—è</h2>
          <p class="text-gray-300">–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∫—Ä–∏—Ç–∏—á–Ω—ñ –ø–æ–¥—ñ—ó —Ç–∞ —Å–∏–≥–Ω–∞–ª–∏ –ø–æ –∫–ª—ñ—î–Ω—Ç–∞—Ö</p>
        </div>
        <div class="flex items-center gap-2">
          <button onclick="window.generateAIRecommendations()" class="px-3 py-1 bg-blue-600 text-white text-xs rounded hover:bg-blue-700">
            –¢–µ—Å—Ç AI
          </button>
          <div class="relative">
          <button onclick="toggleAIRecommendations()" 
                  class="bg-blue-600 hover:bg-blue-700 text-white rounded-full p-3 shadow-lg transition-all duration-300">
            <span class="text-xl">üîî</span>
            ${criticalCount > 0 ? `<span class="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">${criticalCount}</span>` : ''}
          </button>
          
          <div id="ai-recommendations-panel" class="absolute top-16 right-0 z-40 bg-gray-800 rounded-lg shadow-xl border border-gray-600 max-w-sm w-80 hidden">
          <div class="p-4 border-b border-gray-600">
            <div class="flex items-center justify-between">
              <div class="flex items-center gap-2">
                <span class="text-blue-400">ü§ñ</span>
                <span class="font-medium text-white">AI –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó</span>
              </div>
              <button onclick="toggleAIRecommendations()" class="text-gray-400 hover:text-white">‚úï</button>
            </div>
            <div class="text-xs text-gray-300 mt-1">
              ${criticalCount > 0 ? `${criticalCount} –∫—Ä–∏—Ç–∏—á–Ω–∏—Ö` : ''}
              ${highCount > 0 ? `${highCount} –≤–∞–∂–ª–∏–≤–∏—Ö` : ''}
            </div>
          </div>
          
          <div class="max-h-96 overflow-y-auto p-4 space-y-3">
            ${topRecommendations.map(rec => {
              const priorityColors = {
                critical: 'border-red-500 bg-red-900/30 text-red-200',
                high: 'border-orange-500 bg-orange-900/30 text-orange-200',
                medium: 'border-yellow-500 bg-yellow-900/30 text-yellow-200',
                low: 'border-gray-500 bg-gray-900/30 text-gray-200'
              };
              
              const priorityIcons = {
                critical: 'üö®',
                high: '‚ö†Ô∏è',
                medium: 'üí°',
                low: '‚ÑπÔ∏è'
              };
              
              return `
                <div class="border rounded p-3 text-sm ${priorityColors[rec.priority]}">
                  <div class="flex items-start justify-between mb-2">
                    <div class="flex items-center gap-2">
                      <span>${priorityIcons[rec.priority]}</span>
                      <span class="font-medium">${rec.title}</span>
                    </div>
                    <button onclick="toggleAIRecommendations(); showAlertsModule('client-reports'); setTimeout(() => window.showClientDetail('${rec.clientCode}'), 1000)" 
                            class="text-blue-400 hover:text-blue-300 underline text-xs">
                      ‚Üí
                    </button>
                  </div>
                  <p class="mb-2 text-xs">${rec.description}</p>
                  <div class="flex items-center justify-between text-xs opacity-75">
                    <span>${rec.manager}</span>
                    <span>${rec.reasoning}</span>
                  </div>
                </div>
              `;
            }).join('')}
          </div>
        </div>
      </div>
    `;
  }

  // === NEW: –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ===
  window.alertsGet = function(id) {
    if (window.alertsContainer) {
      return window.alertsContainer.querySelector(`#${id}`);
    }
    return null;
  };
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è
  window.alertsContainer = null;
  
  window.alertsFilterClients = function(list) {
    let filtered = list;
    
    // –§–∏–ª—å—Ç—Ä –ø–æ –ø–æ–∏—Å–∫—É
    if (window.currentSearch) {
      filtered = filtered.filter(c => c.name.toLowerCase().includes(window.currentSearch.toLowerCase()));
    }
    
    // –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å—É
    if (window.currentStatus) {
      filtered = filtered.filter(c => {
        const clientStatus = getClientAlertStatus(c.code);
        return clientStatus === window.currentStatus;
      });
    }
    
    return filtered;
  };

// === NEW: –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó ===
window.initAlertsModule = function(container) {
  if (isAlertsInitialized) return; // –ó–∞–ø–æ–±—ñ–≥–∞—î–º–æ –ø–æ–≤—Ç–æ—Ä–Ω—ñ–π —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
  alertsLogger.info('initAlertsModule called', container);
  if (!container) return;
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
  window.alertsContainer = container;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –º–æ–¥—É–ª—é
  if (!window.hasPermission || !window.hasPermission('alerts_view_page')) {
  container.innerHTML = `
      <div class="bg-red-900/20 border border-red-500 rounded-xl p-8 text-center">
        <h2 class="text-2xl font-bold text-white mb-4">–î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ</h2>
        <p class="text-red-200">–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –º–æ–¥—É–ª—è "–°–∏–≥–Ω–∞–ª—ñ–∑–∞—Ü—ñ—è".</p>
        <p class="text-red-300 text-sm mt-2">–ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –Ω–∞–¥–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø—É.</p>
      </div>
    `;
    return;
  }
  
  container.innerHTML = `
    <div class="bg-gray-800 rounded-xl shadow-lg p-4">
      <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –±—É–¥–µ—Ç —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å—Å—è –≤ renderDashboard -->
      
      <!-- –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è -->
      <div id="alerts-loading-container" class="text-center p-8">
        <div class="inline-block animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600 mb-4"></div>
        <div>
          <p id="alerts-loading-message" class="text-lg font-medium text-gray-200 mb-2">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–Ω—ã—Ö...</p>
          <div class="bg-gray-700 rounded-full h-2 max-w-md mx-auto mb-2">
            <div id="alerts-progress-bar" class="bg-indigo-600 h-2 rounded-full transition-all duration-300" style="width: 0%"></div>
        </div>
          <p id="alerts-loading-step" class="text-sm text-gray-400">–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è...</p>
      </div>
      </div>
      
      <!-- –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç (—Å–ø–æ—á–∞—Ç–∫—É –ø—Ä–∏—Ö–æ–≤–∞–Ω–∏–π) -->
      <div id="alerts-main-content" class="hidden">
        <!-- –î–∞—à–±–æ—Ä–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ -->
        <div id="alerts-dashboard-container" class="mb-4"></div>
        
      <div id="alerts-filters-container" class="mb-4"></div>
      <div id="alerts-tabs-container" class="mb-4"></div>
      <div id="alerts-content-container" class="mb-4"></div>
      <div id="chart-container" class="mb-4"></div>
      </div>
    </div>
  `;

  // –§—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è UI –∑–∞–≥—Ä—É–∑–∫–∏
  function updateLoadingProgress(percent, message, step) {
    const progressBar = window.alertsGet('alerts-progress-bar');
    const loadingMessage = window.alertsGet('alerts-loading-message');
    const loadingStep = window.alertsGet('alerts-loading-step');
    
    if (progressBar) progressBar.style.width = `${percent}%`;
    if (loadingMessage) loadingMessage.textContent = message;
    if (loadingStep) loadingStep.textContent = step;
  }
  
  function showMainContent() {
    const loadingContainer = window.alertsGet('alerts-loading-container');
    const mainContent = window.alertsGet('alerts-main-content');
    
    if (loadingContainer) loadingContainer.classList.add('hidden');
    if (mainContent) mainContent.classList.remove('hidden');
  }
  
  function showError(errorMessage) {
    const loadingContainer = window.alertsGet('alerts-loading-container');
    if (loadingContainer) {
      loadingContainer.innerHTML = `
        <div class="text-center p-8">
          <div class="text-red-500 text-6xl mb-4">‚ö†Ô∏è</div>
          <p class="text-lg font-medium text-red-400 mb-2">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</p>
          <p class="text-sm text-gray-400">${errorMessage}</p>
          <button onclick="location.reload()" class="mt-4 px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700">
            –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑
          </button>
        </div>
      `;
    }
  }

  async function loadData() {
    alertsLogger.info('alerts.js: loadData called');
    try {
      updateLoadingProgress(10, '–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è...', '–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö');
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
      const companyId = window.state?.currentCompanyId;
      
      updateLoadingProgress(20, '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö...', '–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å–µ—Ä–≤–µ—Ä—ñ–≤');
      
      const promises = [
      fetch('–º–æ–¥—É–ª—å –ø–æ–º—ñ—á–Ω–∏–∫ –ø—Ä–æ–¥–∞–∂—É/data.json'),
      fetch('https://fastapi.lookfort.com/nomenclature.analysis'),
      fetch('https://fastapi.lookfort.com/nomenclature.analysis?mode=company_url')
      ];
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Firebase –µ—Å–ª–∏ –µ—Å—Ç—å –∫–æ–º–ø–∞–Ω–∏—è
      if (companyId) {
        updateLoadingProgress(30, '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö...', '–ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Firebase');
        const firebase = await import('../js/firebase.js');
        promises.push(
          firebase.getDocs(firebase.collection(firebase.db, 'companies', companyId, 'employees')),
          firebase.getDocs(firebase.collection(firebase.db, 'companies', companyId, 'departments')),
          firebase.getDocs(firebase.collection(firebase.db, 'companies', companyId, 'members'))
        );
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –¥–µ–π—Å—Ç–≤–∏—è—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
        try {
          const clientAlertsSnap = await firebase.getDocs(firebase.collection(firebase.db, 'companies', companyId, 'clientAlerts'));
          clientAlertsSnap.forEach(doc => {
            clientActionsData[doc.id] = doc.data();
          });
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
          checkAndUpdateClientStatuses();
          
        } catch (error) {
          console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥—ñ–π –∫–ª—ñ—î–Ω—Ç—ñ–≤:', error);
        }
      }
      
      updateLoadingProgress(50, '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö...', '–û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ —Å–µ—Ä–≤–µ—Ä—ñ–≤');
      const results = await Promise.all(promises);
      
      updateLoadingProgress(60, '–û–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö...', '–ü–∞—Ä—Å–∏–Ω–≥ JSON —Ñ–∞–π–ª—ñ–≤');
      const [dataRes, dataJulyRes, refRes] = results;
      
    const data = await dataRes.json();
    const dataJuly = await dataJulyRes.json();
    masterData = data.concat(dataJuly);
    const refData = await refRes.json();
    clientLinks = Object.fromEntries(refData.map(item => [item['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥'], item['–ø–æ—Å–∏–ª–∞–Ω–Ω—è']]));
      clientNames = Object.fromEntries(refData.map(item => [item['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥'], item['–ö–ª–∏–µ–Ω—Ç.–ù–∞–∑–≤–∞–Ω–∏–µ'] || item['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥']]));
      
      // –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –∫–ª–∏–µ–Ω—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä
      clientManagerDirectory = {};
      refData.forEach(item => {
        const code = item['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥'];
        if (code) {
          clientManagerDirectory[code] = {
            manager: item['–ú–µ–Ω–µ–¥–∂–µ—Ä'],
            link: item['–ø–æ—Å–∏–ª–∞–Ω–Ω—è'],
            name: item['–ö–ª–∏–µ–Ω—Ç.–ù–∞–∑–≤–∞–Ω–∏–µ'] || code
          };
        }
      });
      
      updateLoadingProgress(70, '–û–±—Ä–æ–±–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤...', '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤ —Ç–∞ –≤—ñ–¥–¥—ñ–ª—ñ–≤');
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ Firebase
      if (companyId && results.length > 4) {
        const [, , , employeesSnap, departmentsSnap, membersSnap] = results;
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º members (–∫–∞–∫ –≤ –ü–æ–º—ñ—á–Ω–∏–∫ –ø—Ä–æ–¥–∞–∂—É)
        const allMembers = membersSnap.docs.map(doc => ({ id: doc.id, ...doc.data() }));
        window.state = window.state || {};
        window.state.allMembers = allMembers;
        console.log('üîß –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ members:', allMembers.length);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
        const allEmployees = employeesSnap.docs.map(doc => ({ id: doc.id, ...doc.data() }));
        
        updateLoadingProgress(80, '–§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤...', '–í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤');
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º
        managersData = allEmployees.filter(emp => {
          if (emp.role === 'manager') return true;
          if (emp.position) {
            const position = emp.position.toLowerCase();
            return position.includes('–º–µ–Ω–µ–¥–∂–µ—Ä') || 
                   position.includes('manager') || 
                   position.includes('sales') ||
                   position.includes('–ø—Ä–æ–¥–∞–∂');
          }
          return false;
        });
        
        // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        if (managersData.length === 0) {
          console.warn('üîç –ú–µ–Ω–µ–¥–∂–µ—Ä–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ –∑–∞ –∫—Ä–∏—Ç–µ—Ä—ñ—è–º–∏ –≤ —Å–∏–≥–Ω–∞–ª—ñ–∑–∞—Ü—ñ—ó, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤—Å—ñ—Ö —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤');
          managersData = allEmployees;
        }
        
        departmentsData = departmentsSnap.docs.map(doc => ({ id: doc.id, ...doc.data() }));
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤
        try {
          console.log('üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥—ñ–π –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑ Firebase...');
          const firebase = await import('../js/firebase.js');
          const { db, collection, getDocs } = firebase;
          const clientAlertsRef = collection(db, 'companies', companyId, 'clientAlerts');
          const clientAlertsSnap = await getDocs(clientAlertsRef);
          
          clientActionsData = {};
          clientAlertsSnap.docs.forEach(doc => {
            clientActionsData[doc.id] = doc.data();
          });
          
          console.log('‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –¥—ñ–π –∫–ª—ñ—î–Ω—Ç—ñ–≤:', Object.keys(clientActionsData).length);
        } catch (error) {
          console.warn('‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥—ñ–π –∫–ª—ñ—î–Ω—Ç—ñ–≤:', error);
          clientActionsData = {};
        }
        
        // –ü–æ–ª—É—á–∞–µ–º ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        currentUserId = window.state?.currentUserId;
        
        console.log('üìä –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ Firebase –≤ —Å–∏–≥–Ω–∞–ª—ñ–∑–∞—Ü—ñ—ó:');
        console.log('- –°–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤:', allEmployees.length);
        console.log('- –ú–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤:', managersData.length);
        console.log('- –í—ñ–¥–¥—ñ–ª—ñ–≤:', departmentsData.length);
        console.log('- –î—ñ–π –∫–ª—ñ—î–Ω—Ç—ñ–≤:', Object.keys(clientActionsData).length);
      }
      
      updateLoadingProgress(90, '–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É...', '–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ —Ç–∞ –≤–∫–ª–∞–¥–æ–∫');
      
    alertsLogger.info('alerts.js: masterData loaded', masterData.length);
    if (typeof renderDashboard === 'function') {
      renderDashboard();
    } else {
      alertsLogger.warn('‚ö†Ô∏è –§—É–Ω–∫—Ü—ñ—è renderDashboard –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ - –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–∞—à–±–æ—Ä–¥—É');
    }
    renderFilters();
    renderTabs();
      
      updateLoadingProgress(95, '–§—ñ–Ω–∞–ª—å–Ω—ñ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∏...', '–û–±—Ä–æ–±–∫–∞ —Å–∏–≥–Ω–∞–ª—ñ–≤');
    renderSignals();
      updateLoadingProgress(100, '–ì–æ—Ç–æ–≤–æ!', '–°–∏–≥–Ω–∞–ª—ñ–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞');
      
      // –ó–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≤–∏–¥–µ–ª 100%
      setTimeout(() => {
        showMainContent();
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        initNotificationSystem();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
        if (typeof window.updateVacationNotifications === 'function') {
          setTimeout(() => {
            window.updateVacationNotifications();
          }, 2000);
        }
      }, 500);
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –≤ —Å–∏–≥–Ω–∞–ª—ñ–∑–∞—Ü—ñ—ó:', error);
      showError(error.message || '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞');
    }
  }

  // === NEW: –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –¥–∞—à–±–æ—Ä–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ ===
  function renderDashboard() {
    const dashboardDiv = window.alertsGet('alerts-dashboard-container');
    if (!dashboardDiv) return;
    
    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const stats = {
      total: Object.keys(clientActionsData).length,
      new: 0,
      in_progress: 0,
      resolved: 0,
      closed: 0,
      overdue: 0,
      potentialOrders: 0,
      potentialAmount: 0
    };
    
    const now = new Date();
    const today = new Date(now.getFullYear(), now.getMonth(), now.getDate());
    
    Object.keys(clientActionsData).forEach(clientCode => {
      const clientData = clientActionsData[clientCode];
      if (!clientData) return;
      
      // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
      const status = clientData.status || 'new';
      stats[status] = (stats[status] || 0) + 1;
      
      // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
      if (clientData.actions) {
        const actionsWithDates = clientData.actions.filter(action => 
          action.nextActionDate && action.status !== 'cancelled'
        );
        
        if (actionsWithDates.length > 0) {
          actionsWithDates.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));
          const latestAction = actionsWithDates[0];
          const actionDate = new Date(latestAction.nextActionDate);
          
          if (actionDate < today) {
            stats.overdue++;
          }
        }
      }
      
      // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∑–∞–∫–∞–∑—ã
      if (clientData.potentialOrderDate) {
        stats.potentialOrders++;
        if (clientData.expectedAmount) {
          stats.potentialAmount += clientData.expectedAmount;
        }
      }
    });
    
    dashboardDiv.innerHTML = `
      <!-- –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ -->
      <div class="grid grid-cols-4 gap-3 mb-3">
        <div class="bg-gradient-to-br from-blue-600 to-blue-700 rounded-lg p-3 text-white">
          <div class="flex items-center gap-2">
            <span class="text-xl">üë•</span>
            <div>
              <p class="text-xs text-blue-100">–í—Å—å–æ–≥–æ</p>
              <p class="text-lg font-bold">${stats.total}</p>
            </div>
          </div>
        </div>
        
        <div class="bg-gradient-to-br from-yellow-600 to-yellow-700 rounded-lg p-3 text-white">
          <div class="flex items-center gap-2">
            <span class="text-xl">üîÑ</span>
            <div>
              <p class="text-xs text-yellow-100">–í —Ä–æ–±–æ—Ç—ñ</p>
              <p class="text-lg font-bold">${stats.in_progress} <span class="text-xs">(+${stats.new})</span></p>
            </div>
          </div>
        </div>
        
        <div class="bg-gradient-to-br from-red-600 to-red-700 rounded-lg p-3 text-white">
          <div class="flex items-center gap-2">
            <span class="text-xl">‚è∞</span>
            <div>
              <p class="text-xs text-red-100">–ü—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω—ñ</p>
              <p class="text-lg font-bold">${stats.overdue}</p>
            </div>
          </div>
        </div>
        
        <div class="bg-gradient-to-br from-green-600 to-green-700 rounded-lg p-3 text-white">
          <div class="flex items-center gap-2">
            <span class="text-xl">üéØ</span>
            <div>
              <p class="text-xs text-green-100">–ü–æ—Ç–µ–Ω—Ü—ñ–π–Ω—ñ</p>
              <p class="text-lg font-bold">${stats.potentialOrders}</p>
            </div>
          </div>
        </div>
      </div>
      
      <!-- –î–µ—Ç–∞–ª—å–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É -->
      <div class="bg-gray-700 rounded-lg p-2 mb-3">
        <div class="flex items-center justify-between text-sm">
          <span class="text-gray-300 font-medium">–†–æ–∑–ø–æ–¥—ñ–ª –∑–∞ —Å—Ç–∞—Ç—É—Å–∞–º–∏:</span>
          <div class="flex items-center gap-4">
            <div class="flex items-center gap-1">
              <span>üÜï</span>
              <span class="text-white font-medium">${stats.new}</span>
            </div>
            <div class="flex items-center gap-1">
              <span>üîÑ</span>
              <span class="text-yellow-400 font-medium">${stats.in_progress}</span>
            </div>
            <div class="flex items-center gap-1">
              <span>‚úÖ</span>
              <span class="text-green-400 font-medium">${stats.resolved}</span>
            </div>
            <div class="flex items-center gap-1">
              <span>üóÇÔ∏è</span>
              <span class="text-gray-400 font-medium">${stats.closed}</span>
            </div>
            ${stats.potentialAmount > 0 ? `
              <div class="flex items-center gap-1 ml-2 pl-2 border-l border-gray-600">
                <span>üí∞</span>
                <span class="text-green-300 font-medium">~${(stats.potentialAmount / 1000).toFixed(0)}k</span>
              </div>
            ` : ''}
          </div>
        </div>
      </div>
      
      <!-- AI –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ -->
      <div class="mb-4">
        ${renderAIRecommendationsWidget()}
      </div>
    `;
  }

  function renderFilters() {
    console.log('üîß –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ —Å–∏–≥–Ω–∞–ª—ñ–∑–∞—Ü—ñ—ó:', {
      'departmentsData.length': departmentsData.length,
      'managersData.length': managersData.length
    });
    
    const filtersDiv = window.alertsGet('alerts-filters-container');
    if (!filtersDiv) return;
    
    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç userAccess –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –º–æ–¥—É–ª—é –ü–æ–º—ñ—á–Ω–∏–∫ –ø—Ä–æ–¥–∞–∂—É
    const userAccess = {
      userId: window.state?.currentUserId,
      employeeId: null,
      employee: null,
      role: window.state?.currentUserRole?.toLowerCase(),
      departmentId: window.state?.currentUserDepartment,
      isAdmin: window.state?.isAdmin || false
    };
    
    console.log('üîß –°—Ç–≤–æ—Ä–µ–Ω–Ω—è userAccess –∑ window.state:', {
      currentUserId: window.state?.currentUserId,
      currentUserEmail: window.state?.currentUserEmail,
      currentUserDepartment: window.state?.currentUserDepartment,
      currentUserRole: window.state?.currentUserRole,
      isAdmin: window.state?.isAdmin
    });
    
        // –ù–∞—Ö–æ–¥–∏–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –¢–û–õ–¨–ö–û —á–µ—Ä–µ–∑ members (–∫–∞–∫ –≤ –ü–æ–º—ñ—á–Ω–∏–∫ –ø—Ä–æ–¥–∞–∂—É)
    console.log('üîß –ü–æ—à—É–∫ —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫–∞ –¥–ª—è userId:', userAccess.userId);
    console.log('üîß managersData.length:', managersData.length);
    console.log('üîß window.state.currentUserId:', window.state?.currentUserId);
    console.log('üîß window.state.currentUserEmail:', window.state?.currentUserEmail);
    
    // –ò—â–µ–º –¢–û–õ–¨–ö–û —á–µ—Ä–µ–∑ members (–∫–∞–∫ –≤ –ü–æ–º—ñ—á–Ω–∏–∫ –ø—Ä–æ–¥–∞–∂—É)
    console.log('üîß –®—É–∫–∞—î–º–æ —á–µ—Ä–µ–∑ members...');
    if (window.state?.allMembers && window.state.allMembers.length > 0) {
      const currentMember = window.state.allMembers.find(m => 
        m.userId === userAccess.userId || 
        m.userId === window.state?.currentUserId
      );
      console.log('üîß –ó–Ω–∞–π–¥–µ–Ω–∏–π member:', currentMember);
      
      if (currentMember && currentMember.employeeId) {
        userAccess.employeeId = currentMember.employeeId;
        console.log('üîß –ó–Ω–∞–π–¥–µ–Ω–∏–π employeeId –∑ member:', currentMember.employeeId);
        
        // –ù–∞–π–¥–µ–º employee –ø–æ employeeId –≤ managersData
        const employee = managersData.find(emp => emp.id === currentMember.employeeId);
        console.log('üîß –ó–Ω–∞–π–¥–µ–Ω–∏–π employee –ø–æ employeeId:', employee);
        
        if (employee) {
          userAccess.employee = employee;
          if (!userAccess.departmentId && employee.department) {
            if (typeof employee.department === 'object' && employee.department.id) {
              userAccess.departmentId = employee.department.id;
            } else if (typeof employee.department === 'string') {
              userAccess.departmentId = employee.department;
            }
          }
          
          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º role –∏–∑ employee (–∫–∞–∫ –≤ –ü–æ–º—ñ—á–Ω–∏–∫ –ø—Ä–æ–¥–∞–∂—É)
          if (employee.role) {
            userAccess.role = employee.role.toLowerCase();
          } else if (employee.position) {
            const position = employee.position.toLowerCase();
            if (position.includes('–º–µ–Ω–µ–¥–∂–µ—Ä') || position.includes('manager')) {
              userAccess.role = '–º–µ–Ω–µ–¥–∂–µ—Ä';
            } else if (position.includes('–∫–µ—Ä—ñ–≤–Ω–∏–∫') || position.includes('head')) {
              userAccess.role = '–∫–µ—Ä—ñ–≤–Ω–∏–∫';
            } else if (position.includes('–∞–¥–º—ñ–Ω') || position.includes('admin')) {
              userAccess.role = '–∞–¥–º—ñ–Ω';
            }
          }
          
          console.log('üîß userAccess –ø—ñ—Å–ª—è –ø–æ—à—É–∫—É —á–µ—Ä–µ–∑ members:', userAccess);
        } else {
          console.log('‚ùå Employee –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π –ø–æ employeeId:', currentMember.employeeId);
        }
      } else {
        console.log('‚ùå Member –Ω–µ –º–∞—î employeeId –∞–±–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π');
      }
    } else {
      console.log('‚ùå window.state.allMembers –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
    }
    
    console.log('üîß userAccess –¥–ª—è —Å–∏–≥–Ω–∞–ª—ñ–∑–∞—Ü—ñ—ó:', userAccess);
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–¥–µ–ª–æ–≤ –∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    let departmentOptions = '';
    let managerOptions = '';
    
    if (departmentsData.length > 0 && managersData.length > 0) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Firebase
      console.log('‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Firebase –¥–∞–Ω—ñ –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ —Å–∏–≥–Ω–∞–ª—ñ–∑–∞—Ü—ñ—ó');
      
      // –§–∏–ª—å—Ç—Ä—É–µ–º –æ—Ç–¥–µ–ª—ã –ø–æ —Ä–æ–ª—è–º (–∫–∞–∫ –≤ –ü–æ–º—ñ—á–Ω–∏–∫ –ø—Ä–æ–¥–∞–∂—É)
      let visibleDepartments = departmentsData;
      if (!userAccess.isAdmin && userAccess.departmentId) {
        if (userAccess.role && (userAccess.role.includes('–º–µ–Ω–µ–¥–∂') || userAccess.role.includes('–∫–µ—Ä—ñ–≤–Ω–∏–∫'))) {
          visibleDepartments = departmentsData.filter(dep => dep.id === userAccess.departmentId);
        }
      }
      
      departmentOptions = visibleDepartments.map(dept => 
        `<option value="${dept.id}">${dept.name}</option>`
      ).join('');
      
      // –§–∏–ª—å—Ç—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –æ—Ç–¥–µ–ª—É –∏ —Ä–æ–ª—è–º
      let filteredManagers = currentDepartment 
        ? managersData.filter(manager => {
            return manager.departmentId === currentDepartment ||
                   manager.department === currentDepartment ||
                   (manager.department && manager.department.id === currentDepartment);
          })
        : managersData;
      
      // –ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞: –µ—Å–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä ‚Äî —Ç–æ–ª—å–∫–æ –æ–Ω, –µ—Å–ª–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å ‚Äî –≤—Å–µ –∏–∑ –æ—Ç–¥–µ–ª–∞, –µ—Å–ª–∏ –∞–¥–º–∏–Ω ‚Äî –≤—Å–µ
      console.log('[renderFilters] –î–æ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤:', filteredManagers.length);
      console.log('[renderFilters] userAccess.isAdmin:', userAccess.isAdmin);
      console.log('[renderFilters] userAccess.employeeId:', userAccess.employeeId);
      console.log('[renderFilters] userAccess.role:', userAccess.role);
      
      if (!userAccess.isAdmin && userAccess.employeeId) {
        if (userAccess.role && userAccess.role.includes('–º–µ–Ω–µ–¥–∂')) {
          // –¢–æ–ª—å–∫–æ —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
          console.log('[renderFilters] –§—ñ–ª—å—Ç—Ä—É—î–º–æ —Ç—ñ–ª—å–∫–∏ —Å–µ–±–µ –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞');
          filteredManagers = filteredManagers.filter(emp => emp.id === userAccess.employeeId);
          console.log('[renderFilters] –ú–µ–Ω–µ–¥–∂–µ—Ä –±–∞—á–∏—Ç—å —Ç—ñ–ª—å–∫–∏ —Å–µ–±–µ:', filteredManagers);
        } else if (userAccess.role && userAccess.role.includes('–∫–µ—Ä—ñ–≤–Ω–∏–∫')) {
          // –í—Å–µ –∏–∑ –µ–≥–æ –æ—Ç–¥–µ–ª–∞
          console.log('[renderFilters] –§—ñ–ª—å—Ç—Ä—É—î–º–æ –≤—ñ–¥–¥—ñ–ª –¥–ª—è –∫–µ—Ä—ñ–≤–Ω–∏–∫–∞');
          filteredManagers = filteredManagers.filter(emp => {
            if (!emp.department) return false;
            if (typeof emp.department === 'object' && emp.department.id) {
              return emp.department.id === userAccess.departmentId;
            } else if (typeof emp.department === 'string') {
              return emp.department === userAccess.departmentId;
            }
            return false;
          });
          console.log('[renderFilters] –ö–µ—Ä—ñ–≤–Ω–∏–∫ –±–∞—á–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤ –≤—ñ–¥–¥—ñ–ª—É:', filteredManagers);
        }
      } else {
        console.log('[renderFilters] –ù–µ —Ñ—ñ–ª—å—Ç—Ä—É—î–º–æ - –∞–¥–º—ñ–Ω –∞–±–æ –Ω–µ–º–∞—î employeeId');
      }
      
      console.log('[renderFilters] –ü—ñ—Å–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤:', filteredManagers.length);
      
      managerOptions = filteredManagers.map(manager => 
        `<option value="${manager.id}">${manager.name}</option>`
      ).join('');
      console.log('[renderFilters] –§—ñ–Ω–∞–ª—å–Ω—ñ managerOptions:', managerOptions);
    } else {
      // Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ–¥–∞–∂
      console.log('‚ö†Ô∏è Fallback: –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–∞–Ω—ñ –∑ –ø—Ä–æ–¥–∞–∂ –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤');
      
      let uniqueDepartments = [...new Set(masterData.map(item => item['–í—ñ–¥–¥—ñ–ª']).filter(Boolean))];
      let uniqueManagers = [...new Set(masterData.map(item => item['–û—Å–Ω–æ–≤–Ω–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä']).filter(Boolean))];
      
      // –§–∏–ª—å—Ç—Ä—É–µ–º –æ—Ç–¥–µ–ª—ã –ø–æ —Ä–æ–ª—è–º (–∫–∞–∫ –≤ –ü–æ–º—ñ—á–Ω–∏–∫ –ø—Ä–æ–¥–∞–∂—É)
      if (!userAccess.isAdmin && userAccess.departmentId) {
        if (userAccess.role && (userAccess.role.includes('–º–µ–Ω–µ–¥–∂') || userAccess.role.includes('–∫–µ—Ä—ñ–≤–Ω–∏–∫'))) {
          // –ù–∞—Ö–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç–¥–µ–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const userDepartment = departmentsData.find(dep => dep.id === userAccess.departmentId);
          if (userDepartment) {
            uniqueDepartments = uniqueDepartments.filter(dept => dept === userDepartment.name);
          }
        }
      }
      
      departmentOptions = uniqueDepartments.map(dept => 
        `<option value="${dept}">${dept}</option>`
      ).join('');
      
      // –§–∏–ª—å—Ç—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –ø–æ —Ä–æ–ª—è–º (–∫–∞–∫ –≤ –ü–æ–º—ñ—á–Ω–∏–∫ –ø—Ä–æ–¥–∞–∂—É)
      if (!userAccess.isAdmin && userAccess.employeeId) {
        if (userAccess.role && userAccess.role.includes('–º–µ–Ω–µ–¥–∂')) {
          // –¢–æ–ª—å–∫–æ —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
          const currentUser = managersData.find(emp => emp.id === userAccess.employeeId);
          if (currentUser) {
            uniqueManagers = uniqueManagers.filter(manager => manager === currentUser.name);
          }
        } else if (userAccess.role && userAccess.role.includes('–∫–µ—Ä—ñ–≤–Ω–∏–∫')) {
          // –í—Å–µ –∏–∑ –µ–≥–æ –æ—Ç–¥–µ–ª–∞
          uniqueManagers = uniqueManagers.filter(manager => {
            const emp = managersData.find(m => m.name === manager);
            if (!emp || !emp.department) return false;
            return emp.department === userAccess.departmentId;
          });
        }
      }
      
      managerOptions = uniqueManagers.map(manager => 
        `<option value="${manager}">${manager}</option>`
      ).join('');
    }
    
    filtersDiv.innerHTML = `
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-6 gap-4">
        <div>
          <label class="block text-sm font-medium mb-1 text-gray-200">–í—ñ–¥–¥—ñ–ª:</label>
          <select id="alerts-department-filter" class="dark-input bg-gray-900 text-gray-200 w-full">
            <option value="">–í—Å—ñ –≤—ñ–¥–¥—ñ–ª–∏</option>
            ${departmentOptions}
        </select>
        </div>
        <div>
          <label class="block text-sm font-medium mb-1 text-gray-200">–ú–µ–Ω–µ–¥–∂–µ—Ä:</label>
          <select id="alerts-manager-filter" class="dark-input bg-gray-900 text-gray-200 w-full">
            <option value="">–í—Å—ñ –º–µ–Ω–µ–¥–∂–µ—Ä–∏</option>
            ${managerOptions}
        </select>
        </div>
        <div>
          <label class="block text-sm font-medium mb-1 text-gray-200">–ü–µ—Ä—ñ–æ–¥:</label>
          <select id="alerts-period-filter" class="dark-input bg-gray-900 text-gray-200 w-full">
          <option value="3">–û—Å—Ç–∞–Ω–Ω—ñ 3 –º—ñ—Å</option>
          <option value="6">–û—Å—Ç–∞–Ω–Ω—ñ 6 –º—ñ—Å</option>
          <option value="12">–û—Å—Ç–∞–Ω–Ω—ñ–π —Ä—ñ–∫</option>
        </select>
        </div>
        <div>
          <label class="block text-sm font-medium mb-1 text-gray-200">–°—Ç–∞—Ç—É—Å:</label>
          <select id="alerts-status-filter" class="dark-input bg-gray-900 text-gray-200 w-full">
            <option value="">–í—Å—ñ —Å—Ç–∞—Ç—É—Å–∏</option>
            <option value="new">üÜï –ù–æ–≤–∏–π</option>
            <option value="in_progress">üîÑ –í —Ä–æ–±–æ—Ç—ñ</option>
            <option value="resolved">‚úÖ –í–∏—Ä—ñ—à–µ–Ω–æ</option>
            <option value="closed">üóÇÔ∏è –ó–∞–∫—Ä–∏—Ç–æ</option>
          </select>
        </div>
        <div>
          <label class="block text-sm font-medium mb-1 text-gray-200">–ü–æ—à—É–∫:</label>
          <input id="alerts-search-input" type="text" class="dark-input bg-gray-900 text-gray-200 w-full" placeholder="–ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç–∞..." value="${currentSearch}">
        </div>
        <div class="flex items-end">
          <button id="alerts-export-btn" class="px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700 w-full">–ï–∫—Å–ø–æ—Ä—Ç CSV</button>
        </div>
      </div>
    `;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å —É—á–µ—Ç–æ–º –∑–∞–≤–∏—Å–∏–º—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
    window.alertsGet('alerts-department-filter').onchange = e => {
      currentDepartment = e.target.value;
      currentManager = ''; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±–æ—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞
      updateAlertsManagersFilter(); // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
      renderSignals();
    };
    
    window.alertsGet('alerts-manager-filter').onchange = e => {
      currentManager = e.target.value;
      renderSignals();
    };
    
    window.alertsGet('alerts-period-filter').onchange = e => {
      currentPeriod = +e.target.value;
      renderSignals();
    };
    
    window.alertsGet('alerts-status-filter').onchange = e => {
      currentStatus = e.target.value;
      renderSignals();
    };
    
    window.alertsGet('alerts-search-input').oninput = e => {
      currentSearch = e.target.value;
      renderSignals();
    };
    
    window.alertsGet('alerts-export-btn').onclick = exportCSV;
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –æ—Ç–¥–µ–ª–∞
  function updateAlertsManagersFilter() {
    const managerFilter = window.alertsGet('alerts-manager-filter');
    if (!managerFilter) return;
    
    let managerOptions = '';
    let filteredManagers = [];
    
    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç userAccess –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –º–æ–¥—É–ª—é –ü–æ–º—ñ—á–Ω–∏–∫ –ø—Ä–æ–¥–∞–∂—É
    const userAccess = {
      userId: window.state?.currentUserId,
      employeeId: null,
      employee: null,
      role: window.state?.currentUserRole?.toLowerCase(),
      departmentId: window.state?.currentUserDepartment,
      isAdmin: window.state?.isAdmin || false
    };
    
    // –ù–∞—Ö–æ–¥–∏–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –¢–û–õ–¨–ö–û —á–µ—Ä–µ–∑ members (–∫–∞–∫ –≤ renderFilters)
    console.log('[updateAlertsManagersFilter] –®—É–∫–∞—î–º–æ —á–µ—Ä–µ–∑ members...');
    if (window.state?.allMembers && window.state.allMembers.length > 0) {
      const currentMember = window.state.allMembers.find(m => 
        m.userId === userAccess.userId || 
        m.userId === window.state?.currentUserId
      );
      console.log('[updateAlertsManagersFilter] –ó–Ω–∞–π–¥–µ–Ω–∏–π member:', currentMember);
      
      if (currentMember && currentMember.employeeId) {
        userAccess.employeeId = currentMember.employeeId;
        console.log('[updateAlertsManagersFilter] –ó–Ω–∞–π–¥–µ–Ω–∏–π employeeId –∑ member:', currentMember.employeeId);
        
        // –ù–∞–π–¥–µ–º employee –ø–æ employeeId –≤ managersData
        const employee = managersData.find(emp => emp.id === currentMember.employeeId);
        console.log('[updateAlertsManagersFilter] –ó–Ω–∞–π–¥–µ–Ω–∏–π employee –ø–æ employeeId:', employee);
        
        if (employee) {
          userAccess.employee = employee;
          if (!userAccess.departmentId && employee.department) {
            if (typeof employee.department === 'object' && employee.department.id) {
              userAccess.departmentId = employee.department.id;
            } else if (typeof employee.department === 'string') {
              userAccess.departmentId = employee.department;
            }
          }
          
          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º role –∏–∑ employee (–∫–∞–∫ –≤ renderFilters)
          if (employee.role) {
            userAccess.role = employee.role.toLowerCase();
          } else if (employee.position) {
            const position = employee.position.toLowerCase();
            if (position.includes('–º–µ–Ω–µ–¥–∂–µ—Ä') || position.includes('manager')) {
              userAccess.role = '–º–µ–Ω–µ–¥–∂–µ—Ä';
            } else if (position.includes('–∫–µ—Ä—ñ–≤–Ω–∏–∫') || position.includes('head')) {
              userAccess.role = '–∫–µ—Ä—ñ–≤–Ω–∏–∫';
            } else if (position.includes('–∞–¥–º—ñ–Ω') || position.includes('admin')) {
              userAccess.role = '–∞–¥–º—ñ–Ω';
            }
          }
          
          console.log('[updateAlertsManagersFilter] userAccess –ø—ñ—Å–ª—è –ø–æ—à—É–∫—É —á–µ—Ä–µ–∑ members:', userAccess);
        } else {
          console.log('[updateAlertsManagersFilter] Employee –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π –ø–æ employeeId:', currentMember.employeeId);
        }
      } else {
        console.log('[updateAlertsManagersFilter] Member –Ω–µ –º–∞—î employeeId –∞–±–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π');
      }
    } else {
      console.log('[updateAlertsManagersFilter] window.state.allMembers –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
    }
    
    if (departmentsData.length > 0 && managersData.length > 0) {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Firebase
      let allManagers = managersData;
      
      // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –æ—Ç–¥–µ–ª—É
      if (currentDepartment) {
        allManagers = allManagers.filter(manager => {
          return manager.departmentId === currentDepartment ||
                 manager.department === currentDepartment ||
                 (manager.department && manager.department.id === currentDepartment);
        });
      }
      
      // –ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞: –µ—Å–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä ‚Äî —Ç–æ–ª—å–∫–æ –æ–Ω, –µ—Å–ª–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å ‚Äî –≤—Å–µ –∏–∑ –æ—Ç–¥–µ–ª–∞, –µ—Å–ª–∏ –∞–¥–º–∏–Ω ‚Äî –≤—Å–µ
      if (!userAccess.isAdmin && userAccess.employeeId) {
        if (userAccess.role && userAccess.role.includes('–º–µ–Ω–µ–¥–∂')) {
          // –¢–æ–ª—å–∫–æ —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
          filteredManagers = allManagers.filter(emp => emp.id === userAccess.employeeId);
          console.log('[updateAlertsManagersFilter] –ú–µ–Ω–µ–¥–∂–µ—Ä –±–∞—á–∏—Ç—å —Ç—ñ–ª—å–∫–∏ —Å–µ–±–µ:', filteredManagers);
        } else if (userAccess.role && userAccess.role.includes('–∫–µ—Ä—ñ–≤–Ω–∏–∫')) {
          // –í—Å–µ –∏–∑ –µ–≥–æ –æ—Ç–¥–µ–ª–∞
          filteredManagers = allManagers.filter(emp => {
            if (!emp.department) return false;
            if (typeof emp.department === 'object' && emp.department.id) {
              return emp.department.id === userAccess.departmentId;
            } else if (typeof emp.department === 'string') {
              return emp.department === userAccess.departmentId;
            }
            return false;
          });
          console.log('[updateAlertsManagersFilter] –ö–µ—Ä—ñ–≤–Ω–∏–∫ –±–∞—á–∏—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤ –≤—ñ–¥–¥—ñ–ª—É:', filteredManagers);
        } else {
          // fallback: –≤—Å–µ
          filteredManagers = allManagers;
          console.log('[updateAlertsManagersFilter] –Ü–Ω—à–∞ —Ä–æ–ª—å, –≤—Å—ñ –º–µ–Ω–µ–¥–∂–µ—Ä–∏');
        }
      } else {
        // –ê–¥–º–∏–Ω –≤–∏–¥–∏—Ç –≤—Å–µ—Ö
        filteredManagers = allManagers;
      }
      
      managerOptions = filteredManagers.map(manager => 
        `<option value="${manager.id}">${manager.name}</option>`
      ).join('');
    } else {
      // Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ–¥–∞–∂
      let managersInDepartment = currentDepartment 
        ? [...new Set(masterData.filter(d => d['–í—ñ–¥–¥—ñ–ª'] === currentDepartment).map(d => d['–û—Å–Ω–æ–≤–Ω–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä']))]
        : [...new Set(masterData.map(d => d['–û—Å–Ω–æ–≤–Ω–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä']))];
      
      // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç—É –∂–µ –ª–æ–≥–∏–∫—É —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
      if (!userAccess.isAdmin && userAccess.employeeId) {
        if (userAccess.role && userAccess.role.includes('–º–µ–Ω–µ–¥–∂')) {
          // –¢–æ–ª—å–∫–æ —Å–∞–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
          const currentUser = managersData.find(emp => emp.id === userAccess.employeeId);
          if (currentUser) {
            managersInDepartment = managersInDepartment.filter(manager => manager === currentUser.name);
          }
        } else if (userAccess.role && userAccess.role.includes('–∫–µ—Ä—ñ–≤–Ω–∏–∫')) {
          // –í—Å–µ –∏–∑ –µ–≥–æ –æ—Ç–¥–µ–ª–∞
          managersInDepartment = managersInDepartment.filter(manager => {
            const emp = managersData.find(m => m.name === manager);
            if (!emp || !emp.department) return false;
            return emp.department === userAccess.departmentId;
          });
        }
      }
      
      managerOptions = managersInDepartment.filter(Boolean).map(manager => 
        `<option value="${manager}">${manager}</option>`
      ).join('');
    }
    
    managerFilter.innerHTML = `
      <option value="">–í—Å—ñ –º–µ–Ω–µ–¥–∂–µ—Ä–∏</option>
      ${managerOptions}
    `;
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–∑ Firebase –∏–ª–∏ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂
  function getManagerName(managerId) {
    if (!managerId) return null;
    
    // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º Firebase –¥–∞–Ω–Ω—ã–µ
    if (managersData.length > 0) {
      const manager = managersData.find(m => m.id === managerId);
      return manager ? manager.name : null;
    }
    
    // Fallback: ID –∏ –∏–º—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ (–∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂)
    return managerId;
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –æ—Ç–¥–µ–ª–∞
  function getDepartmentName(departmentId) {
    if (!departmentId) return null;
    
    // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º Firebase –¥–∞–Ω–Ω—ã–µ
    if (departmentsData.length > 0) {
      const department = departmentsData.find(d => d.id === departmentId);
      return department ? department.name : null;
    }
    
    // Fallback: ID –∏ –∏–º—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ (–∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂)
    return departmentId;
  }
  

  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–∑ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞
  function getManagerClients(managerId) {
    if (!managerId) return [];
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    const managerName = getManagerName(managerId);
    if (!managerName) return [];
    
    // –ò—â–µ–º –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ —ç—Ç–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ
    return Object.entries(clientManagerDirectory)
      .filter(([code, info]) => info.manager && info.manager.trim() === managerName.trim())
      .map(([code, info]) => ({
        code,
        name: info.name,
        manager: info.manager,
        link: info.link
      }));
  }
  
  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  function passesFilters(sale) {
    const clientCode = sale['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥'];
    
    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç userAccess –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –º–æ–¥—É–ª—é –ü–æ–º—ñ—á–Ω–∏–∫ –ø—Ä–æ–¥–∞–∂—É
    const userAccess = {
      userId: window.state?.currentUserId,
      employeeId: null,
      employee: null,
      role: window.state?.currentUserRole?.toLowerCase(),
      departmentId: window.state?.currentUserDepartment,
      isAdmin: window.state?.isAdmin || false
    };
    
    // –ù–∞—Ö–æ–¥–∏–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–æ userId
    if (userAccess.userId && managersData.length > 0) {
      const currentEmployee = managersData.find(emp => emp.userId === userAccess.userId);
      if (currentEmployee) {
        userAccess.employeeId = currentEmployee.id;
        userAccess.employee = currentEmployee;
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º departmentId –µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω
        if (!userAccess.departmentId && currentEmployee.department) {
          if (typeof currentEmployee.department === 'object' && currentEmployee.department.id) {
            userAccess.departmentId = currentEmployee.department.id;
          } else if (typeof currentEmployee.department === 'string') {
            userAccess.departmentId = currentEmployee.department;
          }
        }
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º
    if (!userAccess.isAdmin) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∞–ª–µ—Ä—Ç–æ–≤ –∫–æ–º–ø–∞–Ω–∏–∏
      if (window.hasPermission && window.hasPermission('alerts_view_all_clients')) {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å –≤—Å–µ –∞–ª–µ—Ä—Ç—ã - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
      } else if (window.hasPermission && window.hasPermission('alerts_view_department_clients')) {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å –∞–ª–µ—Ä—Ç—ã —Å–≤–æ–µ–≥–æ –æ—Ç–¥–µ–ª–∞
        const currentUser = managersData.find(emp => emp.id === userAccess.employeeId);
        if (currentUser && currentUser.department) {
          const userDeptId = typeof currentUser.department === 'object' ? currentUser.department.id : currentUser.department;
          const clientInfo = clientManagerDirectory[clientCode];
          if (!clientInfo) return false;
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–µ–Ω—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É –∏–∑ –æ—Ç–¥–µ–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          const departmentManagers = managersData.filter(manager => {
            return manager.departmentId === userDeptId ||
                   manager.department === userDeptId ||
                   (manager.department && manager.department.id === userDeptId);
          });
          
          const departmentManagerNames = departmentManagers.map(m => m.name);
          if (!departmentManagerNames.includes(clientInfo.manager)) {
            return false;
          }
        }
      } else if (window.hasPermission && window.hasPermission('alerts_view_manager_clients')) {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
        const currentUser = managersData.find(emp => emp.id === userAccess.employeeId);
        if (currentUser) {
          const managerName = currentUser.name;
          const clientInfo = clientManagerDirectory[clientCode];
          if (!clientInfo || clientInfo.manager !== managerName) {
            return false;
          }
        }
      } else {
        // –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä - —Å–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ
        return false;
      }
    }
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω, –ø—Ä–∏–º–µ–Ω—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ —Ä–æ–ª—è–º
    if (!userAccess.isAdmin && userAccess.employeeId) {
      if (userAccess.role && userAccess.role.includes('–º–µ–Ω–µ–¥–∂')) {
        // –ú–µ–Ω–µ–¥–∂–µ—Ä –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
        const currentUser = managersData.find(emp => emp.id === userAccess.employeeId);
        if (currentUser) {
          const managerName = currentUser.name;
          const clientInfo = clientManagerDirectory[clientCode];
          if (!clientInfo || clientInfo.manager !== managerName) {
            return false;
          }
        }
      } else if (userAccess.role && userAccess.role.includes('–∫–µ—Ä—ñ–≤–Ω–∏–∫')) {
        // –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –≤–∏–¥–∏—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å–≤–æ–µ–≥–æ –æ—Ç–¥–µ–ª–∞
        const currentUser = managersData.find(emp => emp.id === userAccess.employeeId);
        if (currentUser && currentUser.department) {
          const userDeptId = typeof currentUser.department === 'object' ? currentUser.department.id : currentUser.department;
          const clientInfo = clientManagerDirectory[clientCode];
          if (!clientInfo) return false;
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–µ–Ω—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É –∏–∑ –æ—Ç–¥–µ–ª–∞ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è
          const departmentManagers = managersData.filter(manager => {
            return manager.departmentId === userDeptId ||
                   manager.department === userDeptId ||
                   (manager.department && manager.department.id === userDeptId);
          });
          
          const departmentManagerNames = departmentManagers.map(m => m.name);
          if (!departmentManagerNames.includes(clientInfo.manager)) {
            return false;
          }
        }
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫—É –∫–ª–∏–µ–Ω—Ç-–º–µ–Ω–µ–¥–∂–µ—Ä –∏–∑ API
    const clientInfo = clientManagerDirectory[clientCode];
    if (!clientInfo) {
      // –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ—Ç –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ API, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—É—é –ª–æ–≥–∏–∫—É –∫–∞–∫ fallback
      return passesFiltersOldLogic(sale);
    }
    
    // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä - –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–ª–∏–µ–Ω—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç —ç—Ç–æ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É –ø–æ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫—É
    if (currentManager) {
      const managerName = getManagerName(currentManager);
      if (!managerName || !clientInfo.manager) {
        return false;
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–ª–∏–µ–Ω—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É —Å–æ–≥–ª–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫—É
      return clientInfo.manager.trim() === managerName.trim();
    }
    
    // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Ç–æ–ª—å–∫–æ –æ—Ç–¥–µ–ª (–±–µ–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞) - –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–ª–∏–µ–Ω—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –º–µ–Ω–µ–¥–∂–µ—Ä—É –∏–∑ —ç—Ç–æ–≥–æ –æ—Ç–¥–µ–ª–∞
    else if (currentDepartment) {
      if (managersData.length > 0) {
        // –†–µ–∂–∏–º Firebase: –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞
        const departmentManagers = managersData.filter(manager => {
          return manager.departmentId === currentDepartment ||
                 manager.department === currentDepartment ||
                 (manager.department && manager.department.id === currentDepartment);
        });
        
        const departmentManagerNames = departmentManagers.map(m => m.name);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ª–∏ –∫–ª–∏–µ–Ω—Ç –æ–¥–Ω–æ–º—É –∏–∑ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –æ—Ç–¥–µ–ª–∞ —Å–æ–≥–ª–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫—É
        return departmentManagerNames.includes(clientInfo.manager);
      } else {
        // Fallback —Ä–µ–∂–∏–º: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—É—é –ª–æ–≥–∏–∫—É
        return passesFiltersOldLogic(sale);
      }
    }
    
    return true;
  }
  
  // –°—Ç–∞—Ä–∞—è –ª–æ–≥–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∫–∞–∫ fallback
  function passesFiltersOldLogic(sale) {
    // –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç userAccess –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –º–æ–¥—É–ª—é –ü–æ–º—ñ—á–Ω–∏–∫ –ø—Ä–æ–¥–∞–∂—É
    const userAccess = {
      userId: window.state?.currentUserId,
      employeeId: null,
      employee: null,
      role: window.state?.currentUserRole?.toLowerCase(),
      departmentId: window.state?.currentUserDepartment,
      isAdmin: window.state?.isAdmin || false
    };
    
    // –ù–∞—Ö–æ–¥–∏–º —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–æ userId
    if (userAccess.userId && managersData.length > 0) {
      const currentEmployee = managersData.find(emp => emp.userId === userAccess.userId);
      if (currentEmployee) {
        userAccess.employeeId = currentEmployee.id;
        userAccess.employee = currentEmployee;
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º departmentId –µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω
        if (!userAccess.departmentId && currentEmployee.department) {
          if (typeof currentEmployee.department === 'object' && currentEmployee.department.id) {
            userAccess.departmentId = currentEmployee.department.id;
          } else if (typeof currentEmployee.department === 'string') {
            userAccess.departmentId = currentEmployee.department;
          }
        }
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º
    if (!userAccess.isAdmin) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö –∞–ª–µ—Ä—Ç–æ–≤ –∫–æ–º–ø–∞–Ω–∏–∏
      if (window.hasPermission && window.hasPermission('alerts_view_all_clients')) {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å –≤—Å–µ –∞–ª–µ—Ä—Ç—ã - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
      } else if (window.hasPermission && window.hasPermission('alerts_view_department_clients')) {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å –∞–ª–µ—Ä—Ç—ã —Å–≤–æ–µ–≥–æ –æ—Ç–¥–µ–ª–∞
        const currentUser = managersData.find(emp => emp.id === userAccess.employeeId);
        if (currentUser && currentUser.department) {
          const userDeptId = typeof currentUser.department === 'object' ? currentUser.department.id : currentUser.department;
          const departmentManagers = managersData.filter(manager => {
            return manager.departmentId === userDeptId ||
                   manager.department === userDeptId ||
                   (manager.department && manager.department.id === userDeptId);
          });
          
          const departmentManagerNames = departmentManagers.map(m => m.name);
          if (!departmentManagerNames.includes(sale['–û—Å–Ω–æ–≤–Ω–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä'])) {
            return false;
          }
        }
      } else if (window.hasPermission && window.hasPermission('alerts_view_manager_clients')) {
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
        const currentUser = managersData.find(emp => emp.id === userAccess.employeeId);
        if (currentUser && sale['–û—Å–Ω–æ–≤–Ω–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä'] !== currentUser.name) {
          return false;
        }
      } else {
        // –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä - —Å–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ
        return false;
      }
    }
    
    // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω, –ø—Ä–∏–º–µ–Ω—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø–æ —Ä–æ–ª—è–º
    if (!userAccess.isAdmin && userAccess.employeeId) {
      if (userAccess.role && userAccess.role.includes('–º–µ–Ω–µ–¥–∂')) {
        // –ú–µ–Ω–µ–¥–∂–µ—Ä –≤–∏–¥–∏—Ç —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
        const currentUser = managersData.find(emp => emp.id === userAccess.employeeId);
        if (currentUser && sale['–û—Å–Ω–æ–≤–Ω–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä'] !== currentUser.name) {
          return false;
        }
      } else if (userAccess.role && userAccess.role.includes('–∫–µ—Ä—ñ–≤–Ω–∏–∫')) {
        // –†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å –≤–∏–¥–∏—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å–≤–æ–µ–≥–æ –æ—Ç–¥–µ–ª–∞
        const currentUser = managersData.find(emp => emp.id === userAccess.employeeId);
        if (currentUser && currentUser.department) {
          const userDeptId = typeof currentUser.department === 'object' ? currentUser.department.id : currentUser.department;
          const departmentManagers = managersData.filter(manager => {
            return manager.departmentId === userDeptId ||
                   manager.department === userDeptId ||
                   (manager.department && manager.department.id === userDeptId);
          });
          
          const departmentManagerNames = departmentManagers.map(m => m.name);
          if (!departmentManagerNames.includes(sale['–û—Å–Ω–æ–≤–Ω–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä'])) {
            return false;
          }
        }
      }
    }
    
    // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä - —Ñ–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–æ –Ω–µ–º—É
    if (currentManager) {
      if (managersData.length > 0) {
        // –†–µ–∂–∏–º Firebase: –∏—â–µ–º –ø–æ ID –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        const manager = managersData.find(m => m.id === currentManager);
        if (!manager || sale['–û—Å–Ω–æ–≤–Ω–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä'] !== manager.name) {
          return false;
        }
      } else {
        // Fallback —Ä–µ–∂–∏–º: –ø—Ä—è–º–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏
        if (sale['–û—Å–Ω–æ–≤–Ω–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä'] !== currentManager) {
          return false;
        }
      }
    }
    // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Ç–æ–ª—å–∫–æ –æ—Ç–¥–µ–ª (–±–µ–∑ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞) - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –æ—Ç–¥–µ–ª–∞
    else if (currentDepartment) {
      if (managersData.length > 0) {
        // –†–µ–∂–∏–º Firebase: –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞
        const departmentManagers = managersData.filter(manager => {
          return manager.departmentId === currentDepartment ||
                 manager.department === currentDepartment ||
                 (manager.department && manager.department.id === currentDepartment);
        });
        
        const departmentManagerNames = departmentManagers.map(m => m.name);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ–¥–∞–∂–∏ —Å—Ä–µ–¥–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –æ—Ç–¥–µ–ª–∞
        if (!departmentManagerNames.includes(sale['–û—Å–Ω–æ–≤–Ω–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä'])) {
          return false;
        }
      } else {
        // Fallback —Ä–µ–∂–∏–º: –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–æ–¥–∞–∂
        const managersInDepartment = [...new Set(masterData.filter(d => d['–í—ñ–¥–¥—ñ–ª'] === currentDepartment).map(d => d['–û—Å–Ω–æ–≤–Ω–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä']))];
        
        if (!managersInDepartment.includes(sale['–û—Å–Ω–æ–≤–Ω–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä'])) {
          return false;
        }
      }
    }
    
    return true;
  }

  function renderTabs() {
    const tabsDiv = window.alertsGet('alerts-tabs-container');
    if (!tabsDiv) return;
    const tabs = [
      {id: 'revenue-drop', label: '–°–ø–∞–¥ –≤–∏—Ä—É—á–∫–∏'},
      {id: 'frequency-drop', label: '–ß–∞—Å—Ç–æ—Ç–∞'},
      {id: 'avgcheck-drop', label: '–°–µ—Ä–µ–¥–Ω—ñ–π —á–µ–∫'},
      {id: 'missed-forecast', label: '–ü—Ä–æ–≥–Ω–æ–∑'},
      {id: 'product-drop', label: '–¢–æ–≤–∞—Ä–∏'},
      {id: 'overdue-agreements', label: '–ü—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω—ñ –¥–æ–º–æ–≤–ª–µ–Ω–æ—Å—Ç—ñ'},
      {id: 'manager-analytics', label: '–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤'},
      {id: 'client-reports', label: '–î–µ—Ç–∞–ª—å–Ω—ñ –∑–≤—ñ—Ç–∏'}
    ];
    tabsDiv.innerHTML = tabs.map(tab =>
      `<button data-signal-id="${tab.id}" class="signal-tab-btn px-3 py-2 rounded mr-2 ${currentSignal===tab.id?'bg-indigo-600 text-white':'bg-gray-700 text-gray-200 hover:bg-gray-600'}">${tab.label}</button>`
    ).join('');
    
    container.querySelectorAll('.signal-tab-btn').forEach(btn => {
        btn.onclick = () => setSignal(btn.dataset.signalId);
    });
  }

  function setSignal(signal) {
    currentSignal = signal;
    renderTabs();
    renderSignals();
  }

  function renderSignals() {
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—à–±–æ—Ä–¥ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    if (typeof renderDashboard === 'function') {
      renderDashboard();
    } else {
      console.warn('‚ö†Ô∏è –§—É–Ω–∫—Ü—ñ—è renderDashboard –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ - –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞—à–±–æ—Ä–¥—É');
    }
    
    if (currentSignal === 'revenue-drop') {
      renderRevenueDrop();
    } else if (currentSignal === 'frequency-drop') {
      renderFrequencyDrop();
    } else if (currentSignal === 'avgcheck-drop') {
      renderAvgCheckDrop();
    } else if (currentSignal === 'missed-forecast') {
      renderMissedForecast();
    } else if (currentSignal === 'product-drop') {
      renderProductDrop();
    } else if (currentSignal === 'overdue-agreements') {
      renderOverdueAgreements();
    } else if (currentSignal === 'manager-analytics') {
      renderManagerAnalytics();
    } else if (currentSignal === 'client-reports') {
      renderClientReports();
    }
  }



  function renderRevenueDrop() {
    const now = new Date();
    const periodMs = currentPeriod * 30 * 24 * 60 * 60 * 1000;
    const prevPeriodMs = periodMs;
    const clients = {};
    masterData.forEach(sale => {
      if (!passesFilters(sale)) return;
      const code = sale['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥'];
      const date = new Date(sale['–î–∞—Ç–∞']);
      const revenue = typeof sale['–í—ã—Ä—É—á–∫–∞'] === 'string' ? parseFloat(sale['–í—ã—Ä—É—á–∫–∞'].replace(/\s/g, '').replace(',', '.')) : (sale['–í—ã—Ä—É—á–∫–∞'] || 0);
      if (!clients[code]) clients[code] = { name: getClientName(code, sale['–ö–ª–∏–µ–Ω—Ç']), code, now: 0, prev: 0, link: clientLinks[code] };
      if (now - date <= periodMs) clients[code].now += revenue;
      else if (now - date <= periodMs + prevPeriodMs) clients[code].prev += revenue;
    });
    let alerts = Object.values(clients)
      .filter(c => c.prev > 0 && c.now < c.prev * 0.7)
      .sort((a, b) => (a.now/a.prev) - (b.now/b.prev));
    alerts = window.alertsFilterClients(alerts);
    renderTable(alerts, ['–ö–ª—ñ—î–Ω—Ç','–í–∏—Ä—É—á–∫–∞ (–ø–µ—Ä—ñ–æ–¥)','–ë—É–ª–æ (–¥–æ)','–ó–º—ñ–Ω–∞','CRM','–°—Ç–∞—Ç—É—Å','–î—ñ—ó','–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ'], c => [
      (c.now < c.prev*0.5
        ? `<span title='–ö—Ä–∏—Ç–∏—á–Ω–µ –ø–∞–¥—ñ–Ω–Ω—è' style='vertical-align:middle; margin-right:4px;'>
            <svg width='18' height='18' viewBox='0 0 20 20' fill='red' style='display:inline'><polygon points='10,2 2,18 18,18'/></svg>
          </span>`
        : `<span title='–ú–µ–Ω—à –∫—Ä–∏—Ç–∏—á–Ω–µ' style='vertical-align:middle; margin-right:4px;'>
            <svg width='18' height='18' viewBox='0 0 20 20' fill='#FFD600' style='display:inline'><polygon points='10,2 2,18 18,18'/></svg>
          </span>`)
      + `<span class='text-gray-200'>${c.name}</span>`,
      c.now.toFixed(2),
      c.prev.toFixed(2),
      ((c.now-c.prev)/c.prev*100).toFixed(1)+'%',
      c.link ? `<a href="${c.link}" target="_blank" class="text-blue-600 underline">CRM</a>` : '',
      renderClientStatus(c.code),
      renderActionsMenu(c.code),
      `<button class='px-2 py-1 bg-gray-100 rounded text-black' onclick="window.showClientDetail('${c.code}')">–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ</button>`
    ], c => '');
  }

  function renderFrequencyDrop() {
    const now = new Date();
    const periodMs = currentPeriod * 30 * 24 * 60 * 60 * 1000;
    const prevPeriodMs = periodMs;
    const clients = {};
    masterData.forEach(sale => {
      if (!passesFilters(sale)) return;
      const code = sale['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥'];
      const date = new Date(sale['–î–∞—Ç–∞']);
      if (!clients[code]) clients[code] = { name: getClientName(code, sale['–ö–ª–∏–µ–Ω—Ç']), code, now: [], prev: [], link: clientLinks[code], manager: sale['–û—Å–Ω–æ–≤–Ω–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä'] };
      if (now - date <= periodMs) clients[code].now.push(date);
      else if (now - date <= periodMs + prevPeriodMs) clients[code].prev.push(date);
    });
    // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ —ñ–Ω—Ç–µ—Ä–≤–∞–ª—É
    function avgInterval(dates) {
      if (dates.length < 2) return null;
      // –£—á–∏—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –¥–Ω–∏
      const uniqueDays = Array.from(new Set(dates.map(d => d.toISOString().slice(0, 10)))).map(s => new Date(s)).sort((a, b) => a - b);
      if (uniqueDays.length < 2) return null;
      let sum = 0;
      for (let i = 1; i < uniqueDays.length; ++i) sum += (uniqueDays[i] - uniqueDays[i - 1]);
      return sum / (uniqueDays.length - 1);
    }
    let alerts = Object.values(clients).map(c => {
      const nowInt = avgInterval(c.now);
      const prevInt = avgInterval(c.prev);
      return { ...c, nowInt, prevInt };
    }).filter(c => c.prevInt && c.nowInt && c.nowInt > c.prevInt*2);
    alerts = window.alertsFilterClients(alerts).sort((a,b)=>b.nowInt/b.prevInt - a.nowInt/a.prevInt);
    renderTable(alerts, ['–ö–ª—ñ—î–Ω—Ç','–Ü–Ω—Ç–µ—Ä–≤–∞–ª (–¥–Ω—ñ–≤, –∑–∞—Ä–∞–∑)','–ë—É–ª–æ (–¥–Ω—ñ–≤)','–ó–º—ñ–Ω–∞','CRM','–°—Ç–∞—Ç—É—Å','–î—ñ—ó','–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ'], c => [
      c.name,
      c.nowInt ? (c.nowInt / (1000 * 60 * 60 * 24)).toFixed(1) : '-',
      c.prevInt ? (c.prevInt / (1000 * 60 * 60 * 24)).toFixed(1) : '-',
      c.prevInt ? (((c.nowInt - c.prevInt) / c.prevInt) * 100).toFixed(1) + '%' : '-',
      c.link ? `<a href="${c.link}" target="_blank" class="text-blue-600 underline">CRM</a>` : '',
      renderClientStatus(c.code),
      renderActionsMenu(c.code),
      `<button class='px-2 py-1 bg-gray-100 rounded text-black' onclick="window.showClientDetail('${c.code}')">–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ</button>`
    ], c => c.nowInt > c.prevInt*3 ? 'bg-red-900' : 'bg-yellow-900');

    // --- Chart.js –≥—Ä–∞—Ñ—ñ–∫ ---
    const chartDiv = window.alertsGet('chart-container');
    if (chartDiv && alerts.length > 0) {
      chartDiv.innerHTML = '<canvas id="freqChart" height="120"></canvas>';
      const ctx = window.alertsGet('freqChart').getContext('2d');
      const top = alerts.slice(0, 10);
      new Chart(ctx, {
        type: 'bar',
        data: {
          labels: top.map(c=>c.name),
          datasets: [{
            label: '–ó—Ä–æ—Å—Ç–∞–Ω–Ω—è —ñ–Ω—Ç–µ—Ä–≤–∞–ª—É (–¥–Ω—ñ–≤)',
            data: top.map(c=>c.nowInt-c.prevInt),
            backgroundColor: 'rgba(255,99,132,0.5)'
          }]
        },
        options: {responsive:true, plugins:{legend:{display:false}}}
      });
    } else if (chartDiv) {
      chartDiv.innerHTML = '';
    }
  }

  function renderAvgCheckDrop() {
    const now = new Date();
    const periodMs = currentPeriod * 30 * 24 * 60 * 60 * 1000;
    const prevPeriodMs = periodMs;
    const clients = {};
    masterData.forEach(sale => {
      if (!passesFilters(sale)) return;
      const code = sale['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥'];
      const date = new Date(sale['–î–∞—Ç–∞']);
      const revenue = typeof sale['–í—ã—Ä—É—á–∫–∞'] === 'string' ? parseFloat(sale['–í—ã—Ä—É—á–∫–∞'].replace(/\s/g, '').replace(',', '.')) : (sale['–í—ã—Ä—É—á–∫–∞'] || 0);
      if (!clients[code]) clients[code] = { name: getClientName(code, sale['–ö–ª–∏–µ–Ω—Ç']), code, now: [], prev: [], link: clientLinks[code], manager: sale['–û—Å–Ω–æ–≤–Ω–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä'] };
      if (now - date <= periodMs) clients[code].now.push(revenue);
      else if (now - date <= periodMs + prevPeriodMs) clients[code].prev.push(revenue);
    });
    function avg(arr) { return arr.length ? arr.reduce((a,b)=>a+b,0)/arr.length : null; }
    let alerts = Object.values(clients).map(c => {
      const nowAvg = avg(c.now);
      const prevAvg = avg(c.prev);
      return { ...c, nowAvg, prevAvg };
    }).filter(c => c.prevAvg && c.nowAvg && c.nowAvg < c.prevAvg*0.8);
    alerts = window.alertsFilterClients(alerts).sort((a,b)=>a.nowAvg/a.prevAvg - b.nowAvg/b.prevAvg);
    renderTable(alerts, ['–ö–ª—ñ—î–Ω—Ç','–°–µ—Ä–µ–¥–Ω—ñ–π —á–µ–∫ (–∑–∞—Ä–∞–∑)','–ë—É–ª–æ','–ó–º—ñ–Ω–∞','CRM','–°—Ç–∞—Ç—É—Å','–î—ñ—ó','–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ'], c => [
      c.name,
      c.nowAvg ? c.nowAvg.toFixed(2) : '-',
      c.prevAvg ? c.prevAvg.toFixed(2) : '-',
      c.prevAvg ? ((c.nowAvg-c.prevAvg)/c.prevAvg*100).toFixed(1)+'%' : '-',
      c.link ? `<a href="${c.link}" target="_blank" class="text-blue-600 underline">CRM</a>` : '',
      renderClientStatus(c.code),
      renderActionsMenu(c.code),
      `<button class='px-2 py-1 bg-gray-100 rounded text-black' onclick="window.showClientDetail('${c.code}')">–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ</button>`
    ], c => c.nowAvg < c.prevAvg*0.6 ? 'bg-red-900' : 'bg-yellow-900');

    // --- Chart.js –≥—Ä–∞—Ñ—ñ–∫ ---
    const chartDiv = window.alertsGet('chart-container');
    if (chartDiv && alerts.length > 0) {
      chartDiv.innerHTML = '<canvas id="avgCheckChart" height="120"></canvas>';
      const ctx = window.alertsGet('avgCheckChart').getContext('2d');
      const top = alerts.slice(0, 10);
      new Chart(ctx, {
        type: 'bar',
        data: {
          labels: top.map(c=>c.name),
          datasets: [{
            label: '–ü–∞–¥—ñ–Ω–Ω—è —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ —á–µ–∫–∞',
            data: top.map(c=>c.prevAvg-c.nowAvg),
            backgroundColor: 'rgba(54,162,235,0.5)'
          }]
        },
        options: {responsive:true, plugins:{legend:{display:false}}}
      });
    } else if (chartDiv) {
      chartDiv.innerHTML = '';
    }
  }

  function renderMissedForecast() {
    const now = new Date();
    const periodMs = currentPeriod * 30 * 24 * 60 * 60 * 1000;
    const clients = {};
    masterData.forEach(sale => {
      if (!passesFilters(sale)) return;
      const code = sale['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥'];
      const date = new Date(sale['–î–∞—Ç–∞']);
      if (!clients[code]) clients[code] = { name: getClientName(code, sale['–ö–ª–∏–µ–Ω—Ç']), code, dates: [], link: clientLinks[code], manager: sale['–û—Å–Ω–æ–≤–Ω–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä'] };
      if (now - date <= periodMs*2) clients[code].dates.push(date);
    });
    function avgInterval(dates) {
      if (dates.length < 2) return null;
      // –£—á–∏—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –¥–Ω–∏
      const uniqueDays = Array.from(new Set(dates.map(d => d.toISOString().slice(0, 10)))).map(s => new Date(s)).sort((a, b) => a - b);
      if (uniqueDays.length < 2) return null;
      let sum = 0;
      for (let i = 1; i < uniqueDays.length; ++i) sum += (uniqueDays[i] - uniqueDays[i - 1]);
      return sum / (uniqueDays.length - 1);
    }
    let alerts = Object.values(clients).map(c => {
      if (c.dates.length < 2) return null;
      c.dates.sort((a,b)=>a-b);
      const last = c.dates[c.dates.length-1];
      const interval = avgInterval(c.dates);
      const forecast = new Date(last.getTime() + interval);
      const hasOrderAfter = c.dates.some(d => d > forecast);
      return (!hasOrderAfter && forecast < now) ? {
        ...c,
        forecast,
        last,
        avgIntervalDays: interval / (1000 * 60 * 60 * 24)
      } : null;
    }).filter(Boolean);
    alerts = window.alertsFilterClients(alerts).sort((a,b)=>b.forecast-a.forecast);
    renderTable(alerts, ['–ö–ª—ñ—î–Ω—Ç','–ü—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω–∞ –¥–∞—Ç–∞','–û—Å—Ç–∞–Ω–Ω—è –ø–æ–∫—É–ø–∫–∞','–°–µ—Ä–µ–¥–Ω—ñ–π —ñ–Ω—Ç–µ—Ä–≤–∞–ª (–¥–Ω—ñ–≤)','CRM','–°—Ç–∞—Ç—É—Å','–î—ñ—ó','–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ'], c => [
      c.name,
      c.forecast ? c.forecast.toLocaleDateString('uk-UA') : '-',
      c.last ? c.last.toLocaleDateString('uk-UA') : '-',
      c.avgIntervalDays ? c.avgIntervalDays.toFixed(1) : '-',
      c.link ? `<a href="${c.link}" target="_blank" class="text-blue-600 underline">CRM</a>` : '',
      renderClientStatus(c.code),
      renderActionsMenu(c.code),
      `<button class='px-2 py-1 bg-gray-100 rounded text-black' onclick="window.showClientDetail('${c.code}')">–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ</button>`
    ], c => c.forecast && c.forecast < now ? 'bg-red-900' : 'bg-yellow-900');

    // --- Chart.js –≥—Ä–∞—Ñ—ñ–∫ ---
    const chartDiv = window.alertsGet('chart-container');
    if (chartDiv && alerts.length > 0) {
      chartDiv.innerHTML = '<canvas id="forecastChart" height="120"></canvas>';
      const ctx = window.alertsGet('forecastChart').getContext('2d');
      const top = alerts.slice(0, 10);
      new Chart(ctx, {
        type: 'bar',
        data: {
          labels: top.map(c=>c.name),
          datasets: [{
            label: '–î–Ω—ñ–≤ –ø—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–Ω—è',
            data: top.map(c=>Math.round((now-c.forecast)/86400000)),
            backgroundColor: 'rgba(255,205,86,0.5)'
          }]
        },
        options: {responsive:true, plugins:{legend:{display:false}}}
      });
    } else if (chartDiv) {
      chartDiv.innerHTML = '';
    }
  }

  let productDropPage = 1;
  const PRODUCT_DROP_PAGE_SIZE = 20;

  function renderProductDrop() {
    const now = new Date();
    const monthAgo = new Date(now.getTime());
    monthAgo.setMonth(monthAgo.getMonth() - 1);
    const clients = {};
    masterData.forEach(sale => {
      if (!passesFilters(sale)) return;
      const code = sale['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥'];
      const product = sale['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞'];
      const date = new Date(sale['–î–∞—Ç–∞']);
      if (!clients[code]) clients[code] = { name: getClientName(code, sale['–ö–ª–∏–µ–Ω—Ç']), code, lostProducts: [], link: clientLinks[code], manager: sale['–û—Å–Ω–æ–≤–Ω–æ–π –º–µ–Ω–µ–¥–∂–µ—Ä'], lastDates: {} };
      if (!clients[code].lastDates[product] || clients[code].lastDates[product] < date) {
        clients[code].lastDates[product] = date;
      }
    });
    // –§–æ—Ä–º—É—î–º–æ –º–∞—Å–∏–≤: [{name, lostProducts: [{product, lastDate}], ...}]
    let clientList = Object.values(clients).map(c => {
      const lost = Object.entries(c.lastDates)
        .filter(([_, lastDate]) => lastDate < monthAgo)
        .map(([product, lastDate]) => ({ product, lastDate }));
      return { ...c, lostProducts: lost };
    }).filter(c => c.lostProducts.length > 0);
    
    clientList = window.alertsFilterClients(clientList).sort((a,b)=>b.lostProducts.length - a.lostProducts.length);

    // –ü–∞–≥—ñ–Ω–∞—Ü—ñ—è
    const totalPages = Math.ceil(clientList.length / PRODUCT_DROP_PAGE_SIZE) || 1;
    if (productDropPage > totalPages) productDropPage = totalPages;
    const pageClients = clientList.slice((productDropPage-1)*PRODUCT_DROP_PAGE_SIZE, productDropPage*PRODUCT_DROP_PAGE_SIZE);

    // –¢–∞–±–ª–∏—Ü—è
    const content = window.alertsGet('alerts-content-container');
    if (!content) return;
    content.innerHTML = `
      <div class="flex justify-between items-center mb-2">
        <h2 class="text-xl font-bold">–ö–ª—ñ—î–Ω—Ç–∏, —è–∫—ñ –ø–µ—Ä–µ—Å—Ç–∞–ª–∏ –∫—É–ø—É–≤–∞—Ç–∏ —Ç–æ–≤–∞—Ä–∏</h2>
        <span class="text-xs text-gray-400">${clientList.length} –∫–ª—ñ—î–Ω—Ç—ñ–≤</span>
      </div>
      <div class="mb-4">
        <button onclick="productDropPage=Math.max(1,productDropPage-1);renderProductDrop()" ${productDropPage <= 1 ? 'disabled' : ''} class="px-2 py-1 bg-gray-600 text-white rounded mr-2 ${productDropPage <= 1 ? 'opacity-50' : ''}">‚Üê –ü–æ–ø–µ—Ä–µ–¥–Ω—è</button>
        <span class="text-sm text-gray-300">–°—Ç–æ—Ä—ñ–Ω–∫–∞ ${productDropPage} –∑ ${totalPages}</span>
        <button onclick="productDropPage=Math.min(${totalPages},productDropPage+1);renderProductDrop()" ${productDropPage >= totalPages ? 'disabled' : ''} class="px-2 py-1 bg-gray-600 text-white rounded ml-2 ${productDropPage >= totalPages ? 'opacity-50' : ''}">–ù–∞—Å—Ç—É–ø–Ω–∞ ‚Üí</button>
      </div>
      <table class="min-w-full text-sm mb-4"><thead><tr>
        <th class="px-2 py-1">–ö–ª—ñ—î–Ω—Ç</th><th class="px-2 py-1">–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤—Ç—Ä–∞—á–µ–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤</th><th class="px-2 py-1">CRM</th><th class="px-2 py-1">–°—Ç–∞—Ç—É—Å</th><th class="px-2 py-1">–î—ñ—ó</th><th class="px-2 py-1">–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ</th><th class="px-2 py-1">–¢–æ–≤–∞—Ä–∏</th>
      </tr></thead><tbody>
        ${pageClients.map((c, idx) => {
          const safeId = 'lost_products_' + c.code.replace(/[^\w]/g, '_') + '_' + idx;
          return `<tr>
            <td class="px-2 py-1 align-top">${c.name}</td>
            <td class="px-2 py-1 align-top text-center"><span class="px-2 py-1 rounded-full bg-red-600 text-white text-xs">${c.lostProducts.length}</span></td>
            <td class="px-2 py-1 align-top">${c.link ? `<a href="${c.link}" target="_blank" class="text-blue-600 underline">CRM</a>` : ''}</td>
            <td class="px-2 py-1 align-top">${renderClientStatus(c.code)}</td>
            <td class="px-2 py-1 align-top">${renderActionsMenu(c.code)}</td>
            <td class="px-2 py-1 align-top"><button class='px-2 py-1 bg-gray-100 rounded text-black' onclick="window.showClientDetail('${c.code}')">–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ</button></td>
            <td class="px-2 py-1 align-top"><button class='px-2 py-1 bg-gray-100 rounded text-black' onclick="window.toggleLostProducts('${safeId}')">–ü–æ–∫–∞–∑–∞—Ç–∏</button><div id='${safeId}' class='hidden mt-2 text-xs bg-gray-900 rounded p-3 max-h-48 overflow-y-auto'><ul class='list-disc list-inside space-y-1'>${c.lostProducts.map(p=>`<li>${p.product} <span class='text-gray-400'>(${p.lastDate.toISOString().slice(0,10)})</span></li>`).join('')}</ul></div></td>
          </tr>`;
        }).join('')}
      </tbody></table>
    `;
  }

/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –∫–ª–∏–µ–Ω—Ç–∞ –≤ Firebase
 */
window.saveClientAction = async function(clientCode, actionType) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    if (!window.hasPermission || !window.hasPermission('alerts_add_actions')) {
      alert('–ü–æ–º–∏–ª–∫–∞: –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –¥—ñ–π –ø–æ –∞–ª–µ—Ä—Ç–∞—Ö');
      return;
    }
    
    const comment = document.getElementById('action-comment')?.value || '';
    const nextAction = document.getElementById('next-action')?.value || '';
    const nextActionDate = document.getElementById('next-action-date')?.value || '';
    const potentialOrderDate = document.getElementById('potential-order-date')?.value || '';
    const potentialAmount = document.getElementById('potential-amount')?.value || '';
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userId = window.state?.currentUserId;
    const companyId = window.state?.currentCompanyId;
    
    if (!userId || !companyId) {
      alert('–ü–æ–º–∏–ª–∫–∞: –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–∑–Ω–∞—á–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∞–±–æ –∫–æ–º–ø–∞–Ω—ñ—é');
      return;
    }
    
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Firebase
    const { db, serverTimestamp } = await import('../js/firebase.js');
    
    const now = new Date();
    const actionData = {
      id: `action_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
      type: actionType,
      date: now.toISOString().split('T')[0],
      time: now.toTimeString().slice(0, 5),
      comment: comment,
      nextAction: nextAction,
      nextActionDate: nextActionDate,
      status: 'completed',
      userId: userId,
      createdAt: now.toISOString() // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—É—é –¥–∞—Ç—É –≤–º–µ—Å—Ç–æ serverTimestamp –¥–ª—è –º–∞—Å—Å–∏–≤–∞
    };
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    if (!clientActionsData[clientCode]) {
      clientActionsData[clientCode] = {
        status: 'new',
        actions: [],
        lastActivity: null,
        potentialOrderDate: null,
        expectedAmount: null
      };
    }
    
    clientActionsData[clientCode].actions.push(actionData);
    clientActionsData[clientCode].lastActivity = now.toISOString();
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å "resolved" –µ—Å–ª–∏ –µ—Å—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑ –≤ –ø—Ä–æ—à–ª–æ–º
    let newStatus = 'in_progress';
    if (potentialOrderDate) {
      const orderDate = new Date(potentialOrderDate);
      const today = new Date();
      today.setHours(0, 0, 0, 0); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ –¥–∞—Ç
      
      if (orderDate < today) {
        newStatus = 'resolved';
      }
    }
    
    clientActionsData[clientCode].status = newStatus;
    clientActionsData[clientCode].updatedAt = serverTimestamp(); // –ú–µ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    
    if (potentialOrderDate) {
      clientActionsData[clientCode].potentialOrderDate = potentialOrderDate;
    }
    if (potentialAmount) {
      clientActionsData[clientCode].expectedAmount = parseFloat(potentialAmount);
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Firebase
    const { collection, doc, setDoc } = await import('../js/firebase.js');
    const docRef = doc(db, 'companies', companyId, 'clientAlerts', clientCode);
    
    await setDoc(docRef, clientActionsData[clientCode], { merge: true });
    
    console.log('‚úÖ –î—ñ—è –∑–±–µ—Ä–µ–∂–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ:', actionData);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    renderSignals();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    showActionNotification('–î—ñ—è –∑–±–µ—Ä–µ–∂–µ–Ω–∞ —É—Å–ø—ñ—à–Ω–æ!', 'success');
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥—ñ—ó:', error);
    showActionNotification('–ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥—ñ—ó: ' + error.message, 'error');
  }
};

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–µ–π—Å—Ç–≤–∏–∏
 */
function showActionNotification(message, type = 'info') {
  const notification = document.createElement('div');
  notification.className = `fixed top-4 right-4 z-[120] px-4 py-3 rounded-lg shadow-lg transition-all duration-300 ${
    type === 'success' ? 'bg-green-600 text-white' : 
    type === 'error' ? 'bg-red-600 text-white' : 
    'bg-blue-600 text-white'
  }`;
  notification.textContent = message;
  
  document.body.appendChild(notification);
  
  setTimeout(() => {
    notification.style.opacity = '0';
    setTimeout(() => notification.remove(), 300);
  }, 3000);
}

  function renderTable(list, headers, rowFn, rowClassFn) {
    const content = window.alertsGet('alerts-content-container');
    if (!content) return;
    content.innerHTML = `
      <div class="flex justify-between items-center mb-2">
        <h2 class="text-xl font-bold">–ö–ª—ñ—î–Ω—Ç–∏, —è–∫—ñ –ø–µ—Ä–µ—Å—Ç–∞–ª–∏ –∫—É–ø—É–≤–∞—Ç–∏ —Ç–æ–≤–∞—Ä–∏</h2>
        <span class="text-xs text-gray-400">${clientList.length} –∫–ª—ñ—î–Ω—Ç—ñ–≤</span>
      </div>
      <table class="min-w-full text-sm mb-4"><thead><tr>
        <th class="px-2 py-1">–ö–ª—ñ—î–Ω—Ç</th><th class="px-2 py-1">–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤—Ç—Ä–∞—á–µ–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤</th><th class="px-2 py-1">CRM</th><th class="px-2 py-1">–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ</th><th class="px-2 py-1">–¢–æ–≤–∞—Ä–∏</th>
      </tr></thead><tbody>
        ${pageClients.map((c, idx) => {
          const safeCode = c.code || c.name.replace(/[^a-zA-Z0-9_\-]/g, '_');
          const rowId = `prodrow_${safeCode}`;
          return `
          <tr class="bg-yellow-900">
            <td class="px-2 py-1 align-top font-bold">${c.name}</td>
            <td class="px-2 py-1 text-center align-top">${c.lostProducts.length}</td>
            <td class="px-2 py-1 align-top">${c.link ? `<a href="${c.link}" target="_blank" class="text-blue-600 underline">CRM</a>` : ''}</td>
            <td class="px-2 py-1 align-top"><button class='px-2 py-1 bg-gray-100 rounded text-black' onclick="window.showClientDetail('${c.code}')">–î–µ—Ç–∞–ª—å–Ω—ñ—à–µ</button></td>
            <td class="px-2 py-1 align-top">
              <button class="px-2 py-1 bg-gray-700 text-gray-200 rounded hover:bg-gray-600 flex items-center gap-1" onclick="window.toggleLostProductsRow('${rowId}')"><span id='icon_${rowId}'>‚ñº</span> –ü–æ–∫–∞–∑–∞—Ç–∏</button>
            </td>
          </tr>
          <tr id="${rowId}" class="hidden">
            <td colspan="5" class="bg-gray-800 text-gray-100 px-4 py-3 rounded-b-xl">
              <div class="font-semibold mb-2">–í—Ç—Ä–∞—á–µ–Ω–æ —Ç–æ–≤–∞—Ä–∏:</div>
              <ul class="space-y-1">
                ${c.lostProducts.map(lp => `<li>${lp.product}</li>`).join('')}
              </ul>
            </td>
          </tr>`;
        }).join('')}
      </tbody></table>
      <div class="flex justify-between items-center mb-2">
        <button ${productDropPage===1?'disabled':''} onclick="window.productDropPrevPage()" class="px-3 py-1 rounded bg-gray-200 hover:bg-gray-300 disabled:opacity-50">–ù–∞–∑–∞–¥</button>
        <span class="text-xs">–°—Ç–æ—Ä—ñ–Ω–∫–∞ ${productDropPage} –∑ ${totalPages}</span>
        <button ${productDropPage===totalPages?'disabled':''} onclick="window.productDropNextPage()" class="px-3 py-1 rounded bg-gray-200 hover:bg-gray-300 disabled:opacity-50">–í–ø–µ—Ä–µ–¥</button>
      </div>
    `;
    window.toggleLostProductsRow = function(id) {
      const row = window.alertsGet(id);
      if (!row) return;
      row.classList.toggle('hidden');
      const icon = window.alertsGet('icon_' + id);
      if (icon) icon.textContent = row.classList.contains('hidden') ? '‚ñº' : '‚ñ≤';
    };
    window.productDropPrevPage = function() {
      if (productDropPage > 1) { productDropPage--; renderProductDrop(); }
    };
    window.productDropNextPage = function() {
      if (productDropPage < totalPages) { productDropPage++; renderProductDrop(); }
    };

    // --- Chart.js –≥—Ä–∞—Ñ—ñ–∫ ---
    const chartDiv = window.alertsGet('chart-container');
    if (chartDiv && clientList.length > 0) {
      const top = clientList.slice(0, 10);
      chartDiv.innerHTML = '<canvas id="prodDropChart" height="120"></canvas>';
      const ctx = window.alertsGet('prodDropChart').getContext('2d');
      new Chart(ctx, {
        type: 'bar',
        data: {
          labels: top.map(c=>c.name),
          datasets: [{
            label: '–í—Ç—Ä–∞—á–µ–Ω—ñ —Ç–æ–≤–∞—Ä–∏',
            data: top.map(c=>c.lostProducts.length),
            backgroundColor: 'rgba(255,99,132,0.5)'
          }]
        },
        options: {responsive:true, plugins:{legend:{display:false}}}
      });
    } else if (chartDiv) {
      chartDiv.innerHTML = '';
    }
  }

  function renderTable(list, headers, rowFn, rowClassFn) {
    const content = window.alertsGet('alerts-content-container');
    if (!content) return;
    content.innerHTML = `
      <div class="flex justify-between items-center mb-2">
        <h2 class="text-xl font-bold">${getSignalTitle()}</h2>
        <span class="text-xs text-gray-400">${list.length} –∫–ª—ñ—î–Ω—Ç—ñ–≤</span>
      </div>
      <table class="min-w-full text-sm mb-4"><thead><tr>
        ${headers.map(h=>`<th class="px-2 py-1">${h}</th>`).join('')}
      </tr></thead><tbody>
        ${list.map(c => `<tr class="${rowClassFn(c)}">${rowFn(c).map(cell => `<td class="px-2 py-1">${cell}</td>`).join('')}</tr>`).join('')}
      </tbody></table>
    `;
  }

  function getSignalTitle() {
    switch(currentSignal) {
      case 'revenue-drop': return '–ö–ª—ñ—î–Ω—Ç–∏ –∑—ñ —Å–ø–∞–¥–æ–º –≤–∏—Ä—É—á–∫–∏ >30%';
      case 'frequency-drop': return '–ö–ª—ñ—î–Ω—Ç–∏ –∑ –ø–∞–¥—ñ–Ω–Ω—è–º —á–∞—Å—Ç–æ—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω—å';
      case 'avgcheck-drop': return '–ö–ª—ñ—î–Ω—Ç–∏ –∑—ñ –∑–º–µ–Ω—à–µ–Ω–Ω—è–º —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ —á–µ–∫–∞';
      case 'missed-forecast': return '–ö–ª—ñ—î–Ω—Ç–∏, —è–∫—ñ –Ω–µ –∑–∞–º–æ–≤–∏–ª–∏ —É –ø—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω—É –¥–∞—Ç—É';
      case 'product-drop': return '–ö–ª—ñ—î–Ω—Ç–∏, —è–∫—ñ –ø–µ—Ä–µ—Å—Ç–∞–ª–∏ –∫—É–ø—É–≤–∞—Ç–∏ —Ç–æ–≤–∞—Ä–∏';
      default: return '';
    }
  }

  function exportCSV() {
    const content = window.alertsGet('alerts-content-container');
    if (!content) return;
    const table = content.querySelector('table');
    if (!table) return;
    let csv = '';
    const rows = table.querySelectorAll('tr');
    rows.forEach(row => {
      const cells = row.querySelectorAll('th,td');
      csv += Array.from(cells).map(cell => '"'+cell.innerText.replace(/"/g,'""')+'"').join(',') + '\n';
    });
    const blob = new Blob([csv], {type: 'text/csv'});
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'alerts.csv';
    a.click();
    URL.revokeObjectURL(url);
  }
  
  // --- –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö ---
  loadData(); 
  isAlertsInitialized = true;
};

// --- –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞
function getClientName(clientCode, fallbackName) {
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –≤–∑—è—Ç—å –∏–∑ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ API
  if (clientNames[clientCode]) {
    return clientNames[clientCode];
  }
  
  // Fallback –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂
  return fallbackName || clientCode;
}

// --- –ú–æ–¥–∞–ª–∫–∞ –¥–µ—Ç–∞–ª—ñ–∑–∞—Ü—ñ—ó –ø–æ –∫–ª—ñ—î–Ω—Ç—É ---
// –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
window.toggleLostProducts = function(id) {
  const element = document.getElementById(id);
  if (element) {
    element.classList.toggle('hidden');
  }
};

// –ó–∞–ª–∏—à–∞—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ—é, –±–æ –≤–æ–Ω–∞ –º–æ–∂–µ –≤–∏–∫–ª–∏–∫–∞—Ç–∏—Å—å –∑ —Ä—ñ–∑–Ω–∏—Ö –º—ñ—Å—Ü—å
window.showClientDetail = function(clientCode) {
    console.log('showClientDetail called for code:', clientCode);
    const oldModal = document.getElementById('client-detail-modal');
    if (oldModal) oldModal.remove();

    const sales = masterData.filter(s => s['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥'] === clientCode);
    if (!sales.length) {
        console.log('No sales found for client code:', clientCode);
        return;
    }
  
    const monthMap = {};
    sales.forEach(sale => {
        const date = new Date(sale['–î–∞—Ç–∞']);
        const ym = date.getFullYear() + '-' + String(date.getMonth() + 1).padStart(2, '0');
        const revenue = typeof sale['–í—ã—Ä—É—á–∫–∞'] === 'string' ? parseFloat(sale['–í—ã—Ä—É—á–∫–∞'].replace(/\s/g, '').replace(',', '.')) : (sale['–í—ã—Ä—É—á–∫–∞'] || 0);
        if (!monthMap[ym]) monthMap[ym] = 0;
        monthMap[ym] += revenue;
    });
    const sortedMonths = Object.keys(monthMap).sort((a, b) => new Date(a + '-01') - new Date(b + '-01'));

    const dates = sales.map(s=>new Date(s['–î–∞—Ç–∞'])).sort((a,b)=>a-b);
    let freqArr = [];
    for (let i=1; i<dates.length; ++i) freqArr.push((dates[i]-dates[i-1])/86400000);

    const avgCheckArr = {};
    sales.forEach(sale => {
        const date = new Date(sale['–î–∞—Ç–∞']);
        const ym = date.getFullYear() + '-' + String(date.getMonth() + 1).padStart(2, '0');
        const revenue = typeof sale['–í—ã—Ä—É—á–∫–∞'] === 'string' ? parseFloat(sale['–í—ã—Ä—É—á–∫–∞'].replace(/\s/g, '').replace(',', '.')) : (sale['–í—ã—Ä—É—á–∫–∞'] || 0);
        if (!avgCheckArr[ym]) avgCheckArr[ym] = [];
        avgCheckArr[ym].push(revenue);
    });
    const avgCheckByMonth = Object.fromEntries(Object.entries(avgCheckArr).map(([m, arr]) => [m, arr.reduce((a,b)=>a+b,0)/arr.length]));
    const sortedAvgCheck = sortedMonths.map(m => avgCheckByMonth[m] || null);

    const salesByDate = {};
    sales.forEach(sale => {
        const date = sale['–î–∞—Ç–∞'];
        if (!salesByDate[date]) salesByDate[date] = [];
        salesByDate[date].push(sale);
    });
    const lastDates = Object.keys(salesByDate).sort((a,b)=>new Date(b)-new Date(a)).slice(0,10);

    let modal = document.createElement('div');
    modal.id = 'client-detail-modal';
    modal.className = 'fixed inset-0 z-[100] flex items-center justify-center bg-black bg-opacity-60'; // Increased z-index
    modal.innerHTML = `
    <div class="bg-gray-900 rounded-2xl shadow-2xl p-10 w-full max-w-4xl relative max-h-[95vh] flex flex-col overflow-y-auto animate-fade-in">
      <button id="close-client-detail" class="absolute top-4 right-4 text-gray-400 hover:text-white text-2xl">&times;</button>
      <h3 class="text-2xl font-bold text-white mb-6">–î–µ—Ç–∞–ª—ñ–∑–∞—Ü—ñ—è: <span class="text-indigo-400">${sales[0] ? getClientName(clientCode, sales[0]['–ö–ª–∏–µ–Ω—Ç']) : ''}</span></h3>
      <div class="mb-8 grid grid-cols-1 md:grid-cols-2 gap-x-12 gap-y-8">
        <div>
          <h4 class="font-bold mb-3 text-gray-200">–î–∏–Ω–∞–º—ñ–∫–∞ –≤–∏—Ä—É—á–∫–∏ –ø–æ –º—ñ—Å—è—Ü—è—Ö</h4>
          <canvas id="clientRevenueChart" height="100"></canvas>
        </div>
        <div>
          <h4 class="font-bold mb-3 text-gray-200">–î–∏–Ω–∞–º—ñ–∫–∞ —á–∞—Å—Ç–æ—Ç–∏ –ø–æ–∫—É–ø–æ–∫</h4>
          <canvas id="clientFreqChart" height="80"></canvas>
        </div>
        <div>
          <h4 class="font-bold mb-3 text-gray-200">–î–∏–Ω–∞–º—ñ–∫–∞ —Å–µ—Ä–µ–¥–Ω—å–æ–≥–æ —á–µ–∫–∞</h4>
          <canvas id="clientAvgCheckChart" height="80"></canvas>
        </div>
        <div>
          <h4 class="font-bold mb-3 text-gray-200">–û—Å—Ç–∞–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</h4>
          <div class="max-h-[200px] overflow-y-auto">
            <table class="min-w-full text-xs bg-gray-800 rounded-lg overflow-hidden"><thead><tr class="bg-gray-700 text-gray-300"><th class="px-3 py-2">–î–∞—Ç–∞</th><th class="px-3 py-2">–°—É–º–∞</th><th class="px-3 py-2">–¢–æ–≤–∞—Ä–∏</th></tr></thead><tbody>
              ${lastDates.map(date => {
                const orders = salesByDate[date];
                const total = orders.reduce((sum, s) => sum + (typeof s['–í—ã—Ä—É—á–∫–∞'] === 'string' ? parseFloat(s['–í—ã—Ä—É—á–∫–∞'].replace(/\s/g, '').replace(',', '.')) : (s['–í—ã—Ä—É—á–∫–∞'] || 0)), 0);
                const safeId = 'order_' + date.replace(/[^\d]/g, '');
                return `<tr><td class="px-3 py-2 text-gray-200">${date}</td><td class="px-3 py-2 text-green-400">${total.toFixed(2)}</td><td class="px-3 py-2"><button class='px-2 py-1 bg-gray-700 text-gray-200 rounded hover:bg-gray-600' onclick="window.toggleOrderDetail('${safeId}')">–ü–æ–∫–∞–∑–∞—Ç–∏</button><div id='${safeId}' class='hidden mt-2 text-xs bg-gray-900 rounded p-3'><ul class='list-disc list-inside space-y-1'>${orders.map(s=>`<li>${s['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞']} <span class='text-gray-400'>(${typeof s['–í—ã—Ä—É—á–∫–∞'] === 'string' ? s['–í—ã—Ä—É—á–∫–∞'] : (s['–í—ã—Ä—É—á–∫–∞']||0)})</span></li>`).join('')}</ul></div></td></tr>`;
              }).join('')}
            </tbody></table>
          </div>
        </div>
        
        <!-- –ù–û–í–ê–Ø –°–ï–ö–¶–ò–Ø: –ò—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π -->
        <div class="col-span-1 md:col-span-2">
          <h4 class="font-bold mb-3 text-gray-200">–Ü—Å—Ç–æ—Ä—ñ—è –¥—ñ–π –º–µ–Ω–µ–¥–∂–µ—Ä–∞</h4>
          <div id="client-actions-history" class="bg-gray-800 rounded-lg p-4 max-h-[300px] overflow-y-auto">
            ${renderClientActionsHistory(clientCode)}
          </div>
        </div>
        
      </div>
    </div>
  `;
  document.body.appendChild(modal);
  window.toggleOrderDetail = function(id) {
    const el = document.getElementById(id);
    if (!el) return;
    el.classList.toggle('hidden');
  };
  const close = () => modal.remove();
  document.getElementById('close-client-detail').onclick = close;
  modal.onclick = (e) => {
      if (e.target === modal) close();
  }
  document.addEventListener('keydown', function escHandler(e) {
    if (e.key === 'Escape') {
      close();
      document.removeEventListener('keydown', escHandler);
    }
  });
  // –ì—Ä–∞—Ñ—ñ–∫–∏
  setTimeout(()=>{
    const revenueCanvas = document.getElementById('clientRevenueChart');
    const freqCanvas = document.getElementById('clientFreqChart');
    const avgCheckCanvas = document.getElementById('clientAvgCheckChart');
    if (revenueChart) revenueChart.destroy();
    if (freqChart) freqChart.destroy();
    if (avgCheckChart) avgCheckChart.destroy();
    if (revenueCanvas) {
      revenueChart = new Chart(revenueCanvas.getContext('2d'), {
        type: 'line',
        data: {
          labels: sortedMonths,
          datasets: [{label:'–í–∏—Ä—É—á–∫–∞',data:sortedMonths.map(m=>monthMap[m]),borderColor:'#34d399',backgroundColor:'rgba(52,211,153,0.2)',fill:true}]
        },
        options: {responsive:true, plugins:{legend:{display:false}}, scales:{x:{ticks:{color:'#a1a1aa'}},y:{ticks:{color:'#a1a1aa'}}}}
      });
    }
    if (freqCanvas) {
      freqChart = new Chart(freqCanvas.getContext('2d'), {
        type: 'line',
        data: {
          labels: freqArr.map((_,i)=>i+1),
          datasets: [{label:'–Ü–Ω—Ç–µ—Ä–≤–∞–ª (–¥–Ω—ñ–≤)',data:freqArr,borderColor:'#fbbf24',backgroundColor:'rgba(251,191,36,0.2)',fill:true}]
        },
        options: {responsive:true, plugins:{legend:{display:false}}, scales:{x:{ticks:{color:'#a1a1aa'}},y:{ticks:{color:'#a1a1aa'}}}}
      });
    }
    if (avgCheckCanvas) {
      avgCheckChart = new Chart(avgCheckCanvas.getContext('2d'), {
        type: 'line',
        data: {
          labels: sortedMonths,
          datasets: [{label:'–°–µ—Ä–µ–¥–Ω—ñ–π —á–µ–∫',data:sortedAvgCheck,borderColor:'#60a5fa',backgroundColor:'rgba(96,165,250,0.2)',fill:true}]
        },
        options: {responsive:true, plugins:{legend:{display:false}}, scales:{x:{ticks:{color:'#a1a1aa'}},y:{ticks:{color:'#a1a1aa'}}}}
      });
    }
  }, 100);
}

// –ï–∫—Å–ø–æ—Ä—Ç—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ —ñ–Ω—à–∏—Ö –º–æ–¥—É–ª—è—Ö
window.passesFilters = passesFilters;
window.showClientDetail = showClientDetail;
window.renderActionsMenu = renderActionsMenu;
window.showActionModal = showActionModal;
window.saveClientAction = saveClientAction;
window.showActionNotification = showActionNotification;
window.toggleLostProducts = toggleLostProducts;