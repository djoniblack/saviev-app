// managerCalendar.js - –ú–æ–¥—É–ª—å –∫–∞–ª–µ–Ω–¥–∞—Ä—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
import * as firebase from './firebase.js';

// === –ù–ê–°–¢–†–û–ô–ö–ò –û–¢–õ–ê–î–ö–ò ===
const DEBUG_MODE = window.location.hostname === 'localhost' || window.location.search.includes('debug=true');
const LOG_LEVEL = DEBUG_MODE ? 'verbose' : 'error'; // verbose, info, warn, error

// –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å —É—á–µ—Ç–æ–º —É—Ä–æ–≤–Ω—è
const logger = {
    verbose: (...args) => DEBUG_MODE && LOG_LEVEL === 'verbose' && console.log(...args),
    info: (...args) => ['verbose', 'info'].includes(LOG_LEVEL) && console.log(...args),
    warn: (...args) => ['verbose', 'info', 'warn'].includes(LOG_LEVEL) && console.warn(...args),
    error: (...args) => console.error(...args)
};

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
let calendarData = [];
let managersData = [];
let departmentsData = [];
let currentMonth = new Date().getMonth();
let currentYear = new Date().getFullYear();
let selectedDepartment = '';
let selectedManager = '';
let isCalendarInited = false;

// === –ê–í–¢–û–û–ë–ù–û–í–õ–ï–ù–ò–ï ===
let autoUpdateInterval = null;
let lastUpdateTime = null;
let lastDataHash = null;
let isAutoUpdateEnabled = true;
let isUpdateInProgress = false;
const AUTO_UPDATE_INTERVAL = 15 * 60 * 1000; // 15 –º–∏–Ω—É—Ç

// –î–æ–±–∞–≤–ª—è–µ–º –∑–∞—â–∏—Ç—É –æ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞–ø—É—Å–∫–æ–≤
let isAutoUpdateInitialized = false;

// === –û–¢–°–õ–ï–ñ–ò–í–ê–ù–ò–ï –ò–ó–ú–ï–ù–ï–ù–ò–ô –ó–ê–î–ê–ß ===
let newTasks = new Map();        // –ù–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
let rescheduledTasks = new Map(); // –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
let taskHistory = new Map();      // –ò—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –∑–∞–¥–∞—á

// –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è retry –ª–æ–≥–∏–∫–∏
const MAX_RETRY_ATTEMPTS = 3;
const RETRY_DELAY = 5000; // 5 —Å–µ–∫—É–Ω–¥
const API_TIMEOUT = 30000; // 30 —Å–µ–∫—É–Ω–¥

/**
 * –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ö–µ—à–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
 */
function calculateDataHash(data) {
    const hash = JSON.stringify(data.map(item => ({
        id: item.ID,
        date: item.–î–∞—Ç–∞,
        manager: item.–ú–µ–Ω–µ–¥–∂–µ—Ä
    })).sort((a, b) => a.id.localeCompare(b.id)));
    
    logger.verbose('üîç –û–±—á–∏—Å–ª–µ–Ω–æ —Ö–µ—à –¥–∞–Ω–∏—Ö:', hash.length, '—Å–∏–º–≤–æ–ª—ñ–≤');
    return hash;
}

/**
 * –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
 */
function startAutoUpdate() {
    // –£–ª—É—á—à–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–Ω–æ–µ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    if (autoUpdateInterval) {
        logger.verbose('üîÑ –ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∂–µ –∑–∞–ø—É—â–µ–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ');
        return;
    }
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
    if (isAutoUpdateInitialized) {
        logger.verbose('üîÑ –ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
        return;
    }
    
    logger.verbose('üîÑ –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è...');
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –≤–º–µ—Å—Ç–æ —Ö–∞—Ä–¥–∫–æ–¥–∞
    autoUpdateInterval = setInterval(checkForUpdates, AUTO_UPDATE_INTERVAL);
    isAutoUpdateInitialized = true;
    lastUpdateTime = new Date();
    
    updateAutoUpdateStatus('–ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è —É–≤—ñ–º–∫–Ω–µ–Ω–æ', 'text-green-600');
    logger.info(`‚úÖ –ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ø—É—â–µ–Ω–æ (—ñ–Ω—Ç–µ—Ä–≤–∞–ª: ${AUTO_UPDATE_INTERVAL / 1000 / 60} —Ö–≤)`);
}

/**
 * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
 */
function stopAutoUpdate() {
    if (autoUpdateInterval) {
        clearInterval(autoUpdateInterval);
        autoUpdateInterval = null;
        isAutoUpdateInitialized = false;
        lastUpdateTime = null;
        updateAutoUpdateStatus('–ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∏–º–∫–Ω–µ–Ω–æ', 'text-red-600');
        logger.info('üõë –ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑—É–ø–∏–Ω–µ–Ω–æ');
    }
}

/**
 * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ API –∑–∞–ø—Ä–æ—Å–∞ —Å retry –ª–æ–≥–∏–∫–æ–π
 */
async function makeApiRequestWithRetry(url, maxAttempts = MAX_RETRY_ATTEMPTS) {
    for (let attempt = 1; attempt <= maxAttempts; attempt++) {
        try {
            logger.verbose(`üåê –°–ø—Ä–æ–±–∞ ${attempt}/${maxAttempts}: ${url}`);
            
            const controller = new AbortController();
            const timeoutId = setTimeout(() => controller.abort(), API_TIMEOUT);
            
            const response = await fetch(url, {
                signal: controller.signal,
                headers: {
                    'Accept': 'application/json',
                    'Cache-Control': 'no-cache'
                }
            });
            
            clearTimeout(timeoutId);
            
            if (!response.ok) {
                throw new Error(`HTTP ${response.status}: ${response.statusText}`);
            }
            
            const data = await response.json();
            logger.info(`‚úÖ –£—Å–ø—ñ—à–Ω–∏–π –∑–∞–ø–∏—Ç ${url}, –æ—Ç—Ä–∏–º–∞–Ω–æ ${data.length} –∑–∞–ø–∏—Å—ñ–≤`);
            return data;
            
        } catch (error) {
            logger.warn(`‚ö†Ô∏è –°–ø—Ä–æ–±–∞ ${attempt} –Ω–µ–≤–¥–∞–ª–∞ –¥–ª—è ${url}:`, error.message);
            
            if (attempt === maxAttempts) {
                logger.error(`‚ùå –í—Å—ñ ${maxAttempts} —Å–ø—Ä–æ–± –Ω–µ–≤–¥–∞–ª—ñ –¥–ª—è ${url}`);
                throw error;
            }
            
            if (error.name === 'AbortError') {
                logger.warn(`‚è±Ô∏è –¢–∞–π–º-–∞—É—Ç –∑–∞–ø–∏—Ç—É ${url}`);
            }
            
            // –ñ–¥–µ–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
            await new Promise(resolve => setTimeout(resolve, RETRY_DELAY * attempt));
        }
    }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
 */
async function checkForUpdates() {
    // –ó–∞—â–∏—Ç–∞ –æ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    if (isUpdateInProgress) {
        logger.verbose('üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ');
        return;
    }
    
    isUpdateInProgress = true;
    
    try {
        logger.verbose('üîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω—å...');
        updateAutoUpdateStatus('–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è...', 'text-yellow-600');
        
        const apiData = await makeApiRequestWithRetry('https://fastapi.lookfort.com/nomenclature.analysis?mode=dela');
        logger.info('üìä –û—Ç—Ä–∏–º–∞–Ω–æ –¥–∞–Ω–∏—Ö –∑ API –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏:', apiData.length);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Firebase –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        const existingTasks = await loadTasksFromFirebase();
        
        // –ù–∞—Ö–æ–¥–∏–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
        const { newTasks, rescheduledTasks, unchangedTasks } = findChangedTasks(apiData, existingTasks);
        
        if (newTasks.length > 0 || rescheduledTasks.length > 0) {
            logger.verbose('üîÑ –ó–Ω–∞–π–¥–µ–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è, –∑–±–µ—Ä—ñ–≥–∞—î–º–æ –∑–º—ñ–Ω–∏...');
            updateAutoUpdateStatus('–ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∑–º—ñ–Ω–∏...', 'text-blue-600');
            
            await saveOnlyChanges(newTasks, rescheduledTasks);
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Firebase
            calendarData = await loadTasksFromFirebase();
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
            await updateTaskAnalytics();
            
            // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä
            renderCalendar();
            
            logger.info('‚úÖ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
            showUpdateNotification(`–û–Ω–æ–≤–ª–µ–Ω–æ: ${newTasks.length} –Ω–æ–≤–∏—Ö, ${rescheduledTasks.length} –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å`);
            updateAutoUpdateStatus(`–û—Å—Ç–∞–Ω–Ω—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: ${new Date().toLocaleTimeString('uk-UA')}`, 'text-green-600');
        } else {
            logger.info('‚úÖ –û–Ω–æ–≤–ª–µ–Ω—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            updateAutoUpdateStatus(`–ü–µ—Ä–µ–≤—ñ—Ä–µ–Ω–æ: ${new Date().toLocaleTimeString('uk-UA')} - –∑–º—ñ–Ω –Ω–µ–º–∞—î`, 'text-gray-600');
        }
        
        lastUpdateTime = new Date();
        
    } catch (error) {
        logger.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω—å:', error);
        
        let errorMessage = '–ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω—å';
        if (error.message.includes('Failed to fetch')) {
            errorMessage = '–ü–æ–º–∏–ª–∫–∞ –º–µ—Ä–µ–∂—ñ - –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ –∑\'—î–¥–Ω–∞–Ω–Ω—è';
        } else if (error.name === 'AbortError') {
            errorMessage = '–¢–∞–π–º-–∞—É—Ç –∑–∞–ø–∏—Ç—É - —Å–µ—Ä–≤–µ—Ä –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î';
        } else if (error.message.includes('HTTP')) {
            errorMessage = `–ü–æ–º–∏–ª–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${error.message}`;
        }
        
        updateAutoUpdateStatus(errorMessage, 'text-red-600');
        showUpdateNotification(errorMessage, 'error');
    } finally {
        isUpdateInProgress = false;
    }
}

/**
 * –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏
 */
function showUpdateNotification(message, type = 'info') {
    logger.info('üì¢ –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–Ω—è:', message, type);
    
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 p-4 rounded-lg shadow-lg z-50 ${
        type === 'info' ? 'bg-blue-500 text-white' :
        type === 'success' ? 'bg-green-500 text-white' :
        'bg-red-500 text-white'
    }`;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.remove();
    }, 5000);
}

// –§—É–Ω–∫—Ü–∏—è updateAutoUpdateStatus –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –Ω–∏–∂–µ –≤ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ

/**
 * –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö API –≤ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç
 */
function transformApiDataToInternalFormat(apiData) {
    logger.verbose('üîÑ –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—è API –¥–∞–Ω–∏—Ö...');
    logger.info('üìä –í—Ö—ñ–¥–Ω—ñ –¥–∞–Ω—ñ:', apiData.length);
    
    const transformedData = apiData.map(item => ({
        ID: item.ID || item.id || Math.random().toString(36).substr(2, 9),
        –î–∞—Ç–∞: item.–î–∞—Ç–∞, // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–µ –ø–æ–ª–µ
        '–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è': item['–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è'] || item.–î–∞—Ç–∞, // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–µ –ø–æ–ª–µ
        –î–µ–ª–æ: item.–î–µ–ª–æ || '',
        –ú–µ–Ω–µ–¥–∂–µ—Ä: item.–ú–µ–Ω–µ–¥–∂–µ—Ä || '',
        '–ö–ª–∏–µ–Ω—Ç.–ù–∞–∑–≤–∞–Ω–∏–µ': item['–ö–ª–∏–µ–Ω—Ç.–ù–∞–∑–≤–∞–Ω–∏–µ'] || '',
        '–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥': item['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥'] || '',
        '–ö–ª–∏–µ–Ω—Ç.–°—Å—ã–ª–∫–∞': item['–ö–ª–∏–µ–Ω—Ç.–°—Å—ã–ª–∫–∞'] || '', // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–µ –ø–æ–ª–µ
        departmentName: findManagerDepartment(item.–ú–µ–Ω–µ–¥–∂–µ—Ä),
        status: 'active' // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—Å–µ –∑–∞–¥–∞—á–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ
    }));
    
    logger.info('‚úÖ –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞:', transformedData.length);
    
    // –õ–æ–≥—É—î–º–æ –ø—Ä–∏–∫–ª–∞–¥–∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö
    if (transformedData.length > 0) {
        logger.verbose('üìã –ü—Ä–∏–∫–ª–∞–¥–∏ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö:', transformedData.slice(0, 3).map(t => ({ 
            ID: t.ID, 
            –ú–µ–Ω–µ–¥–∂–µ—Ä: t.–ú–µ–Ω–µ–¥–∂–µ—Ä, 
            –î–∞—Ç–∞: t.–î–∞—Ç–∞,
            '–ö–ª–∏–µ–Ω—Ç.–°—Å—ã–ª–∫–∞': t['–ö–ª–∏–µ–Ω—Ç.–°—Å—ã–ª–∫–∞'] ? '–Ñ' : '–ù–µ–º–∞—î'
        })));
    }
    
    return transformedData;
}

/**
 * –ü–æ–∏—Å–∫ –æ—Ç–¥–µ–ª–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
 */
function findManagerDepartment(managerName) {
    if (!managerName) {
        logger.warn('‚ö†Ô∏è –Ü–º\'—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ');
        return '';
    }
    
    const manager = managersData.find(m => 
        m.name.toLowerCase().includes(managerName.toLowerCase()) ||
        managerName.toLowerCase().includes(m.name.toLowerCase())
    );
    
    if (manager && manager.department) {
        const department = departmentsData.find(d => d.id === manager.department);
        if (department) {
            logger.info(`üè¢ –ó–Ω–∞–π–¥–µ–Ω–æ –≤—ñ–¥–¥—ñ–ª –º–µ–Ω–µ–¥–∂–µ—Ä–∞ ${managerName}: ${department.name}`);
            return department.name;
        }
    }
    
    logger.warn(`‚ö†Ô∏è –í—ñ–¥–¥—ñ–ª –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: ${managerName}`);
    return '';
}

/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –≤ Firebase
 */
async function saveTaskToFirebase(taskData) {
    try {
        const companyId = window.state?.currentCompanyId;
        if (!companyId) {
            logger.error('‚ùå ID –∫–æ–º–ø–∞–Ω—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            return false;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
        const userPermissions = window.state?.currentUserPermissions || {};
        const hasPermission = userPermissions['manager_calendar_manage_tasks'] || 
                            userPermissions['manager_calendar_view_all_tasks'] || 
                            userPermissions['manager_calendar_view_page'] ||
                            window.state?.isOwner;

        if (!hasPermission) {
            logger.warn('‚ö†Ô∏è –ù–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å –∫–∞–ª–µ–Ω–¥–∞—Ä—è');
            return false;
        }

        const taskId = taskData.ID;
        const taskRef = firebase.doc(firebase.db, 'companies', companyId, 'managerCalendarTasks', taskId);
        
        // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–¥–∞—á—É –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        const existingTask = await firebase.getDoc(taskRef);
        
        const taskDoc = {
            taskId: taskId, // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∫–∞–∫ taskId –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
            managerId: findManagerIdByName(taskData.–ú–µ–Ω–µ–¥–∂–µ—Ä),
            managerName: taskData.–ú–µ–Ω–µ–¥–∂–µ—Ä,
            departmentId: findDepartmentIdByName(findManagerDepartment(taskData.–ú–µ–Ω–µ–¥–∂–µ—Ä)),
            departmentName: findManagerDepartment(taskData.–ú–µ–Ω–µ–¥–∂–µ—Ä),
            clientName: taskData['–ö–ª–∏–µ–Ω—Ç.–ù–∞–∑–≤–∞–Ω–∏–µ'],
            clientCode: taskData['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥'],
            clientLink: taskData['–ö–ª–∏–µ–Ω—Ç.–°—Å—ã–ª–∫–∞'], // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–µ –ø–æ–ª–µ
            taskDescription: taskData.–î–µ–ª–æ,
            scheduledDate: taskData.–î–∞—Ç–∞, // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–µ –ø–æ–ª–µ
            modifiedDate: taskData['–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è'], // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–µ –ø–æ–ª–µ
            originalDate: existingTask.exists() ? existingTask.data().originalDate : taskData.–î–∞—Ç–∞,
            status: determineTaskStatus(existingTask, taskData),
            lastUpdated: firebase.serverTimestamp(),
            companyId: companyId
        };

        await firebase.setDoc(taskRef, taskDoc, { merge: true });
        
        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        trackTaskChanges(existingTask, taskDoc);
        
        logger.info(`‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ –∑–∞–≤–¥–∞–Ω–Ω—è: ${taskId} - ${taskData.–ú–µ–Ω–µ–¥–∂–µ—Ä}`);
        return true;
    } catch (error) {
        logger.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω–Ω—è –≤ Firebase:', error);
        return false;
    }
}

/**
 * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–¥–∞—á–∏
 */
function determineTaskStatus(existingTask, newTaskData) {
    if (!existingTask.exists()) {
        logger.info(`üÜï –ù–æ–≤–∞ –∑–∞–≤–¥–∞–Ω–Ω—è: ${newTaskData.ID}`);
        return 'new';
    }
    
    const existingDate = new Date(existingTask.data().scheduledDate);
    const newDate = new Date(newTaskData.–î–∞—Ç–∞);
    
    // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–∞—Ç—ã —Å —Ç–æ—á–Ω–æ—Å—Ç—å—é –¥–æ –º–∏–Ω—É—Ç—ã
    const existingTime = existingDate.getTime();
    const newTime = newDate.getTime();
    
    if (Math.abs(existingTime - newTime) > 60000) { // –†–∞–∑–Ω–∏—Ü–∞ –±–æ–ª—å—à–µ 1 –º–∏–Ω—É—Ç—ã
        logger.info(`üîÑ –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –∑–∞–≤–¥–∞–Ω–Ω—è: ${newTaskData.ID} –∑ ${existingDate.toISOString()} –Ω–∞ ${newDate.toISOString()}`);
        return 'rescheduled';
    }
    
    return existingTask.data().status || 'active';
}

/**
 * –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∑–∞–¥–∞—á
 */
function trackTaskChanges(existingTask, newTaskDoc) {
    const taskId = newTaskDoc.taskId;
    
    if (!existingTask.exists()) {
        // –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞
        newTasks.set(taskId, {
            taskId: taskId,
            managerName: newTaskDoc.managerName,
            clientName: newTaskDoc.clientName,
            clientLink: newTaskDoc.clientLink, // –î–æ–¥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ CRM
            taskDescription: newTaskDoc.taskDescription,
            scheduledDate: newTaskDoc.scheduledDate,
            addedAt: new Date()
        });
        logger.info(`üìù –î–æ–¥–∞–Ω–æ –¥–æ –Ω–æ–≤–∏—Ö –∑–∞–≤–¥–∞–Ω—å: ${taskId}`);
    } else {
        const existingDate = new Date(existingTask.data().scheduledDate);
        const newDate = new Date(newTaskDoc.scheduledDate);
        
        // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–∞—Ç—ã —Å —Ç–æ—á–Ω–æ—Å—Ç—å—é –¥–æ –º–∏–Ω—É—Ç—ã
        const existingTime = existingDate.getTime();
        const newTime = newDate.getTime();
        
        if (Math.abs(existingTime - newTime) > 60000) { // –†–∞–∑–Ω–∏—Ü–∞ –±–æ–ª—å—à–µ 1 –º–∏–Ω—É—Ç—ã
            // –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞
            rescheduledTasks.set(taskId, {
                taskId: taskId,
                managerName: newTaskDoc.managerName,
                clientName: newTaskDoc.clientName,
                clientLink: newTaskDoc.clientLink, // –î–æ–¥–∞—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ CRM
                taskDescription: newTaskDoc.taskDescription,
                oldDate: existingDate.toISOString(),
                newDate: newTaskDoc.scheduledDate,
                rescheduledAt: new Date()
            });
            logger.info(`üìù –î–æ–¥–∞–Ω–æ –¥–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å: ${taskId}`);
        }
    }
}

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–¥–∞—á –∏–∑ Firebase
 */
async function loadTasksFromFirebase() {
    try {
        const companyId = window.state?.currentCompanyId;
        if (!companyId) {
            logger.error('‚ùå ID –∫–æ–º–ø–∞–Ω—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            return [];
        }

        logger.info('üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å –∑ Firebase...');
        logger.info('üè¢ Company ID:', companyId);

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏—é –≤ –∫–æ–º–ø–∞–Ω–∏–∏
        const tasksRef = firebase.collection(firebase.db, 'companies', companyId, 'managerCalendarTasks');
        const tasksSnapshot = await firebase.getDocs(tasksRef);

        const tasks = [];
        tasksSnapshot.forEach(doc => {
            const data = doc.data();
            tasks.push({
                ID: data.taskId, // –ò—Å–ø–æ–ª—å–∑—É–µ–º taskId –∫–∞–∫ ID –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
                –î–∞—Ç–∞: data.scheduledDate, // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–µ –ø–æ–ª–µ
                '–î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è': data.modifiedDate || data.scheduledDate, // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–µ –ø–æ–ª–µ
                –î–µ–ª–æ: data.taskDescription,
                –ú–µ–Ω–µ–¥–∂–µ—Ä: data.managerName,
                '–ö–ª–∏–µ–Ω—Ç.–ù–∞–∑–≤–∞–Ω–∏–µ': data.clientName,
                '–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥': data.clientCode,
                '–ö–ª–∏–µ–Ω—Ç.–°—Å—ã–ª–∫–∞': data.clientLink || '', // –î–æ–¥–∞—î–º–æ –Ω–æ–≤–µ –ø–æ–ª–µ
                departmentName: data.departmentName,
                status: data.status
            });
        });

        logger.info(`üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${tasks.length} –∑–∞–≤–¥–∞–Ω—å –∑ Firebase`);
        
        // –õ–æ–≥—É—î–º–æ –ø—Ä–∏–∫–ª–∞–¥–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å
        if (tasks.length > 0) {
            logger.verbose('üìã –ü—Ä–∏–∫–ª–∞–¥–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å:', tasks.slice(0, 3).map(t => ({ ID: t.ID, –ú–µ–Ω–µ–¥–∂–µ—Ä: t.–ú–µ–Ω–µ–¥–∂–µ—Ä, –î–∞—Ç–∞: t.–î–∞—Ç–∞ })));
        }
        
        return tasks;
    } catch (error) {
        logger.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–≤–¥–∞–Ω—å –∑ Firebase:', error);
        return [];
    }
}

// –§—É–Ω–∫—Ü–∏—è updateTaskAnalytics –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –Ω–∏–∂–µ –≤ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
 */
function updateAnalyticsDisplay(analytics) {
    let analyticsContainer = document.getElementById('calendarAnalytics');
    
    // –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ –æ–¥–∏–Ω —Ä–∞–∑
    if (!analyticsContainer) {
        const calendarContainer = document.getElementById('calendarContainer');
        if (!calendarContainer) {
            logger.warn('‚ö†Ô∏è –û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞–ª–µ–Ω–¥–∞—Ä—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        analyticsContainer = document.createElement('div');
        analyticsContainer.id = 'calendarAnalytics';
        analyticsContainer.className = 'mb-6';
        
        // –í—Å—Ç–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
        calendarContainer.insertBefore(analyticsContainer, calendarContainer.firstChild);
        
        logger.verbose('üìä –°—Ç–≤–æ—Ä–µ–Ω–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è');
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è)
    const newContent = generateAnalyticsContent(analytics);
    if (analyticsContainer.innerHTML !== newContent) {
        analyticsContainer.innerHTML = newContent;
        logger.verbose('üìä –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –æ–Ω–æ–≤–ª–µ–Ω–∞');
    }
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
 */
function generateAnalyticsContent(analytics) {
    return `
        <div class="bg-gray-700 rounded-lg p-4">
            <h3 class="text-lg font-semibold text-white mb-4 flex items-center gap-2">
                <span>üìä</span>
                <span>–ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –∑–∞–≤–¥–∞–Ω—å</span>
            </h3>
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
                <div class="bg-blue-100 p-4 rounded-lg">
                    <div class="text-2xl font-bold text-blue-600">${analytics.totalTasks || 0}</div>
                    <div class="text-sm text-gray-600">–í—Å—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω—å</div>
                </div>
                <div class="bg-green-100 p-4 rounded-lg">
                    <div class="text-2xl font-bold text-green-600">${analytics.newTasks || 0}</div>
                    <div class="text-sm text-gray-600">–ù–æ–≤–∏—Ö –∑–∞–≤–¥–∞–Ω—å</div>
                </div>
                <div class="bg-yellow-100 p-4 rounded-lg">
                    <div class="text-2xl font-bold text-yellow-600">${analytics.rescheduledTasks || 0}</div>
                    <div class="text-sm text-gray-600">–ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏—Ö</div>
                </div>
                <div class="bg-purple-100 p-4 rounded-lg">
                    <div class="text-2xl font-bold text-purple-600">${analytics.completedTasks || 0}</div>
                    <div class="text-sm text-gray-600">–í–∏–∫–æ–Ω–∞–Ω–∏—Ö</div>
                </div>
            </div>
        </div>
    `;
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
 */
const calendarUIElements = new Set();

function initCalendarUIElement(elementId, creationFunction) {
    if (calendarUIElements.has(elementId)) {
        logger.verbose(`üîÑ –ï–ª–µ–º–µ–Ω—Ç ${elementId} –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ`);
        return document.getElementById(elementId);
    }
    
    try {
        const element = creationFunction();
        if (element) {
            calendarUIElements.add(elementId);
            logger.verbose(`‚úÖ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ –µ–ª–µ–º–µ–Ω—Ç: ${elementId}`);
        }
        return element;
    } catch (error) {
        logger.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –µ–ª–µ–º–µ–Ω—Ç–∞ ${elementId}:`, error);
        return null;
    }
}

/**
 * –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
 */
function clearCalendarUIElements() {
    calendarUIElements.forEach(elementId => {
        const element = document.getElementById(elementId);
        if (element) {
            element.remove();
            logger.verbose(`üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–æ –µ–ª–µ–º–µ–Ω—Ç: ${elementId}`);
        }
    });
    calendarUIElements.clear();
    logger.info('üßπ –û—á–∏—â–µ–Ω–æ –≤—Å—ñ UI –µ–ª–µ–º–µ–Ω—Ç–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è');
}

/**
 * –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∑–∞–¥–∞—á —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
 */
async function updateTaskAnalytics() {
    try {
        const companyId = window.state?.currentCompanyId;
        if (!companyId) {
            logger.warn('‚ö†Ô∏è CompanyId –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏');
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ª–∏ —É–∂–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        if (updateTaskAnalytics.isRunning) {
            logger.verbose('‚è≥ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏ –≤–∂–µ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è');
            return;
        }
        
        updateTaskAnalytics.isRunning = true;

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–¥–∫–æ–ª–ª–µ–∫—Ü–∏—é –≤ –∫–æ–º–ø–∞–Ω–∏–∏
        const analyticsRef = firebase.doc(firebase.db, 'companies', companyId, 'managerCalendarAnalytics', 'summary');
        
        const analytics = {
            totalTasks: calendarData.length,
            newTasks: newTasks.size,
            rescheduledTasks: rescheduledTasks.size,
            completedTasks: calendarData.filter(task => task.status === 'completed').length,
            lastUpdated: firebase.serverTimestamp(),
            companyId: companyId
        };

        await firebase.setDoc(analyticsRef, analytics, { merge: true });
        
        logger.info('üìä –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–∞:', analytics);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        updateAnalyticsDisplay(analytics);
        
    } catch (error) {
        logger.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–Ω–∞–ª—ñ—Ç–∏–∫–∏:', error);
    } finally {
        updateTaskAnalytics.isRunning = false;
    }
}

/**
 * –ü–æ–∏—Å–∫ ID –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ –∏–º–µ–Ω–∏
 */
function findManagerIdByName(managerName) {
    const manager = managersData.find(m => 
        m.name.toLowerCase().includes(managerName.toLowerCase()) ||
        managerName.toLowerCase().includes(m.name.toLowerCase())
    );
    
    if (manager) {
        logger.info(`üë§ –ó–Ω–∞–π–¥–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: ${managerName} -> ${manager.id}`);
        return manager.id;
    }
    
    logger.warn(`‚ö†Ô∏è –ú–µ–Ω–µ–¥–∂–µ—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: ${managerName}`);
    return null;
}

/**
 * –ü–æ–∏—Å–∫ ID –æ—Ç–¥–µ–ª–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
 */
function findDepartmentIdByName(departmentName) {
    const department = departmentsData.find(d => 
        d.name.toLowerCase().includes(departmentName.toLowerCase()) ||
        departmentName.toLowerCase().includes(d.name.toLowerCase())
    );
    
    if (department) {
        logger.info(`üè¢ –ó–Ω–∞–π–¥–µ–Ω–æ –≤—ñ–¥–¥—ñ–ª: ${departmentName} -> ${department.id}`);
        return department.id;
    }
    
    logger.warn(`‚ö†Ô∏è –í—ñ–¥–¥—ñ–ª –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: ${departmentName}`);
    return null;
}

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä—è
 */
export async function loadCalendarData() {
    try {
        logger.info('üìÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä—è...');
        
        // –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Firebase (–Ω–∞—à –∫—ç—à)
        const existingTasks = await loadTasksFromFirebase();
        logger.info('üì• –Ü—Å–Ω—É—é—á—ñ –¥–∞–Ω—ñ –∑ Firebase:', existingTasks.length);

        // –ó–∞—Ç–µ–º –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ —Å API
        const response = await fetch('https://fastapi.lookfort.com/nomenclature.analysis?mode=dela');
        if (!response.ok) {
            logger.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ API:', response.status);
            // –ï—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Firebase
            calendarData = existingTasks;
            logger.info('üì• –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–∞–Ω—ñ –∑ Firebase —è–∫ fallback:', calendarData.length);
            await updateTaskAnalytics(); // –û–±–Ω–æ–≤–ª—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫—ç—à–∞
            return calendarData; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ, —á—Ç–æ –µ—Å—Ç—å
        }
        
        const apiData = await response.json();
        logger.info('üìÖ –û—Ç—Ä–∏–º–∞–Ω–æ –¥–∞–Ω–∏—Ö –∑ API:', apiData.length);
        
        // –ù–∞—Ö–æ–¥–∏–º —Ç–æ–ª—å–∫–æ –Ω–æ–≤—ã–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
        const { newTasks, rescheduledTasks } = findChangedTasks(apiData, existingTasks);
        logger.info(`üìä –ê–Ω–∞–ª—ñ–∑ –∑–º—ñ–Ω: ${newTasks.length} –Ω–æ–≤–∏—Ö, ${rescheduledTasks.length} –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏—Ö`);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if (newTasks.length > 0 || rescheduledTasks.length > 0) {
            logger.info('üíæ –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –∑–º—ñ–Ω–∏ –≤ Firebase...');
            await saveOnlyChanges(newTasks, rescheduledTasks);
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Firebase, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ–¥–∏–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–∞–≤–¥—ã
            calendarData = await loadTasksFromFirebase();
            logger.info('üì• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω—ñ –¥–∞–Ω—ñ –∑ Firebase:', calendarData.length);
        } else {
            // –ï—Å–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
            logger.info('üîÑ –ó–º—ñ–Ω –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à');
            calendarData = existingTasks;
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
        await updateTaskAnalytics();
        
        logger.info('‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
        logger.info('üìä –§—ñ–Ω–∞–ª—å–Ω—ñ –¥–∞–Ω—ñ –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', calendarData.length);
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö
        return calendarData;
        
    } catch (error) {
        logger.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', error);
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—ã—Ç–∞–µ–º—Å—è –≤–µ—Ä–Ω—É—Ç—å —Ö–æ—Ç—è –±—ã –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        calendarData = await loadTasksFromFirebase();
        return calendarData; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—ç—à –∏–ª–∏ –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
    }
}

/**
 * –ù–∞—Ö–æ–¥–∏—Ç –Ω–æ–≤—ã–µ –∏ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
 */
function findChangedTasks(apiData, existingTasks) {
    const newTasks = [];
    const rescheduledTasks = [];
    const unchangedTasks = [];
    
    logger.verbose(`üîç –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è: ${apiData.length} API –∑–∞–≤–¥–∞–Ω—å –∑ ${existingTasks.length} Firebase –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏`);
    
    for (const apiTask of apiData) {
        // –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–¥–∞—á—É –ø–æ ID
        const existingTask = existingTasks.find(task => task.ID === apiTask.ID);
        
        if (!existingTask) {
            // –ù–æ–≤–∞—è –∑–∞–¥–∞—á–∞
            newTasks.push(apiTask);
        } else {
            // –ü–æ—Ä—ñ–≤–Ω—é—î–º–æ –¥–∞—Ç–∏ –∑ —Ç–æ—á–Ω—ñ—Å—Ç—é –¥–æ —Ö–≤–∏–ª–∏–Ω–∏
            const existingDate = new Date(existingTask.–î–∞—Ç–∞);
            const newDate = new Date(apiTask.–î–∞—Ç–∞);
            const existingTime = existingDate.getTime();
            const newTime = newDate.getTime();
            
            if (Math.abs(existingTime - newTime) > 60000) { // –†—ñ–∑–Ω–∏—Ü—è –±—ñ–ª—å—à–µ 1 —Ö–≤–∏–ª–∏–Ω–∏
                // –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω–∞—è –∑–∞–¥–∞—á–∞
                rescheduledTasks.push({
                    old: existingTask,
                    new: apiTask
                });
            } else {
                // –ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
                unchangedTasks.push(apiTask);
            }
        }
    }
    
    logger.info(`üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª—ñ–∑—É: ${newTasks.length} –Ω–æ–≤–∏—Ö, ${rescheduledTasks.length} –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏—Ö, ${unchangedTasks.length} –±–µ–∑ –∑–º—ñ–Ω`);
    
    // –õ–æ–≥—É—î–º–æ –ø—Ä–∏–∫–ª–∞–¥–∏ –Ω–æ–≤–∏—Ö –∑–∞–≤–¥–∞–Ω—å
    if (newTasks.length > 0) {
        logger.verbose('üÜï –ü—Ä–∏–∫–ª–∞–¥–∏ –Ω–æ–≤–∏—Ö –∑–∞–≤–¥–∞–Ω—å:', newTasks.slice(0, 3).map(t => ({ ID: t.ID, –ú–µ–Ω–µ–¥–∂–µ—Ä: t.–ú–µ–Ω–µ–¥–∂–µ—Ä, –î–∞—Ç–∞: t.–î–∞—Ç–∞ })));
    }
    
    // –õ–æ–≥—É—î–º–æ –ø—Ä–∏–∫–ª–∞–¥–∏ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å
    if (rescheduledTasks.length > 0) {
        logger.verbose('üîÑ –ü—Ä–∏–∫–ª–∞–¥–∏ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å:', rescheduledTasks.slice(0, 3).map(t => ({ ID: t.new.ID, –ú–µ–Ω–µ–¥–∂–µ—Ä: t.new.–ú–µ–Ω–µ–¥–∂–µ—Ä, oldDate: t.old.–î–∞—Ç–∞, newDate: t.new.–î–∞—Ç–∞ })));
    }
    
    return { newTasks, rescheduledTasks, unchangedTasks };
}

/**
 * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ Firebase
 */
async function saveOnlyChanges(newTasks, rescheduledTasks) {
    try {
        const companyId = window.state?.currentCompanyId;
        if (!companyId) {
            logger.error('‚ùå ID –∫–æ–º–ø–∞–Ω—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            return;
        }
        
        let savedCount = 0;
        const totalChanges = newTasks.length + rescheduledTasks.length;
        
        if (totalChanges === 0) {
            logger.info('üìù –ó–º—ñ–Ω –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            return;
        }
        
        logger.info(`üìù –ó–±–µ—Ä—ñ–≥–∞—î–º–æ ${totalChanges} –∑–º—ñ–Ω...`);
        logger.info(`üÜï –ù–æ–≤–∏—Ö –∑–∞–≤–¥–∞–Ω—å: ${newTasks.length}`);
        logger.info(`üîÑ –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å: ${rescheduledTasks.length}`);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
        for (const task of newTasks) {
            try {
                const success = await saveTaskToFirebase(task);
                if (success) {
                    savedCount++;
                }
            } catch (error) {
                logger.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –∑–∞–¥–∞—á—ñ:', task.ID, error);
            }
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
        for (const { new: task } of rescheduledTasks) {
            try {
                const success = await saveTaskToFirebase(task);
                if (success) {
                    savedCount++;
                }
            } catch (error) {
                logger.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ—ó –∑–∞–¥–∞—á—ñ:', task.ID, error);
            }
        }
        
        logger.info(`‚úÖ –ó–±–µ—Ä–µ–∂–µ–Ω–æ ${savedCount}/${totalChanges} –∑–º—ñ–Ω`);
        
    } catch (error) {
        logger.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∑–º—ñ–Ω:', error);
    }
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
 */
export function initManagerCalendarModule(container) {
    if (isCalendarInited) {
        logger.verbose('üìÖ –ú–æ–¥—É–ª—å –∫–∞–ª–µ–Ω–¥–∞—Ä—è —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    const currentUserPermissions = window.state?.currentUserPermissions || {};
    if (!currentUserPermissions['manager_calendar_view_page']) {
        logger.warn('‚ö†Ô∏è –ù–µ–º–∞—î –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É –¥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞');
        container.innerHTML = `
            <div class="bg-white rounded-lg shadow-lg p-6">
                <div class="text-center py-8">
                    <div class="text-red-500 text-6xl mb-4">üö´</div>
                    <h2 class="text-2xl font-bold text-gray-800 mb-4">–î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ</h2>
                    <p class="text-gray-600">–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –∫–∞–ª–µ–Ω–¥–∞—Ä—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞.</p>
                    <p class="text-sm text-gray-500 mt-2">–ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø—É.</p>
                </div>
            </div>
        `;
        return;
    }
    
    logger.info('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞...');
    
    container.innerHTML = `
        <div class="bg-white rounded-lg shadow-lg p-6">
            <div class="flex justify-between items-center mb-6">
                <h2 class="text-2xl font-bold text-gray-800">–ö–∞–ª–µ–Ω–¥–∞—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞</h2>
                <div class="flex items-center gap-4">
                    <button id="calendar-auto-update-toggle" class="btn btn-sm btn-secondary">
                        –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                    </button>
                </div>
            </div>
            
            <!-- –í–∫–ª–∞–¥–∫–∏ -->
            <div class="mb-6">
                <div class="border-b border-gray-200">
                    <nav class="-mb-px flex space-x-8">
                        <button id="calendar-tab-btn" class="border-b-2 border-blue-500 py-2 px-1 text-sm font-medium text-blue-600">
                            üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä
                        </button>
                        <button id="reports-tab-btn" class="border-b-2 border-transparent py-2 px-1 text-sm font-medium text-gray-500 hover:text-gray-700 hover:border-gray-300">
                            üìä –ó–≤—ñ—Ç–∏
                        </button>
                    </nav>
                </div>
            </div>
            
            <!-- –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–∫–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è -->
            <div id="calendar-tab-content">
                <!-- –§–∏–ª—å—Ç—Ä—ã -->
                <div id="calendar-filters" class="mb-6 grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">–í—ñ–¥–¥—ñ–ª</label>
                        <select id="calendar-department-filter" class="w-full p-2 border border-gray-300 rounded-lg">
                            <option value="">–í—Å—ñ –≤—ñ–¥–¥—ñ–ª–∏</option>
                        </select>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">–ú–µ–Ω–µ–¥–∂–µ—Ä</label>
                        <select id="calendar-manager-filter" class="w-full p-2 border border-gray-300 rounded-lg">
                            <option value="">–í—Å—ñ –º–µ–Ω–µ–¥–∂–µ—Ä–∏</option>
                        </select>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">–ü–µ—Ä—ñ–æ–¥</label>
                        <div class="flex gap-2">
                            <button id="calendar-prev-month" class="btn btn-sm btn-secondary">‚Äπ</button>
                            <span id="calendar-current-month" class="flex-1 text-center py-2 font-medium">
                                ${getMonthName(currentMonth)} ${currentYear}
                            </span>
                            <button id="calendar-next-month" class="btn btn-sm btn-secondary">‚Ä∫</button>
                        </div>
                    </div>
                </div>
                
                <!-- –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ -->
                <div id="calendarAnalytics" class="mb-6">
                    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
                    <div class="bg-gray-50 p-4 rounded-lg mb-4">
                        <h3 class="text-lg font-semibold mb-4">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≤–¥–∞–Ω—å</h3>
                        <div class="grid grid-cols-2 md:grid-cols-5 gap-4">
                            <div class="bg-blue-100 p-3 rounded-lg text-center">
                                <div class="text-2xl font-bold text-blue-600" id="total-tasks">0</div>
                                <div class="text-sm text-blue-600">–í—Å—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω—å</div>
                            </div>
                            <div class="bg-green-100 p-3 rounded-lg text-center">
                                <div class="text-2xl font-bold text-green-600" id="new-tasks">0</div>
                                <div class="text-sm text-green-600">–ù–æ–≤–∏—Ö –∑–∞–≤–¥–∞–Ω—å</div>
                            </div>
                            <div class="bg-yellow-100 p-3 rounded-lg text-center">
                                <div class="text-2xl font-bold text-yellow-600" id="rescheduled-tasks">0</div>
                                <div class="text-sm text-yellow-600">–ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏—Ö</div>
                            </div>
                            <div class="bg-purple-100 p-3 rounded-lg text-center">
                                <div class="text-2xl font-bold text-purple-600" id="active-managers">0</div>
                                <div class="text-sm text-purple-600">–ê–∫—Ç–∏–≤–Ω–∏—Ö –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤</div>
                            </div>
                            <div class="bg-indigo-100 p-3 rounded-lg text-center">
                                <div class="text-2xl font-bold text-indigo-600" id="total-clients">0</div>
                                <div class="text-sm text-indigo-600">–ö–ª—ñ—î–Ω—Ç—ñ–≤</div>
                            </div>
                        </div>
                    </div>
                    <!-- –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
                </div>
                
                <!-- –ö–∞–ª–µ–Ω–¥–∞—Ä -->
                <div id="calendar-container" class="mb-6">
                    <div class="text-center py-8">
                        <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto"></div>
                        <p class="mt-4 text-gray-600">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è...</p>
                    </div>
                </div>
            </div>
            
            <!-- –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–∫–∏ –∑–≤—ñ—Ç–æ–≤ -->
            <div id="reports-tab-content" class="hidden">
                <div class="space-y-6">
                    <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
                    <div class="bg-gray-50 p-4 rounded-lg">
                        <h3 class="text-lg font-semibold mb-4">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≤–¥–∞–Ω—å</h3>
                        <div id="reports-stats" class="grid grid-cols-2 md:grid-cols-4 gap-4">
                            <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
                        </div>
                    </div>
                    
                    <!-- –ù–æ–≤—ã–µ –∑–∞–¥–∞—á–∏ -->
                    <div class="bg-white border rounded-lg">
                        <div class="p-4 border-b">
                            <h3 class="text-lg font-semibold text-green-600">üÜï –ù–æ–≤—ñ –∑–∞–≤–¥–∞–Ω–Ω—è</h3>
                        </div>
                        <div id="new-tasks-list" class="p-4">
                            <!-- –°–ø–∏—Å–æ–∫ –Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á -->
                        </div>
                    </div>
                    
                    <!-- –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ -->
                    <div class="bg-white border rounded-lg">
                        <div class="p-4 border-b">
                            <h3 class="text-lg font-semibold text-yellow-600">üîÑ –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è</h3>
                        </div>
                        <div id="rescheduled-tasks-list" class="p-4">
                            <!-- –°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á -->
                        </div>
                    </div>
                    
                    <!-- –î–µ–π—Å—Ç–≤–∏—è -->
                    <div class="flex gap-2">
                        <button id="clear-task-history" class="btn btn-sm btn-secondary">
                            üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é
                        </button>
                        <button id="export-reports" class="btn btn-sm btn-primary">
                            üì§ –ï–∫—Å–ø–æ—Ä—Ç –∑–≤—ñ—Ç—É
                        </button>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
    `;
    
    setupCalendarEventHandlers(container);
    loadInitialData();
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω—ã
    setTimeout(() => {
        const analyticsContainer = document.getElementById('calendarAnalytics');
        if (analyticsContainer) {
            const elements = ['total-tasks', 'active-managers', 'total-clients', 'new-tasks', 'rescheduled-tasks'];
            elements.forEach(id => {
                const element = analyticsContainer.querySelector(`#${id}`);
                logger.info(`üîç –ï–ª–µ–º–µ–Ω—Ç ${id} –ø—ñ—Å–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó:`, element ? '–∑–Ω–∞–π–¥–µ–Ω–æ' : '–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            });
        }
    }, 100);
    
    isCalendarInited = true;
    logger.info('‚úÖ –ú–æ–¥—É–ª—å –∫–∞–ª–µ–Ω–¥–∞—Ä—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
}

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
 */
function setupCalendarEventHandlers(container) {
    const departmentFilter = container.querySelector('#calendar-department-filter');
    const managerFilter = container.querySelector('#calendar-manager-filter');
    const prevMonthBtn = container.querySelector('#calendar-prev-month');
    const nextMonthBtn = container.querySelector('#calendar-next-month');
    const autoUpdateToggle = container.querySelector('#calendar-auto-update-toggle');
    
    // –í–∫–ª–∞–¥–∫–∏
    const calendarTabBtn = container.querySelector('#calendar-tab-btn');
    const reportsTabBtn = container.querySelector('#reports-tab-btn');
    const calendarTabContent = container.querySelector('#calendar-tab-content');
    const reportsTabContent = container.querySelector('#reports-tab-content');
    
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
    calendarTabBtn.addEventListener('click', () => {
        calendarTabBtn.classList.add('border-blue-500', 'text-blue-600');
        calendarTabBtn.classList.remove('border-transparent', 'text-gray-500');
        reportsTabBtn.classList.remove('border-blue-500', 'text-blue-600');
        reportsTabBtn.classList.add('border-transparent', 'text-gray-500');
        
        calendarTabContent.classList.remove('hidden');
        reportsTabContent.classList.add('hidden');
    });
    
    reportsTabBtn.addEventListener('click', () => {
        reportsTabBtn.classList.add('border-blue-500', 'text-blue-600');
        reportsTabBtn.classList.remove('border-transparent', 'text-gray-500');
        calendarTabBtn.classList.remove('border-blue-500', 'text-blue-600');
        calendarTabBtn.classList.add('border-transparent', 'text-gray-500');
        
        reportsTabContent.classList.remove('hidden');
        calendarTabContent.classList.add('hidden');
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ç—á–µ—Ç—ã –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏
        renderReportsTab();
    });
    
    // –§–∏–ª—å—Ç—Ä—ã
    departmentFilter.addEventListener('change', () => {
        selectedDepartment = departmentFilter.value;
        updateManagerFilter();
        renderCalendar();
    });
    
    managerFilter.addEventListener('change', () => {
        selectedManager = managerFilter.value;
        renderCalendar();
    });
    
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –º–µ—Å—è—Ü–∞–º
    prevMonthBtn.addEventListener('click', () => {
        if (currentMonth === 0) {
            currentMonth = 11;
            currentYear--;
        } else {
            currentMonth--;
        }
        updateMonthDisplay();
        renderCalendar();
    });
    
    nextMonthBtn.addEventListener('click', () => {
        if (currentMonth === 11) {
            currentMonth = 0;
            currentYear++;
        } else {
            currentMonth++;
        }
        updateMonthDisplay();
        renderCalendar();
    });
    
    // –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    autoUpdateToggle.addEventListener('click', () => {
        isAutoUpdateEnabled = !isAutoUpdateEnabled;
        if (isAutoUpdateEnabled) {
            startAutoUpdate();
            autoUpdateToggle.textContent = '–ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è';
            autoUpdateToggle.classList.remove('btn-danger');
            autoUpdateToggle.classList.add('btn-secondary');
        } else {
            stopAutoUpdate();
            autoUpdateToggle.textContent = '–£–≤—ñ–º–∫–Ω—É—Ç–∏';
            autoUpdateToggle.classList.remove('btn-secondary');
            autoUpdateToggle.classList.add('btn-danger');
        }
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    const modalElement = container.querySelector('#calendar-detail-modal');
    if (modalElement) {
        modalElement.addEventListener('click', (e) => {
            if (e.target.id === 'calendar-detail-modal') {
                e.target.classList.add('hidden');
            }
        });
    }
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–Ω–æ–ø–∫–µ X (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    const closeButton = container.querySelector('#detail-modal-close');
    if (closeButton) {
        closeButton.addEventListener('click', () => {
            const modal = container.querySelector('#calendar-detail-modal');
            if (modal) {
                modal.classList.add('hidden');
            }
        });
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤
    const clearHistoryBtn = container.querySelector('#clear-task-history');
    const exportReportsBtn = container.querySelector('#export-reports');
    
    if (clearHistoryBtn) {
        clearHistoryBtn.addEventListener('click', clearTaskHistory);
    }
    
    if (exportReportsBtn) {
        exportReportsBtn.addEventListener('click', exportReports);
    }
}

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 */
async function loadInitialData() {
    try {
        showLoadingAnimation();
        updateLoadingProgress(1, 4, '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤...');
        
        const { managers, departments } = await loadEmployeesAndDepartments();
        managersData = managers;
        departmentsData = departments;
        
        logger.info('üë• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤:', managers.length);
        logger.info('üè¢ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –≤—ñ–¥–¥—ñ–ª—ñ–≤:', departments.length);
        
        updateLoadingProgress(2, 4, '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä—è...');
        
        // –ñ–¥–µ–º –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä—è
        const loadedCalendarData = await loadCalendarData();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
        if (loadedCalendarData && loadedCalendarData.length > 0) {
            logger.info('üé® –î–∞–Ω—ñ –≥–æ—Ç–æ–≤—ñ, —Ä–µ–Ω–¥–µ—Ä–∏–º–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å...');
            updateLoadingProgress(3, 4, '–†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ —Ç–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è...');
            
            // –¢–µ–ø–µ—Ä—å –≤—ã–∑—ã–≤–∞–µ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥, –±—É–¥—É—á–∏ —É–≤–µ—Ä–µ–Ω–Ω—ã–º–∏, —á—Ç–æ `calendarData` –∑–∞–ø–æ–ª–Ω–µ–Ω–∞
            renderFilters(); 
            renderCalendar();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω—ã –ø–æ—Å–ª–µ renderCalendar
            setTimeout(() => {
                const analyticsContainer = document.getElementById('calendarAnalytics');
                if (analyticsContainer) {
                    const elements = ['total-tasks', 'active-managers', 'total-clients', 'new-tasks', 'rescheduled-tasks'];
                    elements.forEach(id => {
                        const element = analyticsContainer.querySelector(`#${id}`);
                        logger.info(`üîç –ï–ª–µ–º–µ–Ω—Ç ${id} –ø—ñ—Å–ª—è renderCalendar:`, element ? '–∑–Ω–∞–π–¥–µ–Ω–æ' : '–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
                    });
                }
            }, 100);
            
            logger.info('üîÑ –ó–∞–ø—É—Å–∫–∞—î–º–æ –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è...');
            startAutoUpdate();
            
            updateLoadingProgress(4, 4, '–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è...');
            
            setTimeout(() => {
                hideLoadingAnimation();
                showNotification('–ö–∞–ª–µ–Ω–¥–∞—Ä —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ!', 'success');
            }, 500);

        } else {
            logger.error('‚ùå –ü–æ–º–∏–ª–∫–∞: –¥–∞–Ω—ñ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∞–±–æ –≤–æ–Ω–∏ –ø–æ—Ä–æ–∂–Ω—ñ');
            hideLoadingAnimation();
            showCalendarError('–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–∞–Ω—ñ –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è. –°–ø—Ä–æ–±—É–π—Ç–µ –æ–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.');
        }
        
    } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
        hideLoadingAnimation();
        showCalendarError('–ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–æ–¥—É–ª—è.');
    }
}

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –æ—Ç–¥–µ–ª–æ–≤
 */
async function loadEmployeesAndDepartments() {
    try {
        const companyId = window.state?.currentCompanyId;
        if (!companyId) {
            logger.error('‚ùå ID –∫–æ–º–ø–∞–Ω—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            return { managers: [], departments: [] };
        }
        
        logger.info('üë• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤ —Ç–∞ –≤—ñ–¥–¥—ñ–ª—ñ–≤...');
        logger.info('üè¢ Company ID:', companyId);

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ window.state –∫–∞–∫ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
        const allEmployees = window.state?.allEmployees || [];
        const departments = window.state?.departments || [];
        
        logger.info('üë• –í—Å—ñ —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫–∏:', allEmployees.length);
        logger.info('üè¢ –í—Å—ñ –≤—ñ–¥–¥—ñ–ª–∏:', departments.length);

        // –§–∏–ª—å—Ç—Ä—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º (–∫–∞–∫ –≤ —Å–∏–≥–Ω–∞–ª–∏–∑–∞—Ü–∏–∏)
        const managers = allEmployees.filter(emp => {
            if (emp.role === 'manager') return true;
            if (emp.position) {
                const position = emp.position.toLowerCase();
                return position.includes('–º–µ–Ω–µ–¥–∂–µ—Ä') || 
                       position.includes('manager') || 
                       position.includes('sales') ||
                       position.includes('–ø—Ä–æ–¥–∞–∂');
            }
            return false;
        });
        
        logger.info('üë§ –í—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω—ñ –º–µ–Ω–µ–¥–∂–µ—Ä–∏:', managers.length);

        // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        if (managers.length === 0) {
            logger.warn('üîç –ú–µ–Ω–µ–¥–∂–µ—Ä–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω—ñ –∑–∞ –∫—Ä–∏—Ç–µ—Ä—ñ—è–º–∏, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –≤—Å—ñ—Ö —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤');
            return {
                managers: allEmployees,
                departments: departments
            };
        }
        
        logger.info('‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
        return { managers, departments };
        
    } catch (error) {
        logger.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –æ—Ç–¥–µ–ª–æ–≤:', error);
        return { managers: [], departments: [] };
    }
}

/**
 * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ñ–∏–ª—å—Ç—Ä–æ–≤
 */
function renderFilters() {
    const departmentFilter = document.getElementById('calendar-department-filter');
    const managerFilter = document.getElementById('calendar-manager-filter');
    
    logger.info('üé® –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤...');
    
    if (!departmentFilter || !managerFilter) {
        logger.error('‚ùå –§—ñ–ª—å—Ç—Ä–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        return;
    }
    
    // –û—Ç–¥–µ–ª—ã
    departmentFilter.innerHTML = '<option value="">–í—Å—ñ –≤—ñ–¥–¥—ñ–ª–∏</option>';
    departmentsData.forEach(dept => {
        const option = document.createElement('option');
        option.value = dept.id;
        option.textContent = dept.name;
        departmentFilter.appendChild(option);
    });
    
    // --- –í–ê–ñ–ù–´–ï –î–û–ë–ê–í–õ–ï–ù–ò–Ø ---
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø–µ—Ä–µ–¥ –ø–µ—Ä–≤–æ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–æ–π
    departmentFilter.value = '';
    selectedDepartment = ''; 
    logger.info('üî© –°—Ç–∞–Ω —Ñ—ñ–ª—å—Ç—Ä–∞ –≤—ñ–¥–¥—ñ–ª—É –ø—Ä–∏–º—É—Å–æ–≤–æ —Å–∫–∏–Ω—É—Ç–æ.');
    // -------------------------

    // –ú–µ–Ω–µ–¥–∂–µ—Ä—ã (—Ç–µ–ø–µ—Ä—å –≤—ã–∑–æ–≤–µ—Ç—Å—è —Å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º selectedDepartment)
    updateManagerFilter();
    
    logger.info('‚úÖ –§—ñ–ª—å—Ç—Ä–∏ –≤—ñ–¥—Ä–µ–Ω–¥–µ—Ä–µ–Ω–æ');
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
 */
function updateManagerFilter() {
    const managerFilter = document.getElementById('calendar-manager-filter');
    if (!managerFilter) {
        logger.warn('‚ö†Ô∏è –§—ñ–ª—å—Ç—Ä –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        return;
    }
    
    logger.info('üë§ –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä–∞ –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤...');
    logger.info('üè¢ –í–∏–±—Ä–∞–Ω–∏–π –≤—ñ–¥–¥—ñ–ª:', selectedDepartment);
    
    // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–µ –æ–ø—Ü–∏–∏
    managerFilter.innerHTML = '<option value="">–í—Å—ñ –º–µ–Ω–µ–¥–∂–µ—Ä–∏</option>';
    
    // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ "–í—Å–µ –æ—Ç–¥–µ–ª—ã" –∏–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
    if (!selectedDepartment || selectedDepartment === '') {
        logger.info('üë• –ü–æ–∫–∞–∑—É—î–º–æ –≤—Å—ñ—Ö –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤');
        managersData.forEach(manager => {
            const option = document.createElement('option');
            option.value = manager.id;
            option.textContent = manager.name;
            managerFilter.appendChild(option);
        });
    } else {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ—Ç–¥–µ–ª–∞
        const departmentName = departmentsData.find(d => d.id === selectedDepartment)?.name;
        logger.info('üè¢ –§—ñ–ª—å—Ç—Ä—É—î–º–æ –ø–æ –≤—ñ–¥–¥—ñ–ª—É:', departmentName);
        
        const filteredManagers = managersData.filter(manager => {
            return manager.department === selectedDepartment || 
                   manager.departmentName === departmentName;
        });
        
        logger.info('üë• –ó–Ω–∞–π–¥–µ–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤ —É –≤—ñ–¥–¥—ñ–ª—ñ:', filteredManagers.length);
        
        filteredManagers.forEach(manager => {
            const option = document.createElement('option');
            option.value = manager.id;
            option.textContent = manager.name;
            managerFilter.appendChild(option);
        });
    }
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –æ—Ç–¥–µ–ª–∞
    selectedManager = '';
    managerFilter.value = '';
    
    logger.info('‚úÖ –§—ñ–ª—å—Ç—Ä –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤ –æ–Ω–æ–≤–ª–µ–Ω–æ');
}

/**
 * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
 */
function renderCalendar() {
    logger.info('üé® –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–∞–ª–µ–Ω–¥–∞—Ä—è...');
    
    const container = document.getElementById('calendar-container');
    if (!container) {
        logger.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞–ª–µ–Ω–¥–∞—Ä—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        return;
    }
    
    const filteredData = getFilteredData();
    logger.info('üìä –î–∞–Ω—ñ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É:', filteredData.length);
    
    if (filteredData.length === 0) {
        container.innerHTML = `
            <div class="text-center py-12">
                <div class="text-6xl mb-4">üìÖ</div>
                <p class="text-gray-600 text-lg">–ù–µ–º–∞—î –∑–∞–≤–¥–∞–Ω—å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è</p>
                <p class="text-gray-500 text-sm mt-2">–°–ø—Ä–æ–±—É–π—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä–∏ –∞–±–æ –ø–µ—Ä—ñ–æ–¥</p>
            </div>
        `;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
        setTimeout(() => {
            const analyticsContainer = document.getElementById('calendarAnalytics');
            logger.info('üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä calendarAnalytics (–Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö):', analyticsContainer);
            
            if (analyticsContainer) {
                logger.info('‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä calendarAnalytics –∑–Ω–∞–π–¥–µ–Ω–æ (–Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö)');
                updateStatistics(filteredData);
            } else {
                logger.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä calendarAnalytics –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
            }
        }, 500);
        
        return;
    }
    
    const days = generateCalendarDays();
    const calendarHTML = `
        <div class="bg-white rounded-lg shadow overflow-hidden">
            <!-- –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏ -->
            <div class="grid grid-cols-7 bg-gray-50 border-b">
                <div class="p-3 text-center text-sm font-medium text-gray-500">–ù–µ–¥</div>
                <div class="p-3 text-center text-sm font-medium text-gray-500">–ü–æ–Ω</div>
                <div class="p-3 text-center text-sm font-medium text-gray-500">–í—ñ–≤</div>
                <div class="p-3 text-center text-sm font-medium text-gray-500">–°–µ—Ä</div>
                <div class="p-3 text-center text-sm font-medium text-gray-500">–ß–µ—Ç</div>
                <div class="p-3 text-center text-sm font-medium text-gray-500">–ü'—è—Ç</div>
                <div class="p-3 text-center text-sm font-medium text-gray-500">–°—É–±</div>
            </div>
            
            <!-- –î–Ω–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è -->
            <div class="grid grid-cols-7">
                ${days.map(date => renderCalendarDay(date, filteredData)).join('')}
            </div>
        </div>
    `;
    
    container.innerHTML = calendarHTML;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º requestAnimationFrame –¥–ª—è –ª—É—á—à–µ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å DOM
    requestAnimationFrame(() => {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä calendarAnalytics —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        const analyticsContainer = document.getElementById('calendarAnalytics');
        logger.info('üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä calendarAnalytics:', analyticsContainer);
        
        if (analyticsContainer) {
            logger.info('‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä calendarAnalytics –∑–Ω–∞–π–¥–µ–Ω–æ');
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            const elements = ['total-tasks', 'active-managers', 'total-clients', 'new-tasks', 'rescheduled-tasks'];
            elements.forEach(id => {
                const element = analyticsContainer.querySelector(`#${id}`);
                logger.info(`üîç –ï–ª–µ–º–µ–Ω—Ç ${id}:`, element ? '–∑–Ω–∞–π–¥–µ–Ω–æ' : '–Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            });
            updateStatistics(filteredData);
        } else {
            logger.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä calendarAnalytics –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
        }
    });
    
    logger.info('‚úÖ –ö–∞–ª–µ–Ω–¥–∞—Ä –≤—ñ–¥—Ä–µ–Ω–¥–µ—Ä–µ–Ω–æ');
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 */
function getFilteredData() {
    let filtered = calendarData;
    
    logger.info('üîç –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö...');
    logger.info('üìä –ü–æ—á–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ:', filtered.length);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    const currentUserPermissions = window.state?.currentUserPermissions || {};
    const currentUserId = window.state?.currentUserId;
    const currentEmployee = window.state?.allEmployees?.find(emp => emp.id === currentUserId);
    
    logger.info('üë§ –ü–æ—Ç–æ—á–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á:', currentEmployee?.name);
    logger.info('üîë –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø—É:', Object.keys(currentUserPermissions).filter(key => key.includes('manager_calendar')));
    
    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –ø—Ä–∞–≤–∞–º –¥–æ—Å—Ç—É–ø–∞ - –µ—Å–ª–∏ –Ω–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–∞–≤, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ
    const hasSpecificPermissions = currentUserPermissions['manager_calendar_view_own_tasks'] || 
                                 currentUserPermissions['manager_calendar_view_department_tasks'];
    
    if (hasSpecificPermissions && !currentUserPermissions['manager_calendar_view_all_tasks']) {
        if (currentUserPermissions['manager_calendar_view_own_tasks']) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏ –∑–∞–¥–∞—á–∏
            filtered = filtered.filter(item => 
                item.–ú–µ–Ω–µ–¥–∂–µ—Ä.toLowerCase().includes(currentEmployee?.name?.toLowerCase() || '') // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø–æ–ª–µ
            );
            logger.info('üë§ –ü—ñ—Å–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó –ø–æ –≤–ª–∞—Å–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω–Ω—è—Ö:', filtered.length);
        } else if (currentUserPermissions['manager_calendar_view_department_tasks']) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–¥–∞—á–∏ —Å–≤–æ–µ–≥–æ –æ—Ç–¥–µ–ª–∞
            const userDepartment = currentEmployee?.department;
            if (userDepartment) {
                filtered = filtered.filter(item => item.departmentName === userDepartment); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø–æ–ª–µ
            }
            logger.info('üè¢ –ü—ñ—Å–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó –ø–æ –≤—ñ–¥–¥—ñ–ª—É:', filtered.length);
        }
    } else {
        logger.info('‚úÖ –ú–∞—î–º–æ –ø—Ä–∞–≤–∞ –Ω–∞ –ø–µ—Ä–µ–≥–ª—è–¥ –≤—Å—ñ—Ö –∑–∞–≤–¥–∞–Ω—å –∞–±–æ –Ω–µ–º–∞—î —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏—Ö –æ–±–º–µ–∂–µ–Ω—å');
    }
    
    // –§–∏–ª—å—Ç—Ä –ø–æ –æ—Ç–¥–µ–ª—É
    if (selectedDepartment) {
        const departmentName = departmentsData.find(d => d.id === selectedDepartment)?.name;
        if (departmentName) {
            filtered = filtered.filter(item => item.departmentName === departmentName); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø–æ–ª–µ
            logger.info('üè¢ –ü—ñ—Å–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó –ø–æ –≤–∏–±—Ä–∞–Ω–æ–º—É –≤—ñ–¥–¥—ñ–ª—É:', filtered.length);
        }
    }
    
    // –§–∏–ª—å—Ç—Ä –ø–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É
    if (selectedManager) {
        const managerName = managersData.find(m => m.id === selectedManager)?.name;
        if (managerName) {
            filtered = filtered.filter(item => 
                item.–ú–µ–Ω–µ–¥–∂–µ—Ä.toLowerCase().includes(managerName.toLowerCase()) // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø–æ–ª–µ
            );
            logger.info('üë§ –ü—ñ—Å–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó –ø–æ –≤–∏–±—Ä–∞–Ω–æ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É:', filtered.length);
        }
    }
    
    logger.info('üìä –§—ñ–Ω–∞–ª—å–Ω—ñ –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω—ñ –¥–∞–Ω—ñ:', filtered.length);
    return filtered;
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–Ω–µ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—è
 */
function generateCalendarDays() {
    const firstDay = new Date(currentYear, currentMonth, 1);
    const lastDay = new Date(currentYear, currentMonth + 1, 0);
    const startDate = new Date(firstDay);
    startDate.setDate(startDate.getDate() - firstDay.getDay());
    
    const days = [];
    const currentDate = new Date(startDate);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–æ–≤–Ω–æ 6 –Ω–µ–¥–µ–ª—å (42 –¥–Ω—è) –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Å–µ—Ç–∫–∏
    for (let i = 0; i < 42; i++) {
        days.push(new Date(currentDate));
        currentDate.setDate(currentDate.getDate() + 1);
    }
    
    logger.info('üìÖ –ó–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ –¥–Ω—ñ–≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', days.length);
    logger.info('üìÖ –ü–æ—Ç–æ—á–Ω–∏–π –º—ñ—Å—è—Ü—å/—Ä—ñ–∫:', currentMonth + 1, currentYear);
    
    return days;
}

/**
 * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è
 */
function renderCalendarDay(date, filteredData) {
    const isCurrentMonth = date.getMonth() === currentMonth;
    const isToday = date.toDateString() === new Date().toDateString();
    
    const dayData = filteredData.filter(item => {
        const itemDate = new Date(item.–î–∞—Ç–∞); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø–æ–ª–µ
        return itemDate.toDateString() === date.toDateString();
    });
    
    const taskCount = dayData.length;
    const uniqueManagers = new Set(dayData.map(item => item.–ú–µ–Ω–µ–¥–∂–µ—Ä)).size; // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø–æ–ª–µ
    const uniqueClients = new Set(dayData.map(item => item['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥'])).size; // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø–æ–ª–µ
    
    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å—ã –∑–∞–¥–∞—á
    const newTasksCount = dayData.filter(item => item.status === 'new').length;
    const rescheduledTasksCount = dayData.filter(item => item.status === 'rescheduled').length;
    const activeTasksCount = dayData.filter(item => !item.status || item.status === 'active').length;
    
    let backgroundColor = 'bg-white';
    let textColor = 'text-gray-900';
    let statusIndicator = '';
    
    if (taskCount > 0) {
        if (taskCount >= 10) {
            backgroundColor = 'bg-red-100';
            textColor = 'text-red-800';
        } else if (taskCount >= 5) {
            backgroundColor = 'bg-yellow-100';
            textColor = 'text-yellow-800';
        } else {
            backgroundColor = 'bg-green-100';
            textColor = 'text-green-800';
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å—Ç–∞—Ç—É—Å–∞
        if (newTasksCount > 0) {
            statusIndicator += `<div class="inline-block w-2 h-2 bg-green-500 rounded-full mr-1" title="–ù–æ–≤—ñ: ${newTasksCount}"></div>`;
        }
        if (rescheduledTasksCount > 0) {
            statusIndicator += `<div class="inline-block w-2 h-2 bg-yellow-500 rounded-full mr-1" title="–ü–µ—Ä–µ–Ω–µ—Å–µ–Ω—ñ: ${rescheduledTasksCount}"></div>`;
        }
    }
    
    if (!isCurrentMonth) {
        backgroundColor = 'bg-gray-50';
        textColor = 'text-gray-400';
    }
    
    if (isToday) {
        backgroundColor = 'bg-blue-100';
        textColor = 'text-blue-800';
    }
    
    // –õ–æ–≥—É—î–º–æ —Ç—ñ–ª—å–∫–∏ –¥–Ω—ñ –∑ –∑–∞–≤–¥–∞–Ω–Ω—è–º–∏
    if (taskCount > 0) {
        logger.info(`üìÖ ${date.toDateString()}: ${taskCount} –∑–∞–≤–¥–∞–Ω—å (${newTasksCount} –Ω–æ–≤–∏—Ö, ${rescheduledTasksCount} –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏—Ö), ${uniqueManagers} –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤, ${uniqueClients} –∫–ª—ñ—î–Ω—Ç—ñ–≤`);
    }
    
    return `
        <div class="${backgroundColor} p-2 min-h-[100px] cursor-pointer hover:bg-gray-50 transition-colors"
             onclick="showDayDetails('${date.toISOString()}', ${taskCount})">
            <div class="text-sm ${textColor} font-medium mb-1">
                ${date.getDate()}
            </div>
            ${taskCount > 0 ? `
                <div class="text-xs ${textColor}">
                    <div class="font-medium">${taskCount} —Å–ø—Ä–∞–≤</div>
                    ${newTasksCount > 0 ? `<div class="text-green-600">üÜï ${newTasksCount} –Ω–æ–≤–∏—Ö</div>` : ''}
                    ${rescheduledTasksCount > 0 ? `<div class="text-yellow-600">üîÑ ${rescheduledTasksCount} –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏—Ö</div>` : ''}
                    <div class="text-xs opacity-75">${uniqueManagers} –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤</div>
                    <div class="text-xs opacity-75">${uniqueClients} –∫–ª—ñ—î–Ω—Ç—ñ–≤</div>
                    ${statusIndicator ? `<div class="mt-1">${statusIndicator}</div>` : ''}
                </div>
            ` : ''}
        </div>
    `;
}

/**
 * –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–Ω—è
 */
function showDayDetails(dateString, taskCount) {
    if (taskCount === 0) return;
    
    logger.info('üìÖ –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª—ñ–∑–∞—Ü—ñ—ó –¥–ª—è:', dateString, '–∑–∞–≤–¥–∞–Ω—å:', taskCount);
    
    const date = new Date(dateString);
    const dayData = getFilteredData().filter(item => {
        const itemDate = new Date(item.–î–∞—Ç–∞); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø–æ–ª–µ
        return itemDate.toDateString() === date.toDateString();
    });
    
    logger.info('üìä –ó–Ω–∞–π–¥–µ–Ω–æ –∑–∞–≤–¥–∞–Ω—å –¥–ª—è –¥–Ω—è:', dayData.length);
    
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –µ—Å—Ç—å
    const existingModal = document.querySelector('#calendar-detail-modal');
    if (existingModal) {
        existingModal.remove();
    }
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
    const modal = document.createElement('div');
    modal.id = 'calendar-detail-modal';
    modal.className = 'fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50';
    
    // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º –∑–∞–¥–∞—á
    const groupedByStatus = {
        new: [],
        rescheduled: [],
        active: []
    };
    
    dayData.forEach(item => {
        const status = item.status || 'active';
        if (groupedByStatus[status]) {
            groupedByStatus[status].push(item);
        } else {
            groupedByStatus.active.push(item);
        }
    });
    
    let contentHTML = '';
    
    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ –∑–∞–¥–∞—á–∏
    if (groupedByStatus.new.length > 0) {
        contentHTML += `
            <div class="mb-6">
                <details class="group" open>
                    <summary class="text-lg font-bold text-green-700 mb-3 flex items-center cursor-pointer hover:text-green-600">
                        <span class="mr-2">üÜï</span> –ù–æ–≤—ñ –∑–∞–≤–¥–∞–Ω–Ω—è (${groupedByStatus.new.length})
                        <svg class="w-5 h-5 ml-auto transform group-open:rotate-180 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                        </svg>
                    </summary>
                    ${renderTasksByManager(groupedByStatus.new)}
                </details>
            </div>
        `;
    }
    
    // –ó–∞—Ç–µ–º –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
    if (groupedByStatus.rescheduled.length > 0) {
        contentHTML += `
            <div class="mb-6">
                <details class="group" open>
                    <summary class="text-lg font-bold text-yellow-700 mb-3 flex items-center cursor-pointer hover:text-yellow-600">
                        <span class="mr-2">üîÑ</span> –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è (${groupedByStatus.rescheduled.length})
                        <svg class="w-5 h-5 ml-auto transform group-open:rotate-180 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                        </svg>
                    </summary>
                    ${renderTasksByManager(groupedByStatus.rescheduled)}
                </details>
            </div>
        `;
    }
    
    // –ó–∞—Ç–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏
    if (groupedByStatus.active.length > 0) {
        contentHTML += `
            <div class="mb-6">
                <details class="group" open>
                    <summary class="text-lg font-bold text-blue-700 mb-3 flex items-center cursor-pointer hover:text-blue-600">
                        <span class="mr-2">‚úÖ</span> –ê–∫—Ç–∏–≤–Ω—ñ –∑–∞–≤–¥–∞–Ω–Ω—è (${groupedByStatus.active.length})
                        <svg class="w-5 h-5 ml-auto transform group-open:rotate-180 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                        </svg>
                    </summary>
                    ${renderTasksByManager(groupedByStatus.active)}
                </details>
            </div>
        `;
    }
    
    modal.innerHTML = `
        <div class="bg-white rounded-lg p-6 max-w-4xl w-full mx-4 max-h-[80vh] overflow-y-auto">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-bold">–î–µ—Ç–∞–ª—ñ–∑–∞—Ü—ñ—è –∑–∞ ${date.toLocaleDateString('uk-UA')} (${taskCount} —Å–ø—Ä–∞–≤)</h3>
                <button onclick="this.closest('#calendar-detail-modal').remove()" class="text-gray-500 hover:text-gray-700">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                </button>
            </div>
            <div>${contentHTML}</div>
        </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.remove();
        }
    });
    
    document.body.appendChild(modal);
    
    logger.info('‚úÖ –î–µ—Ç–∞–ª—ñ–∑–∞—Ü—ñ—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–∞');
}

/**
 * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∑–∞–¥–∞—á –ø–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º
 */
function renderTasksByManager(tasks) {
    // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞–º
    const groupedByManager = {};
    tasks.forEach(item => {
        const manager = item.–ú–µ–Ω–µ–¥–∂–µ—Ä; // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø–æ–ª–µ
        if (!groupedByManager[manager]) {
            groupedByManager[manager] = [];
        }
        groupedByManager[manager].push(item);
    });
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    Object.keys(groupedByManager).forEach(manager => {
        groupedByManager[manager].sort((a, b) => {
            const timeA = new Date(a.–î–∞—Ç–∞).getTime(); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø–æ–ª–µ
            const timeB = new Date(b.–î–∞—Ç–∞).getTime(); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø–æ–ª–µ
            return timeA - timeB;
        });
    });
    
    let managerHTML = '';
    
    Object.keys(groupedByManager).forEach(manager => {
        const managerTasks = groupedByManager[manager];
        const uniqueClients = new Set(managerTasks.map(task => task['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥'])).size;
        
        managerHTML += `
            <div class="mb-4 border-l-4 border-gray-300 pl-4">
                <details class="group">
                    <summary class="font-semibold text-gray-800 mb-2 flex items-center cursor-pointer hover:text-gray-600">
                        <span class="mr-2">üë§</span> ${manager} (${managerTasks.length} –∑–∞–≤–¥–∞–Ω—å, ${uniqueClients} –∫–ª—ñ—î–Ω—Ç—ñ–≤)
                        <svg class="w-4 h-4 ml-auto transform group-open:rotate-180 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                        </svg>
                    </summary>
                    <div class="space-y-2 ml-4">
        `;
        
        managerTasks.forEach(task => {
            const taskTime = new Date(task.–î–∞—Ç–∞).toLocaleTimeString('uk-UA', { 
                hour: '2-digit', 
                minute: '2-digit' 
            });
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏
            let statusClass = 'border-l-4 border-gray-300';
            let statusText = '‚úÖ –ê–∫—Ç–∏–≤–Ω–∞';
            
            if (task.status === 'new') {
                statusClass = 'border-l-4 border-green-500';
                statusText = 'üÜï –ù–æ–≤–∞';
            } else if (task.status === 'rescheduled') {
                statusClass = 'border-l-4 border-yellow-500';
                statusText = 'üîÑ –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞';
            }
            
            // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ CRM
            const crmLink = task['–ö–ª–∏–µ–Ω—Ç.–°—Å—ã–ª–∫–∞'] ? 
                `<a href="${task['–ö–ª–∏–µ–Ω—Ç.–°—Å—ã–ª–∫–∞']}" target="_blank" class="inline-flex items-center px-2 py-1 bg-blue-100 text-blue-700 text-xs rounded hover:bg-blue-200 transition-colors">
                    <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M11 3a1 1 0 100 2h2.586l-6.293 6.293a1 1 0 101.414 1.414L15 6.414V9a1 1 0 102 0V4a1 1 0 00-1-1h-5z"/>
                        <path d="M5 5a2 2 0 00-2 2v8a2 2 0 002 2h8a2 2 0 002-2v-3a1 1 0 10-2 0v3H5V7h3a1 1 0 000-2H5z"/>
                    </svg>
                    CRM
                </a>` : 
                '';
            
            managerHTML += `
                <div class="${statusClass} pl-3 py-2 bg-gray-50 rounded">
                    <div class="flex justify-between items-start">
                        <div class="flex-1">
                            <div class="font-medium text-gray-800">${task.–î–µ–ª–æ}</div>
                            <div class="text-sm text-gray-600">${task['–ö–ª–∏–µ–Ω—Ç.–ù–∞–∑–≤–∞–Ω–∏–µ']}</div>
                            <div class="text-xs text-gray-500">${statusText}</div>
                            ${crmLink ? `<div class="mt-1">${crmLink}</div>` : ''}
                        </div>
                        <div class="text-sm font-medium text-gray-700">${taskTime}</div>
                    </div>
                </div>
            `;
        });
        
        managerHTML += `
                    </div>
                </details>
            </div>
        `;
    });
    
    return managerHTML;
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 */
function updateStatistics(filteredData, retryCount = 0) {
    logger.info('üìä –û–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
    
    if (!filteredData || filteredData.length === 0) {
        logger.info('üìä –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
        return;
    }
    
    // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫
    if (retryCount > 10) {
        logger.error('‚ùå –î–æ—Å—è–≥–Ω—É—Ç–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å–ø—Ä–æ–± –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
        return;
    }
    
    // –ü–æ–¥—Å—á–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const totalTasks = filteredData.length;
    const activeManagers = new Set(filteredData.map(item => item.–ú–µ–Ω–µ–¥–∂–µ—Ä)).size;
    const totalClients = new Set(filteredData.map(item => item['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥'])).size;
    const newTasksCount = newTasks.size;
    const rescheduledTasksCount = rescheduledTasks.size;
    
    logger.info('üìä –†–æ–∑—Ä–∞—Ö–æ–≤–∞–Ω–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:', {
        totalTasks,
        activeManagers,
        totalClients,
        newTasksCount,
        rescheduledTasksCount
    });
    
    // –≠–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const elements = {
        'total-tasks': totalTasks,
        'active-managers': activeManagers,
        'total-clients': totalClients,
        'new-tasks': newTasksCount,
        'rescheduled-tasks': rescheduledTasksCount
    };
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ calendarAnalytics –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
    const analyticsContainer = document.getElementById('calendarAnalytics');
    if (!analyticsContainer) {
        logger.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä calendarAnalytics –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        return;
    }
    
    // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    if (!ensureStatisticsElements()) {
        logger.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏');
        if (retryCount < 10) {
            setTimeout(() => {
                updateStatistics(filteredData, retryCount + 1);
            }, 100);
        }
        return;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è
    Object.keys(elements).forEach(id => {
        const element = analyticsContainer.querySelector(`#${id}`);
        if (element) {
            element.textContent = elements[id];
            logger.info(`‚úÖ –û–Ω–æ–≤–ª–µ–Ω–æ ${id}: ${elements[id]}`);
        } else {
            logger.warn(`‚ö†Ô∏è –ï–ª–µ–º–µ–Ω—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: ${id}`);
        }
    });
    
    logger.info('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–∞');
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ—Å—è—Ü–∞
 */
function updateMonthDisplay() {
    const monthDisplay = document.getElementById('calendar-current-month');
    if (monthDisplay) {
        monthDisplay.textContent = `${getMonthName(currentMonth)} ${currentYear}`;
        logger.info('üìÖ –ú—ñ—Å—è—Ü—å –æ–Ω–æ–≤–ª–µ–Ω–æ:', `${getMonthName(currentMonth)} ${currentYear}`);
    } else {
        logger.warn('‚ö†Ô∏è –ï–ª–µ–º–µ–Ω—Ç –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –º—ñ—Å—è—Ü—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
    }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—è—Ü–∞
 */
function getMonthName(monthIndex) {
    const months = [
        '–°—ñ—á–µ–Ω—å', '–õ—é—Ç–∏–π', '–ë–µ—Ä–µ–∑–µ–Ω—å', '–ö–≤—ñ—Ç–µ–Ω—å', '–¢—Ä–∞–≤–µ–Ω—å', '–ß–µ—Ä–≤–µ–Ω—å',
        '–õ–∏–ø–µ–Ω—å', '–°–µ—Ä–ø–µ–Ω—å', '–í–µ—Ä–µ—Å–µ–Ω—å', '–ñ–æ–≤—Ç–µ–Ω—å', '–õ–∏—Å—Ç–æ–ø–∞–¥', '–ì—Ä—É–¥–µ–Ω—å'
    ];
    return months[monthIndex] || '–ù–µ–≤—ñ–¥–æ–º–∏–π –º—ñ—Å—è—Ü—å';
}

/**
 * –ü–æ–∫–∞–∑ –æ—à–∏–±–∫–∏
 */
function showCalendarError(message) {
    logger.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', message);
    
    const container = document.getElementById('calendar-container');
    if (container) {
        container.innerHTML = `
            <div class="text-center py-8">
                <div class="text-red-500 text-6xl mb-4">‚ö†Ô∏è</div>
                <p class="text-gray-600">${message}</p>
                <button onclick="location.reload()" class="btn btn-primary mt-4">
                    –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–Ω–æ–≤—É
                </button>
            </div>
        `;
        logger.info('‚úÖ –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–∞ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—ñ');
    } else {
        logger.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞–ª–µ–Ω–¥–∞—Ä—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–º–∏–ª–∫–∏');
    }
}

/**
 * –û—á–∏—Å—Ç–∫–∞ –º–æ–¥—É–ª—è
 */
export function cleanupManagerCalendarModule() {
    logger.info('üßπ –û—á–∏—Å—Ç–∫–∞ –º–æ–¥—É–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è...');
    
    if (autoUpdateInterval) {
        clearInterval(autoUpdateInterval);
        autoUpdateInterval = null;
        logger.info('üõë –ó—É–ø–∏–Ω–µ–Ω–æ –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è');
    }
    
    // –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    calendarData = [];
    managersData = [];
    departmentsData = [];
    newTasks.clear();
    rescheduledTasks.clear();
    taskHistory.clear();
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    currentMonth = new Date().getMonth();
    currentYear = new Date().getFullYear();
    selectedDepartment = '';
    selectedManager = '';
    lastDataHash = null;
    isCalendarInited = false;
    
    logger.info('‚úÖ –ú–æ–¥—É–ª—å –∫–∞–ª–µ–Ω–¥–∞—Ä—è –æ—á–∏—â–µ–Ω');
}

/**
 * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤–∫–ª–∞–¥–∫–∏ –∑–≤—ñ—Ç–æ–≤
 */
function renderReportsTab() {
    logger.info('üìä –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤–∫–ª–∞–¥–∫–∏ –∑–≤—ñ—Ç—ñ–≤...');
    
    const statsContainer = document.getElementById('reports-stats');
    const newTasksContainer = document.getElementById('new-tasks-list');
    const rescheduledTasksContainer = document.getElementById('rescheduled-tasks-list');
    
    if (!statsContainer || !newTasksContainer || !rescheduledTasksContainer) {
        logger.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏ –∑–≤—ñ—Ç—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        return;
    }
    
    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const totalTasks = calendarData.length;
    const newTasksCount = newTasks.size;
    const rescheduledTasksCount = rescheduledTasks.size;
    const completedTasks = calendarData.filter(task => task.status === 'completed').length;
    
    logger.info('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–≤—ñ—Ç—ñ–≤:', { totalTasks, newTasksCount, rescheduledTasksCount, completedTasks });
    
    statsContainer.innerHTML = `
        <div class="bg-blue-100 p-4 rounded-lg">
            <div class="text-2xl font-bold text-blue-600">${totalTasks}</div>
            <div class="text-sm text-gray-600">–í—Å—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω—å</div>
        </div>
        <div class="bg-green-100 p-4 rounded-lg">
            <div class="text-2xl font-bold text-green-600">${newTasksCount}</div>
            <div class="text-sm text-gray-600">–ù–æ–≤–∏—Ö –∑–∞–≤–¥–∞–Ω—å</div>
        </div>
        <div class="bg-yellow-100 p-4 rounded-lg">
            <div class="text-2xl font-bold text-yellow-600">${rescheduledTasksCount}</div>
            <div class="text-sm text-gray-600">–ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏—Ö</div>
        </div>
        <div class="bg-purple-100 p-4 rounded-lg">
            <div class="text-2xl font-bold text-purple-600">${completedTasks}</div>
            <div class="text-sm text-gray-600">–í–∏–∫–æ–Ω–∞–Ω–∏—Ö</div>
        </div>
    `;
    
    logger.info('‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–≤—ñ—Ç—ñ–≤ –æ–Ω–æ–≤–ª–µ–Ω–∞');
    
    // –°–ø–∏—Å–æ–∫ –Ω–æ–≤–∏—Ö –∑–∞–≤–¥–∞–Ω—å
    if (newTasks.size > 0) {
        const newTasksList = Array.from(newTasks.values())
            .sort((a, b) => new Date(b.addedAt) - new Date(a.addedAt))
            .map(task => {
                const crmLink = task.clientLink ? 
                    `<a href="${task.clientLink}" target="_blank" class="text-blue-600 hover:text-blue-800 text-xs underline">CRM</a>` : 
                    '';
                
                return `
                    <div class="border-l-4 border-l-green-500 p-3 bg-green-50 rounded mb-2">
                        <div class="flex justify-between items-start">
                            <div class="flex-1">
                                <div class="font-medium text-green-800">${task.taskDescription}</div>
                                <div class="text-sm text-green-600">${task.managerName}</div>
                                <div class="text-xs text-green-500">${task.clientName}</div>
                                ${crmLink ? `<div class="mt-1">${crmLink}</div>` : ''}
                                <div class="text-xs text-gray-500 mt-1">
                                    –î–æ–¥–∞–Ω–æ: ${new Date(task.addedAt).toLocaleString('uk-UA')}
                                </div>
                            </div>
                            <div class="text-xs text-green-600">
                                ${new Date(task.scheduledDate).toLocaleDateString('uk-UA')}
                            </div>
                        </div>
                    </div>
                `;
            }).join('');
        
        newTasksContainer.innerHTML = newTasksList;
        logger.info('‚úÖ –°–ø–∏—Å–æ–∫ –Ω–æ–≤–∏—Ö –∑–∞–≤–¥–∞–Ω—å –æ–Ω–æ–≤–ª–µ–Ω–æ');
    } else {
        newTasksContainer.innerHTML = `
            <div class="text-center py-8 text-gray-500">
                <div class="text-4xl mb-2">üì≠</div>
                <p>–ù–æ–≤–∏—Ö –∑–∞–≤–¥–∞–Ω—å –ø–æ–∫–∏ –Ω–µ–º–∞—î</p>
            </div>
        `;
        logger.info('üì≠ –ù–æ–≤–∏—Ö –∑–∞–≤–¥–∞–Ω—å –Ω–µ–º–∞—î');
    }
    
    // –°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å
    if (rescheduledTasks.size > 0) {
        const rescheduledTasksList = Array.from(rescheduledTasks.values())
            .sort((a, b) => new Date(b.rescheduledAt) - new Date(a.rescheduledAt))
            .map(task => {
                const crmLink = task.clientLink ? 
                    `<a href="${task.clientLink}" target="_blank" class="text-blue-600 hover:text-blue-800 text-xs underline">CRM</a>` : 
                    '';
                
                return `
                    <div class="border-l-4 border-l-yellow-500 p-3 bg-yellow-50 rounded mb-2">
                        <div class="flex justify-between items-start">
                            <div class="flex-1">
                                <div class="font-medium text-yellow-800">${task.taskDescription}</div>
                                <div class="text-sm text-yellow-600">${task.managerName}</div>
                                <div class="text-xs text-yellow-500">${task.clientName}</div>
                                ${crmLink ? `<div class="mt-1">${crmLink}</div>` : ''}
                                <div class="text-xs text-gray-500 mt-1">
                                    –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ: ${new Date(task.rescheduledAt).toLocaleString('uk-UA')}
                                </div>
                            </div>
                            <div class="text-xs text-yellow-600">
                                <div>–ë—É–ª–æ: ${new Date(task.oldDate).toLocaleDateString('uk-UA')}</div>
                                <div>–°—Ç–∞–ª–æ: ${new Date(task.newDate).toLocaleDateString('uk-UA')}</div>
                            </div>
                        </div>
                    </div>
                `;
            }).join('');
        
        rescheduledTasksContainer.innerHTML = rescheduledTasksList;
        logger.info('‚úÖ –°–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å –æ–Ω–æ–≤–ª–µ–Ω–æ');
    } else {
        rescheduledTasksContainer.innerHTML = `
            <div class="text-center py-8 text-gray-500">
                <div class="text-4xl mb-2">üì≠</div>
                <p>–ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å –ø–æ–∫–∏ –Ω–µ–º–∞—î</p>
            </div>
        `;
        logger.info('üì≠ –ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏—Ö –∑–∞–≤–¥–∞–Ω—å –Ω–µ–º–∞—î');
    }
    
    logger.info('‚úÖ –í–∫–ª–∞–¥–∫–∞ –∑–≤—ñ—Ç—ñ–≤ –≤—ñ–¥—Ä–µ–Ω–¥–µ—Ä–µ–Ω–∞');
}

/**
 * –û—á–∏—Å—Ç–∫–∞ —ñ—Å—Ç–æ—Ä—ñ—ó –∑–∞–≤–¥–∞–Ω—å
 */
function clearTaskHistory() {
    if (confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –æ—á–∏—Å—Ç–∏—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é –∑–∞–≤–¥–∞–Ω—å? –¶–µ –¥—ñ—è –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ —Å–∫–∞—Å–æ–≤–∞–Ω–∞.')) {
        logger.info('üßπ –û—á–∏—Å—Ç–∫–∞ —ñ—Å—Ç–æ—Ä—ñ—ó –∑–∞–≤–¥–∞–Ω—å...');
        
        newTasks.clear();
        rescheduledTasks.clear();
        taskHistory.clear();
        
        logger.info('‚úÖ –Ü—Å—Ç–æ—Ä—ñ—è –∑–∞–≤–¥–∞–Ω—å –æ—á–∏—â–µ–Ω–∞');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É
        updateTaskAnalytics();
        
        // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –æ—Ç—á–µ—Ç—ã
        renderReportsTab();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        showNotification('–Ü—Å—Ç–æ—Ä—ñ—è –∑–∞–≤–¥–∞–Ω—å –æ—á–∏—â–µ–Ω–∞', 'success');
    }
}

/**
 * –ï–∫—Å–ø–æ—Ä—Ç –∑–≤—ñ—Ç—É
 */
function exportReports() {
    try {
        logger.info('üìä –ï–∫—Å–ø–æ—Ä—Ç –∑–≤—ñ—Ç—É...');
        
        const reportData = {
            generatedAt: new Date().toISOString(),
            companyId: window.state?.currentCompanyId,
            statistics: {
                totalTasks: calendarData.length,
                newTasks: newTasks.size,
                rescheduledTasks: rescheduledTasks.size,
                completedTasks: calendarData.filter(task => task.status === 'completed').length
            },
            newTasks: Array.from(newTasks.values()),
            rescheduledTasks: Array.from(rescheduledTasks.values())
        };
        
        const dataStr = JSON.stringify(reportData, null, 2);
        const dataBlob = new Blob([dataStr], { type: 'application/json' });
        
        const link = document.createElement('a');
        link.href = URL.createObjectURL(dataBlob);
        link.download = `calendar-report-${new Date().toISOString().split('T')[0]}.json`;
        link.click();
        
        logger.info('‚úÖ –ó–≤—ñ—Ç –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ');
        showNotification('–ó–≤—ñ—Ç –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ', 'success');
        
    } catch (error) {
        logger.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É –∑–≤—ñ—Ç—É:', error);
        showNotification('–ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É –∑–≤—ñ—Ç—É', 'error');
    }
}

/**
 * –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–Ω—è
 */
function showNotification(message, type = 'info') {
    logger.info('üì¢ –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–Ω—è:', message, type);
    
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 p-4 rounded-lg shadow-lg z-50 ${
        type === 'info' ? 'bg-blue-500 text-white' :
        type === 'success' ? 'bg-green-500 text-white' :
        'bg-red-500 text-white'
    }`;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.remove();
    }, 3000);
}

/**
 * –ü–æ–∫–∞–∑ –∞–Ω—ñ–º–∞—Ü—ñ—ó –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
 */
function showLoadingAnimation() {
    const container = document.getElementById('calendar-container');
    if (container) {
        logger.info('üé¨ –ü–æ–∫–∞–∑—É—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è');
        container.innerHTML = `
            <div class="text-center py-12">
                <div class="inline-flex items-center space-x-2">
                    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
                    <div class="animate-pulse text-gray-600">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è...</div>
                </div>
                <div class="mt-4 text-sm text-gray-500">
                    <div class="animate-pulse">–û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ API...</div>
                </div>
            </div>
        `;
    } else {
        logger.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞–ª–µ–Ω–¥–∞—Ä—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è');
    }
}

/**
 * –ü—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
 */
function hideLoadingAnimation() {
    const container = document.getElementById('calendar-container');
    if (container) {
        logger.info('üé¨ –ü—Ä–∏—Ö–æ–≤—É—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è');
        // –ê–Ω–∏–º–∞—Ü–∏—è —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
    } else {
        logger.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞–ª–µ–Ω–¥–∞—Ä—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó');
    }
}

/**
 * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ—ó –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ –ø—Ä–æ–≥—Ä–µ—Å–æ–º
 */
function updateLoadingProgress(step, total = 4, message = '') {
    const container = document.getElementById('calendar-container');
    if (container) {
        const progress = Math.round((step / total) * 100);
        const steps = [
            '–û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ API...',
            '–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ Firebase...',
            '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ Firebase...',
            '–†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–∞–ª–µ–Ω–¥–∞—Ä—è...'
        ];
        
        logger.info(`üìä –ü—Ä–æ–≥—Ä–µ—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è: ${progress}% - ${message || steps[step - 1] || '–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è...'}`);
        
        container.innerHTML = `
            <div class="text-center py-12">
                <div class="inline-flex items-center space-x-2">
                    <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
                    <div class="animate-pulse text-gray-600">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è...</div>
                </div>
                <div class="mt-4 text-sm text-gray-500">
                    <div class="animate-pulse">${message || steps[step - 1] || '–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è...'}</div>
                </div>
                <div class="mt-2 w-64 bg-gray-200 rounded-full h-2 mx-auto">
                    <div class="bg-blue-600 h-2 rounded-full transition-all duration-300" style="width: ${progress}%"></div>
                </div>
                <div class="mt-1 text-xs text-gray-400">${progress}%</div>
            </div>
        `;
    } else {
        logger.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞–ª–µ–Ω–¥–∞—Ä—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å—É');
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ HTML
window.showDayDetails = showDayDetails;
window.renderReportsTab = renderReportsTab;
window.clearTaskHistory = clearTaskHistory;
window.exportReports = exportReports;

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
 */
function ensureStatisticsElements() {
    const analyticsContainer = document.getElementById('calendarAnalytics');
    if (!analyticsContainer) {
        logger.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä calendarAnalytics –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        return false;
    }
    
    const elements = ['total-tasks', 'active-managers', 'total-clients', 'new-tasks', 'rescheduled-tasks'];
    let allElementsExist = true;
    
    elements.forEach(id => {
        let element = analyticsContainer.querySelector(`#${id}`);
        if (!element) {
            logger.info(`üîß –°—Ç–≤–æ—Ä—é—î–º–æ –µ–ª–µ–º–µ–Ω—Ç ${id}`);
            // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            const parent = analyticsContainer.querySelector('.grid');
            if (parent) {
                const newElement = document.createElement('div');
                newElement.className = 'bg-gray-100 p-3 rounded-lg text-center';
                newElement.innerHTML = `
                    <div class="text-2xl font-bold text-gray-600" id="${id}">0</div>
                    <div class="text-sm text-gray-600">${getElementLabel(id)}</div>
                `;
                parent.appendChild(newElement);
                element = newElement.querySelector(`#${id}`);
                logger.info(`‚úÖ –ï–ª–µ–º–µ–Ω—Ç ${id} —Å—Ç–≤–æ—Ä–µ–Ω–æ`);
            } else {
                allElementsExist = false;
            }
        }
    });
    
    return allElementsExist;
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 */
function getElementLabel(id) {
    const labels = {
        'total-tasks': '–í—Å—å–æ–≥–æ –∑–∞–≤–¥–∞–Ω—å',
        'active-managers': '–ê–∫—Ç–∏–≤–Ω–∏—Ö –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤',
        'total-clients': '–ö–ª—ñ—î–Ω—Ç—ñ–≤',
        'new-tasks': '–ù–æ–≤–∏—Ö –∑–∞–≤–¥–∞–Ω—å',
        'rescheduled-tasks': '–ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–∏—Ö'
    };
    return labels[id] || '–ù–µ–≤—ñ–¥–æ–º–æ';
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ —Å —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–æ–π
 */
function checkUserPermissions() {
    try {
        // –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
        const hasCalendarAccess = window.hasPermission?.('managerCalendar_view_page') ?? true;
        const canEditTasks = window.hasPermission?.('managerCalendar_edit_tasks') ?? true;
        const canCreateTasks = window.hasPermission?.('managerCalendar_create_tasks') ?? true;
        
        logger.verbose('üîê –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø—É –¥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', {
            hasCalendarAccess,
            canEditTasks, 
            canCreateTasks
        });
        
        return {
            hasCalendarAccess,
            canEditTasks,
            canCreateTasks
        };
        
    } catch (error) {
        logger.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É:', error);
        // Fallback - –¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø—Ä–∞–≤–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        return {
            hasCalendarAccess: true,
            canEditTasks: false,
            canCreateTasks: false
        };
    }
}

/**
 * –û—á–∏—Å—Ç–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª–µ–π —Å–æ–±—ã—Ç–∏–π –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è
 */
const calendarEventListeners = new Map();

function addCalendarEventListener(element, event, handler, options) {
    if (!element) return;
    
    const key = `${element.id || 'unknown'}-${event}`;
    
    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–ª—É—à–∞—Ç–µ–ª—å –µ—Å–ª–∏ –µ—Å—Ç—å
    if (calendarEventListeners.has(key)) {
        const oldHandler = calendarEventListeners.get(key);
        element.removeEventListener(event, oldHandler, options);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Å–ª—É—à–∞—Ç–µ–ª—å
    element.addEventListener(event, handler, options);
    calendarEventListeners.set(key, handler);
    
    logger.verbose(`üéß –î–æ–¥–∞–Ω–æ —Å–ª—É—Ö–∞—á –ø–æ–¥—ñ—ó: ${key}`);
}

function removeAllCalendarEventListeners() {
    calendarEventListeners.forEach((handler, key) => {
        const [elementId, event] = key.split('-');
        const element = document.getElementById(elementId);
        if (element) {
            element.removeEventListener(event, handler);
            logger.verbose(`üóëÔ∏è –í–∏–¥–∞–ª–µ–Ω–æ —Å–ª—É—Ö–∞—á –ø–æ–¥—ñ—ó: ${key}`);
        }
    });
    calendarEventListeners.clear();
    logger.info('üßπ –û—á–∏—â–µ–Ω–æ –≤—Å—ñ —Å–ª—É—Ö–∞—á—ñ –ø–æ–¥—ñ–π –∫–∞–ª–µ–Ω–¥–∞—Ä—è');
}

/**
 * –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
 */
function updateAutoUpdateStatus(message, className = 'text-gray-600') {
    const statusElement = document.getElementById('autoUpdateStatus');
    if (statusElement) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º DocumentFragment –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ DOM –æ–ø–µ—Ä–∞—Ü–∏–π
        const fragment = document.createDocumentFragment();
        const textNode = document.createTextNode(message);
        
        statusElement.innerHTML = '';
        statusElement.className = `text-sm ${className}`;
        statusElement.appendChild(textNode);
        
        logger.verbose('üìä –°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–æ');
    }
}

/**
 * –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–∞–ª–µ–Ω–¥–∞—Ä—è —Å –º–µ–º–æ–∏–∑–∞—Ü–∏–µ–π
 */
const calendarRenderCache = new Map();

function renderOptimizedCalendar() {
    try {
        const permissions = checkUserPermissions();
        if (!permissions.hasCalendarAccess) {
            renderAccessDeniedMessage();
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º –∫–ª—é—á –∫—ç—à–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö
        const cacheKey = `calendar_${currentMonth}_${currentYear}_${selectedDepartment}_${selectedManager}`;
        const dataHash = calculateDataHash(calendarData);
        const fullCacheKey = `${cacheKey}_${dataHash}`;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à
        if (calendarRenderCache.has(fullCacheKey)) {
            logger.verbose('üìã –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–µ—à–æ–≤–∞–Ω–∏–π –∫–∞–ª–µ–Ω–¥–∞—Ä');
            const cachedContent = calendarRenderCache.get(fullCacheKey);
            updateCalendarContainer(cachedContent);
            return;
        }
        
        // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–π –∫—ç—à (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ 3 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö)
        if (calendarRenderCache.size > 3) {
            const oldestKey = calendarRenderCache.keys().next().value;
            calendarRenderCache.delete(oldestKey);
        }
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
        const calendarContent = generateCalendarContent(permissions);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫—ç—à
        calendarRenderCache.set(fullCacheKey, calendarContent);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º DOM
        updateCalendarContainer(calendarContent);
        
        logger.info('üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä –≤—ñ–¥—Ä–µ–Ω–¥–µ—Ä–µ–Ω–æ –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ');
        
    } catch (error) {
        logger.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', error);
        showCalendarError('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è');
    }
}

function updateCalendarContainer(content) {
    const container = document.getElementById('calendarContainer');
    if (container) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º DocumentFragment –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
        const fragment = document.createDocumentFragment();
        const tempDiv = document.createElement('div');
        tempDiv.innerHTML = content;
        
        while (tempDiv.firstChild) {
            fragment.appendChild(tempDiv.firstChild);
        }
        
        container.innerHTML = '';
        container.appendChild(fragment);
    }
}

function generateCalendarContent(permissions) {
    // –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –æ–¥–∏–Ω —Ä–∞–∑
    const filteredData = filterCalendarData();
    
    return `
        <div class="calendar-wrapper">
            ${generateCalendarHeader()}
            ${generateCalendarFilters()}
            ${permissions.canCreateTasks ? generateCreateTaskButton() : ''}
            ${generateCalendarTable(filteredData)}
            ${generateCalendarFooter()}
        </div>
    `;
}

function generateCalendarHeader() {
    return `
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-2xl font-bold text-white">–ö–∞–ª–µ–Ω–¥–∞—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞</h2>
            <div class="flex items-center gap-4">
                <div id="autoUpdateStatus" class="text-sm text-gray-600">–°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è</div>
                <button onclick="toggleAutoUpdate()" 
                        class="px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm">
                    –ö–µ—Ä—É–≤–∞–Ω–Ω—è –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º
                </button>
            </div>
        </div>
    `;
}

function renderAccessDeniedMessage() {
    const container = document.getElementById('calendarContainer');
    if (container) {
        container.innerHTML = `
            <div class="bg-red-900/20 border border-red-500 rounded-xl p-8 text-center">
                <h2 class="text-2xl font-bold text-white mb-4">–î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ</h2>
                <p class="text-red-200">–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –∫–∞–ª–µ–Ω–¥–∞—Ä—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞.</p>
                <p class="text-red-300 text-sm mt-2">–ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –Ω–∞–¥–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø—É.</p>
            </div>
        `;
    }
}

// ... existing code ...

/**
 * –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
 */
window.initManagerCalendar = async function(container) {
    logger.info('üìÖ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞...');
    
    try {
        if (!container) {
            logger.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞–ª–µ–Ω–¥–∞—Ä—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
            return;
        }
        
        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–ª—É—à–∞—Ç–µ–ª–∏
        removeAllCalendarEventListeners();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
        const permissions = checkUserPermissions();
        if (!permissions.hasCalendarAccess) {
            container.innerHTML = `
                <div class="bg-red-900/20 border border-red-500 rounded-xl p-8 text-center">
                    <h2 class="text-2xl font-bold text-white mb-4">–î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ</h2>
                    <p class="text-red-200">–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –∫–∞–ª–µ–Ω–¥–∞—Ä—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞.</p>
                </div>
            `;
            return;
        }
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        container.innerHTML = `
            <div id="calendarContainer" class="bg-gray-800 rounded-xl shadow-lg p-6">
                <div class="text-center p-8">
                    <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600 mb-4"></div>
                    <p class="text-gray-200">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞...</p>
                </div>
            </div>
        `;
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        await loadCalendarData();
        
        // –†–µ–Ω–¥–µ—Ä–∏–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
        renderOptimizedCalendar();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        if (isAutoUpdateEnabled) {
            startAutoUpdate();
        }
        
        logger.info('‚úÖ –ö–∞–ª–µ–Ω–¥–∞—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
        
    } catch (error) {
        logger.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∫–∞–ª–µ–Ω–¥–∞—Ä—è:', error);
        if (container) {
            container.innerHTML = `
                <div class="bg-red-900/20 border border-red-500 rounded-xl p-8 text-center">
                    <h2 class="text-2xl font-bold text-white mb-4">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</h2>
                    <p class="text-red-200">–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞.</p>
                    <button onclick="location.reload()" class="mt-4 px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700">
                        –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑
                    </button>
                </div>
            `;
        }
    }
};

/**
 * –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—Ä–∏ –≤—ã–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è
 */
window.cleanupManagerCalendar = function() {
    logger.info('üßπ –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å—ñ–≤ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞...');
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    stopAutoUpdate();
    
    // –û—á–∏—â–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ —Å–æ–±—ã—Ç–∏–π
    removeAllCalendarEventListeners();
    
    // –û—á–∏—â–∞–µ–º –∫—ç—à
    calendarRenderCache.clear();
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    calendarData = [];
    managersData = [];
    departmentsData = [];
    selectedDepartment = '';
    selectedManager = '';
    
    logger.info('‚úÖ –†–µ—Å—É—Ä—Å–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä—è –æ—á–∏—â–µ–Ω–æ');
};

/**
 * –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∫–∞–ª–µ–Ω–¥–∞—Ä—è
 */
function filterCalendarData() {
    if (!calendarData || calendarData.length === 0) {
        return [];
    }
    
    return calendarData.filter(task => {
        // –§–∏–ª—å—Ç—Ä –ø–æ –æ—Ç–¥–µ–ª—É
        if (selectedDepartment) {
            const taskDepartment = findDepartmentIdByName(task.–í—ñ–¥–¥—ñ–ª || '');
            if (taskDepartment !== selectedDepartment) {
                return false;
            }
        }
        
        // –§–∏–ª—å—Ç—Ä –ø–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É
        if (selectedManager) {
            const taskManager = findManagerIdByName(task.–ú–µ–Ω–µ–¥–∂–µ—Ä || '');
            if (taskManager !== selectedManager) {
                return false;
            }
        }
        
        // –§–∏–ª—å—Ç—Ä –ø–æ –º–µ—Å—è—Ü—É –∏ –≥–æ–¥—É
        const taskDate = new Date(task.–î–∞—Ç–∞);
        if (taskDate.getMonth() !== currentMonth || taskDate.getFullYear() !== currentYear) {
            return false;
        }
        
        return true;
    });
}

/**
 * –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
 */
function generateCalendarTable(filteredData) {
    if (!filteredData || filteredData.length === 0) {
        return `
            <div class="text-center py-8">
                <div class="text-6xl mb-4">üìÖ</div>
                <h3 class="text-xl font-semibold text-white mb-2">–ù–µ–º–∞—î –∑–∞–≤–¥–∞–Ω—å</h3>
                <p class="text-gray-400">–£ –≤–∏–±—Ä–∞–Ω–æ–º—É –ø–µ—Ä—ñ–æ–¥—ñ —Ç–∞ —Ñ—ñ–ª—å—Ç—Ä–∞—Ö –Ω–µ–º–∞—î –∑–∞–≤–¥–∞–Ω—å –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è.</p>
            </div>
        `;
    }
    
    // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏ –ø–æ –¥–Ω—è–º
    const tasksByDate = {};
    filteredData.forEach(task => {
        const date = new Date(task.–î–∞—Ç–∞).toDateString();
        if (!tasksByDate[date]) {
            tasksByDate[date] = [];
        }
        tasksByDate[date].push(task);
    });
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
    const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();
    let tableHTML = `
        <div class="calendar-table-wrapper">
            <div class="grid grid-cols-7 gap-2 mb-4">
                ${['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–ù–¥'].map(day => 
                    `<div class="text-center font-semibold text-gray-300 p-2">${day}</div>`
                ).join('')}
            </div>
            <div class="grid grid-cols-7 gap-2">
    `;
    
    for (let day = 1; day <= daysInMonth; day++) {
        const date = new Date(currentYear, currentMonth, day);
        const dateString = date.toDateString();
        const dayTasks = tasksByDate[dateString] || [];
        
        tableHTML += `
            <div class="calendar-day bg-gray-700 rounded p-2 min-h-[100px] ${dayTasks.length > 0 ? 'border-l-4 border-blue-500' : ''}">
                <div class="text-sm font-semibold text-white mb-1">${day}</div>
                ${dayTasks.slice(0, 3).map(task => `
                    <div class="text-xs bg-blue-600 text-white rounded px-2 py-1 mb-1 truncate" title="${task.–ù–∞–∑–≤–∞}">
                        ${task.–ù–∞–∑–≤–∞ || '–ë–µ–∑ –Ω–∞–∑–≤–∏'}
                    </div>
                `).join('')}
                ${dayTasks.length > 3 ? `<div class="text-xs text-gray-400">+${dayTasks.length - 3} —â–µ</div>` : ''}
            </div>
        `;
    }
    
    tableHTML += `
            </div>
        </div>
    `;
    
    return tableHTML;
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
 */
function generateCreateTaskButton() {
    return `
        <div class="mb-4">
            <button onclick="openCreateTaskModal()" 
                    class="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 flex items-center gap-2">
                <span>‚ûï</span>
                <span>–°—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è</span>
            </button>
        </div>
    `;
}

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ—É—Ç–µ—Ä–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
 */
function generateCalendarFooter() {
    return `
        <div class="mt-6 text-center text-sm text-gray-400">
            <p>–û—Å—Ç–∞–Ω–Ω—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: ${new Date().toLocaleString('uk-UA')}</p>
        </div>
    `;
}

// ... existing code ...