// planFact.js - –ì–æ–ª–æ–≤–Ω–∏–π –º–æ–¥—É–ª—å –ü–ª–∞–Ω-–§–∞–∫—Ç –∑ —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—î—é –Ω–æ–≤–∏—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤

import * as firebase from './firebase.js';
import { renderDashboardTab } from './planFact/dashboard.js';
import { renderConstructorTab } from './planFact/constructor.js';
import { renderFocusManagerTab } from './planFact/focusManager.js';
import { renderMassAssignmentTab } from './planFact/massAssignment.js';
import { renderGoalsTab } from './planFact/goals.js';

// –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –Ω–æ–≤—ñ –º–æ–¥—É–ª—ñ
import { 
    getState, 
    updateState, 
    subscribe, 
    setCurrentTab, 
    setLoading,
    updateApiCache,
    clearApiCache,
    canPerformOperation,
    lockOperation,
    unlockOperation
} from './planFact/state.js';

import { 
    startBackgroundService, 
    stopBackgroundService, 
    getServiceStatus,
    setupStateSubscription 
} from './planFact/backgroundService.js';

// === –ì–õ–û–ë–ê–õ–¨–ù–´–ï –ü–ï–†–ï–ú–ï–ù–ù–´–ï ===
// –£–¥–∞–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ - —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ–º state.js
// let planFactData = { ... };
// window.planFactData = planFactData;

let planFactInited = false;

// === –ì–õ–û–ë–ê–õ–¨–ù–Ü –§–£–ù–ö–¶–Ü–á ===
window.closeModal = function(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
        modal.remove();
    }
};

/**
 * –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (toast)
 */
function showToast(message, type = 'info') {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –Ω–µ –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–π —Ä–µ–∫—É—Ä—Å–∏–∏
    if (showToast._isProcessing) {
        console.warn('‚ö†Ô∏è –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∞ —Ä–µ–∫—É—Ä—Å–∏—è –≤ showToast');
        return;
    }
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    showToast._isProcessing = true;
    
    try {
        // –ï—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è toast –∏–∑ –¥—Ä—É–≥–æ–≥–æ –º–æ–¥—É–ª—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ—ë
        if (typeof window.showGlobalToast === 'function') {
            window.showGlobalToast(message, type);
            return;
        }
        
        // –ò–Ω–∞—á–µ —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const toast = document.createElement('div');
        toast.className = `fixed top-4 right-4 z-[1000] px-4 py-3 rounded-lg shadow-lg text-white transition-all duration-300 ${
            type === 'success' ? 'bg-green-600' :
            type === 'error' ? 'bg-red-600' :
            type === 'warning' ? 'bg-yellow-600' :
            'bg-blue-600'
        }`;
        toast.textContent = message;
        toast.style.transform = 'translateX(100%)';
        
        document.body.appendChild(toast);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            toast.style.transform = 'translateX(0)';
        }, 10);
        
        // –£–¥–∞–ª—è–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            toast.style.transform = 'translateX(100%)';
            setTimeout(() => {
                if (toast.parentNode) {
                    toast.parentNode.removeChild(toast);
                }
            }, 300);
        }, 3000);
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è toast:', error);
    } finally {
        // –°–Ω–∏–º–∞–µ–º —Ñ–ª–∞–≥ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        showToast._isProcessing = false;
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é showToast –ë–ï–ó –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ
if (!window.showToast) {
    window.showToast = showToast;
}

/**
 * –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
 */
window.closeModal = function(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–∫—Ä—ã—Ç–∏—è
        modal.style.opacity = '0';
        setTimeout(() => {
            modal.remove();
        }, 200);
    }
};

console.log('üìã –ú–æ–¥—É–ª—å –ü–ª–∞–Ω-–§–∞–∫—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');

// === –ì–õ–û–ë–ê–õ–¨–ù–ê –§–£–ù–ö–¶–Ü–Ø –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø –î–ï–ú–û –î–ê–ù–ò–• ===
window.loadDemoData = function() {
    if (confirm('–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–µ–º–æ –¥–∞–Ω—ñ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –º–æ–¥—É–ª—è –ü–ª–∞–Ω-–§–∞–∫—Ç? –¶—ñ –¥–∞–Ω—ñ –±—É–¥—É—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—ñ —Ç—ñ–ª—å–∫–∏ –¥–ª—è –æ–∑–Ω–∞–π–æ–º–ª–µ–Ω–Ω—è –∑ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª–æ–º.')) {
        console.log('üß™ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–µ–º–æ –¥–∞–Ω–∏—Ö...');
        
        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–µ–º–æ –¥–∞–Ω—ñ
        const demoData = {
            planTemplates: getTestPlanTemplates(),
            focusTypes: getTestFocusTypes(),
            goals: getTestGoals(),
            departments: [
                { id: 'dept-1', name: '–ö–ê–í\'–Ø–†–ù–Ø' },
                { id: 'dept-2', name: '–ó–ê–ö–õ–ê–î–ò' },
                { id: 'dept-3', name: '–†–û–ó–î–†–Ü–ë–ù–Ü –ü–†–û–î–ê–ñ–Ü' },
                { id: 'dept-4', name: '–ö–û–†–ü–û–†–ê–¢–ò–í–ù–Ü –ö–õ–Ü–Ñ–ù–¢–ò' }
            ],
            employees: [
                { id: 'emp-1', name: '–ê–Ω–≥–µ–ª—ñ–Ω–∞ –ú—É–¥—Ä–∏—Ü—å–∫–∞', departmentId: 'dept-1' },
                { id: 'emp-2', name: '–û–ª–µ–∫—Å—ñ–π –ü–µ—Ç—Ä–µ–Ω–∫–æ', departmentId: 'dept-2' },
                { id: 'emp-3', name: '–ú–∞—Ä—ñ—è –ö–æ–≤–∞–ª–µ–Ω–∫–æ', departmentId: 'dept-3' },
                { id: 'emp-4', name: '–î–º–∏—Ç—Ä–æ –°–∏–¥–æ—Ä–µ–Ω–∫–æ', departmentId: 'dept-4' }
            ]
        };
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω
        updateState({
            planFactData: {
                ...demoData
            }
        });
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        const state = getState();
        const currentTab = state.currentTab || 'dashboard';
        
        if (currentTab === 'constructor') {
            renderConstructorTab();
        } else if (currentTab === 'focus-manager') {
            renderFocusManagerTab();
        } else if (currentTab === 'goals') {
            renderGoalsTab();
        } else if (currentTab === 'dashboard') {
            renderDashboardTab();
        }
        
        showToast('üß™ –î–µ–º–æ –¥–∞–Ω—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!', 'success');
        console.log('‚úÖ –î–µ–º–æ –¥–∞–Ω—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
    }
};

// === –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò ===
/**
 * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –ü–ª–∞–Ω-–§–∞–∫—Ç –∑ –Ω–æ–≤–æ—é –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–æ—é
 */
export async function initPlanFactModule(container) {
    console.log('üöÄ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è –ü–ª–∞–Ω-–§–∞–∫—Ç –∑ –Ω–æ–≤–æ—é –∞—Ä—Ö—ñ—Ç–µ–∫—Ç—É—Ä–æ—é...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥—É–ª—å –µ—â–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
    if (planFactInited) {
        console.log('‚ö†Ô∏è –ú–æ–¥—É–ª—å –ü–ª–∞–Ω-–§–∞–∫—Ç –≤–∂–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ –ø–æ–≤—Ç–æ—Ä–Ω—É —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é');
        return;
    }
    
    // –ü–æ–∫–∞–∑—É—î–º–æ –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ä–∞–∑—É
    showLoadingAnimation(container);
    
    try {
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
        setLoading(true);
        
        // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ –∑ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
        await loadInitialDataWithProgress(container);
        
        // –†–µ–Ω–¥–µ—Ä–∏–º–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        renderMainInterface(container);
        
        // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π
        setupEventHandlers();
        
        // –ó–∞–ø—É—Å–∫–∞—î–º–æ —Ñ–æ–Ω–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
        startBackgroundService();
        
        // –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ –ø—ñ–¥–ø–∏—Å–∫—É –Ω–∞ –∑–º—ñ–Ω–∏ —Å—Ç–∞–Ω—É
        setupStateSubscription();
        
        // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ—á–∞—Ç–∫–æ–≤—É –≤–∫–ª–∞–¥–∫—É
        setCurrentTab('dashboard');
        
        // –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—É –≤–∫–ª–∞–¥–∫—É (–¥–∞—à–±–æ—Ä–¥) –ø—Ä–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
        setTimeout(async () => {
            try {
                console.log('üé® –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—É –≤–∫–ª–∞–¥–∫—É (–¥–∞—à–±–æ—Ä–¥)...');
                await switchTab('dashboard');
            } catch (error) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É –ø–µ—Ä—à–æ—ó –≤–∫–ª–∞–¥–∫–∏:', error);
            }
        }, 100);
        
        // –ù–ï –∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–∞—à–±–æ—Ä–¥–∞ –∑–¥–µ—Å—å - –æ–Ω–∏ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—Ö–æ–¥–µ
        // await loadDashboardData(); // –£–ë–ò–†–ê–ï–ú –≠–¢–£ –°–¢–†–û–ö–£
        
        setLoading(false);
        
        // –û—Ç–º–µ—á–∞–µ–º –º–æ–¥—É–ª—å –∫–∞–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π
        planFactInited = true;
        
        console.log('‚úÖ –ú–æ–¥—É–ª—å –ü–ª–∞–Ω-–§–∞–∫—Ç —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ (–±–µ–∑ –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö)');
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
        setTimeout(async () => {
            try {
                console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–µ—Ä—à–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö...');
                const { forceUpdate } = await import('./planFact/backgroundService.js');
                await forceUpdate();
                console.log('‚úÖ –ü–µ—Ä—à–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
            } catch (error) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä—à–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö:', error);
            }
        }, 2000); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–æ 2 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø–æ–ª–Ω–æ–π –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ HTML —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –º–æ–¥—É–ª—è –ü–ª–∞–Ω-–§–∞–∫—Ç:', error);
        setLoading(false);
        showErrorState(container, error.message);
        throw error;
    }
}

/**
 * –ü–æ–∫–∞–∑ –∞–Ω–∏–º–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
 */
function showLoadingAnimation(container) {
    container.innerHTML = `
        <div class="bg-gray-900 min-h-screen flex items-center justify-center">
            <div class="bg-gray-800 rounded-xl shadow-2xl p-8 max-w-md w-full mx-4">
                <!-- –õ–æ–≥–æ—Ç–∏–ø –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ -->
                <div class="text-center mb-8">
                    <div class="inline-block animate-spin rounded-full h-16 w-16 border-4 border-blue-600 border-t-transparent mb-4"></div>
                    <h2 class="text-2xl font-bold text-white mb-2">üìä –ü–ª–∞–Ω-–§–∞–∫—Ç</h2>
                    <p class="text-gray-400">–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—è...</p>
                </div>
                
                <!-- –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä -->
                <div class="mb-6">
                    <div class="flex justify-between text-sm text-gray-400 mb-2">
                        <span id="loading-step">–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞...</span>
                        <span id="loading-progress">0%</span>
                    </div>
                    <div class="bg-gray-700 rounded-full h-3 overflow-hidden">
                        <div id="loading-bar" class="bg-gradient-to-r from-blue-500 to-blue-600 h-3 rounded-full transition-all duration-500 ease-out" style="width: 0%"></div>
                    </div>
                </div>
                
                <!-- –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è -->
                <div class="text-center">
                    <p id="loading-details" class="text-sm text-gray-400">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó...</p>
                </div>
                
                <!-- –ê–Ω–∏–º–∞—Ü–∏—è —Ç–æ—á–µ–∫ -->
                <div class="flex justify-center mt-4">
                    <div class="flex space-x-1">
                        <div class="w-2 h-2 bg-blue-500 rounded-full animate-pulse"></div>
                        <div class="w-2 h-2 bg-blue-500 rounded-full animate-pulse" style="animation-delay: 0.2s"></div>
                        <div class="w-2 h-2 bg-blue-500 rounded-full animate-pulse" style="animation-delay: 0.4s"></div>
                    </div>
                </div>
            </div>
        </div>
    `;
}

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏
 */
function updateLoadingProgress(step, progress, details) {
    const stepElement = document.getElementById('loading-step');
    const progressElement = document.getElementById('loading-progress');
    const barElement = document.getElementById('loading-bar');
    const detailsElement = document.getElementById('loading-details');
    
    if (stepElement) stepElement.textContent = step;
    if (progressElement) progressElement.textContent = `${progress}%`;
    if (barElement) barElement.style.width = `${progress}%`;
    if (detailsElement) detailsElement.textContent = details;
}

/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö –∑ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º
 */
async function loadInitialDataWithProgress(container) {
    console.log('üìä –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö –∑ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º...');
    
    const steps = [
        { name: '–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–∏', progress: 10, details: '–Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –º–æ–¥—É–ª—ñ–≤...' },
        { name: '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —à–∞–±–ª–æ–Ω—ñ–≤', progress: 25, details: '–û—Ç—Ä–∏–º–∞–Ω–Ω—è —à–∞–±–ª–æ–Ω—ñ–≤ –ø–ª–∞–Ω—ñ–≤...' },
        { name: '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ñ–æ–∫—É—Å—ñ–≤', progress: 40, details: '–û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–∏–ø—ñ–≤ —Ñ–æ–∫—É—Å—ñ–≤...' },
        { name: '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ü—ñ–ª–µ–π', progress: 55, details: '–û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–∏–∂–Ω–µ–≤–∏—Ö —Ü—ñ–ª–µ–π...' },
        { name: '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–ª–∞–Ω—ñ–≤', progress: 70, details: '–û—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö –ø–ª–∞–Ω—ñ–≤...' },
        { name: '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤', progress: 85, details: '–û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤...' },
        { name: '–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è', progress: 100, details: '–§—ñ–Ω–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö...' }
    ];
    
    try {
        // –®–∞–≥ 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã
        updateLoadingProgress(steps[0].name, steps[0].progress, steps[0].details);
        await new Promise(resolve => setTimeout(resolve, 300));
        
        // –®–∞–≥ 2: –ó–∞–≥—Ä—É–∑–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤
        updateLoadingProgress(steps[1].name, steps[1].progress, steps[1].details);
        const planTemplates = await loadPlanTemplatesFromFirebase();
        await new Promise(resolve => setTimeout(resolve, 200));
        
        // –®–∞–≥ 3: –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ–∫—É—Å–æ–≤
        updateLoadingProgress(steps[2].name, steps[2].progress, steps[2].details);
        const focusTypes = await loadFocusTypes();
        await new Promise(resolve => setTimeout(resolve, 200));
        
        // –®–∞–≥ 4: –ó–∞–≥—Ä—É–∑–∫–∞ —Ü–µ–ª–µ–π
        updateLoadingProgress(steps[3].name, steps[3].progress, steps[3].details);
        const goals = await loadGoalsFromFirebase();
        await new Promise(resolve => setTimeout(resolve, 200));
        
        // –®–∞–≥ 5: –ó–∞–≥—Ä—É–∑–∫–∞ –ø–ª–∞–Ω–æ–≤
        updateLoadingProgress(steps[4].name, steps[4].progress, steps[4].details);
        const { plans, massAssignmentHistory } = await loadPlansFromStorage();
        await new Promise(resolve => setTimeout(resolve, 200));
        
        // –®–∞–≥ 6: –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        updateLoadingProgress(steps[5].name, steps[5].progress, steps[5].details);
        const employees = await loadEmployees();
        const departments = await loadDepartments();
        await new Promise(resolve => setTimeout(resolve, 200));
        
        // –®–∞–≥ 7: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
        updateLoadingProgress(steps[6].name, steps[6].progress, steps[6].details);
        await new Promise(resolve => setTimeout(resolve, 300));
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞–Ω –∑ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏
        updateState({
            planFactData: {
                planTemplates,
                focusTypes,
                goals,
                plans,
                employees,
                departments,
                massAssignmentHistory
            }
        });
        
        console.log('‚úÖ –ü–æ—á–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º');
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ—á–∞—Ç–∫–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö:', error);
        throw error;
    }
}

/**
 * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≥–æ–ª–æ–≤–Ω–æ–≥–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É
 */
function renderMainInterface(container) {
    console.log('üé® –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≥–æ–ª–æ–≤–Ω–æ–≥–æ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É...');
    
    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –Ω–æ–≤–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    const tempContainer = document.createElement('div');
    tempContainer.innerHTML = `
        <div class="bg-gray-900 min-h-screen">
            <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ -->
            <div class="bg-gray-800 border-b border-gray-700">
                <div class="px-6 py-4">
                    <div class="flex justify-between items-center">
                        <h1 class="text-2xl font-bold text-white">üìä –ü–ª–∞–Ω-–§–∞–∫—Ç</h1>
                        <div class="flex items-center space-x-4">
                            <div class="text-sm text-gray-400">
                                <span id="last-update-info">–û—Å—Ç–∞–Ω–Ω—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: -</span>
                            </div>
                            <button id="background-service-toggle" 
                                    class="px-3 py-1 bg-green-600 text-white rounded text-sm hover:bg-red-600">
                                üîÑ –ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- –ù–∞–≤—ñ–≥–∞—Ü—ñ—è -->
            <div class="bg-gray-800 border-b border-gray-700">
                <div class="px-6 py-2">
                    <nav class="flex space-x-8">
                        <button data-tab="dashboard" class="tab-button active px-3 py-2 text-sm font-medium text-white border-b-2 border-blue-500">
                            üìä –î–∞—à–±–æ—Ä–¥
                        </button>
                        <button data-tab="constructor" class="tab-button px-3 py-2 text-sm font-medium text-gray-300 hover:text-white border-b-2 border-transparent">
                            üèóÔ∏è –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–ª–∞–Ω—ñ–≤
                        </button>
                        <button data-tab="focus-manager" class="tab-button px-3 py-2 text-sm font-medium text-gray-300 hover:text-white border-b-2 border-transparent">
                            üéØ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ñ–æ–∫—É—Å–∞–º–∏
                        </button>
                        <button data-tab="mass-assignment" class="tab-button px-3 py-2 text-sm font-medium text-gray-300 hover:text-white border-b-2 border-transparent">
                            üë• –ú–∞—Å–æ–≤–µ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è
                        </button>
                        <button data-tab="goals" class="tab-button px-3 py-2 text-sm font-medium text-gray-300 hover:text-white border-b-2 border-transparent">
                            üéØ –¶—ñ–ª—ñ
                        </button>
                    </nav>
                </div>
            </div>
            
            <!-- –ö–æ–Ω—Ç–µ–Ω—Ç —Å –ø–µ—Ä—Å–∏—Å—Ç–µ–Ω—Ç–Ω—ã–º–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏ -->
            <div id="plan-fact-content" class="p-6">
                <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –¥–∞—à–±–æ—Ä–¥–∞ -->
                <div id="dashboard-content-wrapper" class="tab-content" style="display: none;">
                    <!-- –ö–æ–Ω—Ç–µ–Ω—Ç –¥–∞—à–±–æ—Ä–¥–∞ –±—É–¥–µ—Ç –∑–¥–µ—Å—å -->
                </div>
                
                <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ -->
                <div id="constructor-content-wrapper" class="tab-content" style="display: none;">
                    <!-- –ö–æ–Ω—Ç–µ–Ω—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ –±—É–¥–µ—Ç –∑–¥–µ—Å—å -->
                </div>
                
                <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ–∫—É—Å–∞–º–∏ -->
                <div id="focus-manager-content-wrapper" class="tab-content" style="display: none;">
                    <!-- –ö–æ–Ω—Ç–µ–Ω—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ–∫—É—Å–∞–º–∏ –±—É–¥–µ—Ç –∑–¥–µ—Å—å -->
                </div>
                
                <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è -->
                <div id="mass-assignment-content-wrapper" class="tab-content" style="display: none;">
                    <!-- –ö–æ–Ω—Ç–µ–Ω—Ç –º–∞—Å—Å–æ–≤–æ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –±—É–¥–µ—Ç –∑–¥–µ—Å—å -->
                </div>
                
                <!-- –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ü–µ–ª–µ–π -->
                <div id="goals-content-wrapper" class="tab-content" style="display: none;">
                    <!-- –ö–æ–Ω—Ç–µ–Ω—Ç —Ü–µ–ª–µ–π –±—É–¥–µ—Ç –∑–¥–µ—Å—å -->
                </div>
            </div>
        </div>
    `;
    
    // –ü–ª–∞–≤–Ω–æ –∑–∞–º–µ–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    fadeTransition(container, tempContainer.firstElementChild);
    
    // –û–Ω–æ–≤–ª—é—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –æ—Å—Ç–∞–Ω–Ω—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
    updateLastUpdateInfo();
}

/**
 * –ü–ª–∞–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –º–µ–∂–¥—É –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞–º–∏
 */
function fadeTransition(container, newContent) {
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é 0
    newContent.style.opacity = '0';
    newContent.style.transition = 'opacity 0.5s ease-in-out';
    container.appendChild(newContent);
    
    // –ü–ª–∞–≤–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    setTimeout(() => {
        newContent.style.opacity = '1';
    }, 50);
    
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
    setTimeout(() => {
        const oldContent = container.querySelector('.bg-gray-900.min-h-screen:not(:last-child)');
        if (oldContent) {
            oldContent.remove();
        }
    }, 550);
}

/**
 * –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π
 */
function setupEventHandlers() {
    console.log('üîß –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π...');
    
    // –û–±—Ä–æ–±–Ω–∏–∫–∏ –≤–∫–ª–∞–¥–æ–∫
    document.querySelectorAll('.tab-button').forEach(button => {
        button.addEventListener('click', (e) => {
            const tabName = e.target.dataset.tab;
            switchTab(tabName);
        });
    });
    
    // –û–±—Ä–æ–±–Ω–∏–∫ –ø–µ—Ä–µ–º–∏–∫–∞—á–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É
    const toggleButton = document.getElementById('background-service-toggle');
    if (toggleButton) {
        toggleButton.addEventListener('click', toggleBackgroundService);
    }
    
    // –û–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å –∫–Ω–æ–ø–∫–∏
    updateBackgroundServiceButton();
}

/**
 * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –≤–∫–ª–∞–¥–æ–∫
 */
async function switchTab(tabName) {
    const operationId = `switchTab_${tabName}`;
    console.log(`üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É: ${tabName}`);
    
    try {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é
        if (!canPerformOperation(operationId)) {
            console.log(`‚ö†Ô∏è –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É ${tabName} –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ, —á–µ–∫–∞—î–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —ñ–Ω—à–æ—ó –æ–ø–µ—Ä–∞—Ü—ñ—ó...`);
            return;
        }
        
        // –ë–ª–æ–∫–∏—Ä—É–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
        if (!lockOperation(operationId)) {
            console.log(`‚ö†Ô∏è –ù–µ–º–æ–∂–ª–∏–≤–æ –∑–∞–±–ª–æ–∫—É–≤–∞—Ç–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É ${tabName}`);
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        const currentState = getState();
        if (currentState.isLoading) {
            console.log('‚ö†Ô∏è –ú–æ–¥—É–ª—å –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è, —á–µ–∫–∞—î–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è...');
            unlockOperation(operationId);
            return;
        }
        
        setLoading(true);
        setCurrentTab(tabName);
        
        // –û–Ω–æ–≤–ª—é—î–º–æ –∞–∫—Ç–∏–≤–Ω—É –≤–∫–ª–∞–¥–∫—É –≤ UI
        document.querySelectorAll('.tab-button').forEach(button => {
            button.classList.remove('active', 'text-white', 'border-blue-500');
            button.classList.add('text-gray-300', 'border-transparent');
        });
        
        const activeButton = document.querySelector(`[data-tab="${tabName}"]`);
        if (activeButton) {
            activeButton.classList.add('active', 'text-white', 'border-blue-500');
            activeButton.classList.remove('text-gray-300', 'border-transparent');
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
        const contentWrapper = document.getElementById(`${tabName}-content-wrapper`);
        if (!contentWrapper) {
            console.error(`‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ ${tabName} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ`);
            setLoading(false);
            unlockOperation(operationId);
            return;
        }
        
        // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –≤–∫–ª–∞–¥–æ–∫
        document.querySelectorAll('.tab-content').forEach(wrapper => {
            wrapper.style.display = 'none';
        });
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –∫–æ–Ω—Ç–µ–Ω—Ç —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω
        const isLoaded = contentWrapper.getAttribute('data-loaded') === 'true';
        
        if (!isLoaded) {
            console.log(`üì¶ –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–∫–∏ ${tabName} —â–µ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π, –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ...`);
            
            // –ü–æ–∫–∞–∑—É—î–º–æ –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏
            contentWrapper.innerHTML = `
                <div class="flex items-center justify-center py-12">
                    <div class="text-center">
                        <div class="inline-block animate-spin rounded-full h-8 w-8 border-2 border-blue-600 border-t-transparent mb-4"></div>
                        <p class="text-lg font-medium text-gray-200 mb-2">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ${getTabDisplayName(tabName)}...</p>
                        <div class="flex justify-center space-x-1">
                            <div class="w-1 h-1 bg-blue-500 rounded-full animate-pulse"></div>
                            <div class="w-1 h-1 bg-blue-500 rounded-full animate-pulse" style="animation-delay: 0.2s"></div>
                            <div class="w-1 h-1 bg-blue-500 rounded-full animate-pulse" style="animation-delay: 0.4s"></div>
                        </div>
                    </div>
                </div>
            `;
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            contentWrapper.style.display = 'block';
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–∫–∏
            try {
                switch (tabName) {
                    case 'dashboard':
                        await renderDashboardTab(contentWrapper);
                        break;
                    case 'constructor':
                        await renderConstructorTab(contentWrapper);
                        break;
                    case 'focus-manager':
                        await renderFocusManagerTab(contentWrapper);
                        break;
                    case 'mass-assignment':
                        await renderMassAssignmentTab(contentWrapper);
                        break;
                    case 'goals':
                        await renderGoalsTab(contentWrapper);
                        break;
                    default:
                        console.warn(`‚ö†Ô∏è –ù–µ–≤—ñ–¥–æ–º–∞ –≤–∫–ª–∞–¥–∫–∞: ${tabName}`);
                }
                
                // –û—Ç–º–µ—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –∫–∞–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π
                contentWrapper.setAttribute('data-loaded', 'true');
                console.log(`‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–∫–∏ ${tabName} –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ`);
                
            } catch (error) {
                console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É –≤–∫–ª–∞–¥–∫–∏ ${tabName}:`, error);
                contentWrapper.innerHTML = `
                    <div class="bg-red-900 border border-red-700 rounded-lg p-6 text-center">
                        <div class="text-red-400 text-6xl mb-4">‚ö†Ô∏è</div>
                        <h2 class="text-xl font-bold text-red-400 mb-2">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è</h2>
                        <p class="text-sm text-gray-400 mb-6">${error.message}</p>
                        <button onclick="switchTab('${tabName}')" 
                                class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors">
                            üîÑ –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑
                        </button>
                    </div>
                `;
            }
        } else {
            console.log(`‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–∫–∏ ${tabName} –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π, –ø–æ–∫–∞–∑—É—î–º–æ...`);
            // –ü—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
            contentWrapper.style.display = 'block';
        }
        
        setLoading(false);
        
        console.log(`‚úÖ –í–∫–ª–∞–¥–∫–∞ ${tabName} —É—Å–ø—ñ—à–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∞`);
        
    } catch (error) {
        console.error(`‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –≤–∫–ª–∞–¥–∫–∏ ${tabName}:`, error);
        setLoading(false);
    } finally {
        // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –æ–ø–µ—Ä–∞—Ü–∏—é
        unlockOperation(operationId);
    }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ –∏–º–µ–Ω–∏ –≤–∫–ª–∞–¥–∫–∏
 */
function getTabDisplayName(tabName) {
    const tabNames = {
        'dashboard': 'üìä –î–∞—à–±–æ—Ä–¥',
        'constructor': 'üèóÔ∏è –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–ª–∞–Ω—ñ–≤',
        'focus-manager': 'üéØ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ñ–æ–∫—É—Å–∞–º–∏',
        'mass-assignment': 'üë• –ú–∞—Å–æ–≤–µ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è',
        'goals': 'üéØ –¶—ñ–ª—ñ'
    };
    
    return tabNames[tabName] || tabName;
}

/**
 * –ü–æ–∫–∞–∑ –∞–Ω–∏–º–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –≤–∫–ª–∞–¥–∫–∏
 */
function showTabLoadingAnimation(container, tabName) {
    const tabNames = {
        'dashboard': 'üìä –î–∞—à–±–æ—Ä–¥',
        'constructor': 'üèóÔ∏è –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø–ª–∞–Ω—ñ–≤',
        'focus-manager': 'üéØ –£–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ñ–æ–∫—É—Å–∞–º–∏',
        'mass-assignment': 'üë• –ú–∞—Å–æ–≤–µ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è',
        'goals': 'üéØ –¶—ñ–ª—ñ'
    };
    
    const tabNameDisplay = tabNames[tabName] || tabName;
    
    container.innerHTML = `
        <div class="flex items-center justify-center py-12">
            <div class="text-center">
                <div class="inline-block animate-spin rounded-full h-8 w-8 border-2 border-blue-600 border-t-transparent mb-4"></div>
                <p class="text-lg font-medium text-gray-200 mb-2">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ${tabNameDisplay}...</p>
                <div class="flex justify-center space-x-1">
                    <div class="w-1 h-1 bg-blue-500 rounded-full animate-pulse"></div>
                    <div class="w-1 h-1 bg-blue-500 rounded-full animate-pulse" style="animation-delay: 0.2s"></div>
                    <div class="w-1 h-1 bg-blue-500 rounded-full animate-pulse" style="animation-delay: 0.4s"></div>
                </div>
            </div>
        </div>
    `;
}

/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –¥–∞—à–±–æ—Ä–¥—É
 */
async function loadDashboardData() {
    console.log('üìä –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –¥–∞—à–±–æ—Ä–¥—É...');
    
    try {
        // –ü–æ–∫–∞–∑—É—î–º–æ –∞–Ω–∏–º–∞—Ü–∏—é –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–ª—è –¥–∞—à–±–æ—Ä–¥—É
        const contentContainer = document.getElementById('plan-fact-content');
        if (contentContainer) {
            showTabLoadingAnimation(contentContainer, 'dashboard');
        }
        
        // –í–∏–∫–ª–∏–∫–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞—à–±–æ—Ä–¥—É —ñ —á–µ–∫–∞—î–º–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
        if (typeof window.updateDashboardData === 'function') {
            await window.updateDashboardData();
        } else {
            // –Ø–∫—â–æ —Ñ—É–Ω–∫—Ü—ñ—è –Ω–µ —ñ—Å–Ω—É—î, —á–µ–∫–∞—î–º–æ —Ç—Ä–æ—Ö–∏ –¥–ª—è —ñ–º—ñ—Ç–∞—Ü—ñ—ó –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
            await new Promise(resolve => setTimeout(resolve, 1000));
        }
        
        console.log('‚úÖ –î–∞–Ω—ñ –¥–∞—à–±–æ—Ä–¥—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ');
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –¥–∞—à–±–æ—Ä–¥—É:', error);
        throw error;
    }
}

/**
 * –ü–µ—Ä–µ–º–∏–∫–∞—á —Ñ–æ–Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É
 */
function toggleBackgroundService() {
    const status = getServiceStatus();
    
    if (status.isActive) {
        stopBackgroundService();
    } else {
        startBackgroundService();
    }
    
    updateBackgroundServiceButton();
}

/**
 * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ —Ñ–æ–Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É
 */
function updateBackgroundServiceButton() {
    const button = document.getElementById('background-service-toggle');
    if (!button) return;
    
    const status = getServiceStatus();
    
    if (status.isActive) {
        button.textContent = 'üõë –ó—É–ø–∏–Ω–∏—Ç–∏ –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è';
        button.classList.remove('bg-green-600', 'hover:bg-red-600');
        button.classList.add('bg-red-600', 'hover:bg-green-600');
    } else {
        button.textContent = 'üîÑ –ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è';
        button.classList.remove('bg-red-600', 'hover:bg-green-600');
        button.classList.add('bg-green-600', 'hover:bg-red-600');
    }
}

/**
 * –û–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –æ—Å—Ç–∞–Ω–Ω—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
 */
function updateLastUpdateInfo() {
    const infoElement = document.getElementById('last-update-info');
    if (!infoElement) return;
    
    const status = getServiceStatus();
    
    if (status.lastUpdate) {
        const lastUpdate = new Date(status.lastUpdate);
        const now = new Date();
        const diffMinutes = Math.floor((now - lastUpdate) / 1000 / 60);
        
        infoElement.textContent = `–û—Å—Ç–∞–Ω–Ω—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: ${diffMinutes} —Ö–≤ —Ç–æ–º—É`;
    } else {
        infoElement.textContent = '–û—Å—Ç–∞–Ω–Ω—î –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: -';
    }
}

// === –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø –î–ê–ù–ò–• ===

/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —à–∞–±–ª–æ–Ω—ñ–≤ –ø–ª–∞–Ω—ñ–≤ –∑ Firebase
 */
async function loadPlanTemplatesFromFirebase() {
    try {
        const companyId = window.state?.currentCompanyId;
        if (!companyId) {
            console.warn('‚ö†Ô∏è ID –∫–æ–º–ø–∞–Ω—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∑ localStorage');
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ localStorage
            try {
                const savedData = localStorage.getItem('planFactData');
                if (savedData) {
                    const parsedData = JSON.parse(savedData);
                    const planTemplates = parsedData.planTemplates || [];
                    console.log(`üìã –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${planTemplates.length} —à–∞–±–ª–æ–Ω—ñ–≤ –∑ localStorage`);
                    
                    return planTemplates;
                } else {
                    return [];
                }
            } catch (storageError) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ localStorage:', storageError);
                return [];
            }
            
            // –ü–æ–∫–∞–∑—É—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
            if (window.showToast) {
                showToast('üí° –î–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –ø–ª–∞–Ω–∞–º–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏ –∫–æ–º–ø–∞–Ω—ñ—é', 'info');
            }
            return [];
        }
        
        console.log('üî• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —à–∞–±–ª–æ–Ω—ñ–≤ –ø–ª–∞–Ω—ñ–≤ –∑ Firebase...');
        
        const templatesRef = firebase.collection(firebase.db, 'companies', companyId, 'planTemplates');
        const snapshot = await firebase.getDocs(templatesRef);
        
        const planTemplates = snapshot.docs.map(doc => ({
            id: doc.id,
            ...doc.data()
        }));
        
        console.log(`üìã –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${planTemplates.length} —à–∞–±–ª–æ–Ω—ñ–≤ –ø–ª–∞–Ω—ñ–≤ –∑ Firebase`);
        
        return planTemplates;
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —à–∞–±–ª–æ–Ω—ñ–≤ –ø–ª–∞–Ω—ñ–≤:', error);
        return [];
    }
}

/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∏–ø—ñ–≤ —Ñ–æ–∫—É—Å–Ω–∏—Ö –∑–∞–¥–∞—á
 */
async function loadFocusTypes() {
    try {
        const companyId = window.state?.currentCompanyId;
        if (!companyId) {
            console.warn('‚ö†Ô∏è ID –∫–æ–º–ø–∞–Ω—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ç–∏–ø–∏ —Ñ–æ–∫—É—Å—ñ–≤ –∑ localStorage');
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ localStorage
            try {
                const savedData = localStorage.getItem('planFactData');
                if (savedData) {
                    const parsedData = JSON.parse(savedData);
                    const focusTypes = parsedData.focusTypes || [];
                    console.log(`üéØ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${focusTypes.length} —Ç–∏–ø—ñ–≤ —Ñ–æ–∫—É—Å—ñ–≤ –∑ localStorage`);
                    
                                        return focusTypes;
                } else {
                    return [];
                }
            } catch (storageError) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∏–ø—ñ–≤ —Ñ–æ–∫—É—Å—ñ–≤ –∑ localStorage:', storageError);
                return [];
            }
            return [];
        }
        
        console.log('üéØ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∏–ø—ñ–≤ —Ñ–æ–∫—É—Å–Ω–∏—Ö –∑–∞–¥–∞—á...');
        
        const focusTypesRef = firebase.collection(firebase.db, 'companies', companyId, 'focusTypes');
        const snapshot = await firebase.getDocs(focusTypesRef);
        
        const focusTypes = snapshot.docs.map(doc => ({
            id: doc.id,
            ...doc.data()
        }));
        
        console.log(`üéØ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${focusTypes.length} —Ç–∏–ø—ñ–≤ —Ñ–æ–∫—É—Å–Ω–∏—Ö –∑–∞–¥–∞—á`);
        
        return focusTypes;
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–∏–ø—ñ–≤ —Ñ–æ–∫—É—Å—ñ–≤:', error);
        return [];
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.loadFocusTypesFromFirebase = loadFocusTypes;

/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ü—ñ–ª–µ–π –∑ Firebase
 */
async function loadGoalsFromFirebase() {
    try {
        const companyId = window.state?.currentCompanyId;
        if (!companyId) {
            console.warn('‚ö†Ô∏è ID –∫–æ–º–ø–∞–Ω—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ü—ñ–ª—ñ –∑ localStorage');
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ localStorage
            try {
                const savedData = localStorage.getItem('planFactData');
                if (savedData) {
                    const parsedData = JSON.parse(savedData);
                    const goals = parsedData.goals || [];
                    console.log(`üéØ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${goals.length} —Ü—ñ–ª–µ–π –∑ localStorage`);
                    
                    return goals;
                } else {
                    return [];
                }
            } catch (storageError) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ü—ñ–ª–µ–π –∑ localStorage:', storageError);
                return [];
            }
            return [];
        }
        
        console.log('üéØ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ü—ñ–ª–µ–π –∑ Firebase...');
        
        const goalsRef = firebase.collection(firebase.db, 'companies', companyId, 'weeklyGoals');
        const snapshot = await firebase.getDocs(goalsRef);
        
        const goals = snapshot.docs.map(doc => ({
            id: doc.id,
            ...doc.data()
        }));
        
        console.log(`üéØ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${goals.length} —Ü—ñ–ª–µ–π –∑ Firebase`);
        
        return goals;
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ü—ñ–ª–µ–π:', error);
        return [];
    }
}

/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–ª–∞–Ω—ñ–≤ –∑ Firebase –∞–±–æ localStorage
 */
async function loadPlansFromStorage() {
    try {
        const companyId = window.state?.currentCompanyId;
        
        if (!companyId) {
            console.warn('‚ö†Ô∏è ID –∫–æ–º–ø–∞–Ω—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ, –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø–ª–∞–Ω–∏ –∑ localStorage');
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑ localStorage
            try {
                const savedData = localStorage.getItem('planFactData');
                if (savedData) {
                    const parsedData = JSON.parse(savedData);
                    const plans = parsedData.plans || [];
                    const massAssignmentHistory = parsedData.massAssignmentHistory || [];
                    console.log(`üìã –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${plans.length} –ø–ª–∞–Ω—ñ–≤ –∑ localStorage`);
                    console.log(`üìã –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${massAssignmentHistory.length} –∑–∞–ø–∏—Å—ñ–≤ —ñ—Å—Ç–æ—Ä—ñ—ó –∑ localStorage`);
                    
                    return { plans, massAssignmentHistory };
                } else {
                    return { plans: [], massAssignmentHistory: [] };
                }
            } catch (storageError) {
                console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–ª–∞–Ω—ñ–≤ –∑ localStorage:', storageError);
                return { plans: [], massAssignmentHistory: [] };
            }
            return { plans: [], massAssignmentHistory: [] };
        }
        
        console.log('üìã –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–ª–∞–Ω—ñ–≤ –∑ Firebase...');
        
        const plansRef = firebase.collection(firebase.db, 'companies', companyId, 'plans');
        const snapshot = await firebase.getDocs(plansRef);
        
        const plans = snapshot.docs.map(doc => ({
            id: doc.id,
            ...doc.data()
        }));
        
        console.log(`üìã –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${plans.length} –ø–ª–∞–Ω—ñ–≤ –∑ Firebase`);
        
        // TODO: –ó–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑ Firebase –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏
        const massAssignmentHistory = [];
        
        return { plans, massAssignmentHistory };
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–ª–∞–Ω—ñ–≤:', error);
        return { plans: [], massAssignmentHistory: [] };
    }
}

/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤ —Ç–∞ –≤—ñ–¥–¥—ñ–ª—ñ–≤
 */
async function loadEmployees() {
    try {
        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–∞–Ω—ñ –∑ window.state
        const employees = window.state?.allEmployees || [];
        console.log(`üë• –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${employees.length} —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤`);
        
        return employees;
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫—ñ–≤:', error);
        return [];
    }
}

/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–¥—ñ–ª—ñ–≤
 */
async function loadDepartments() {
    try {
        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–∞–Ω—ñ –∑ window.state
        const departments = window.state?.departments || [];
        console.log(`üè¢ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${departments.length} –≤—ñ–¥–¥—ñ–ª—ñ–≤`);
        
        return departments;
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—ñ–¥–¥—ñ–ª—ñ–≤:', error);
        return [];
    }
}

// === –¢–ï–°–¢–û–í–Ü –î–ê–ù–Ü ===
function getTestPlanTemplates() {
    return [
        {
            id: 'template-1',
            name: '–®–∞–±–ª–æ–Ω –¥–ª—è –∫–∞–≤\'—è—Ä–Ω—ñ',
            departmentId: 'dept-1',
            departmentName: '–ö–ê–í\'–Ø–†–ù–Ø',
            monthKey: '202508',
            revenuePlan: 2629453,
            status: 'active',
            createdAt: new Date(),
            createdBy: 'demo-user',
            
            // –§–æ–∫—É—Å–Ω—ñ –∑–∞–¥–∞—á—ñ
            focusTasks: [
                {
                    focusTypeId: 'focus-1',
                    focusTypeName: '–ö–æ–º–µ—Ä—Ü—ñ–π–Ω—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó',
                    focusType: 'quantity',
                    focusUnit: '—à—Ç'
                },
                {
                    focusTypeId: 'focus-2',
                    focusTypeName: '–ï—Ñ–µ–∫—Ç–∏–≤–Ω—ñ –¥–∑–≤—ñ–Ω–∫–∏',
                    focusType: 'quantity',
                    focusUnit: '—à—Ç'
                },
                {
                    focusTypeId: 'focus-3',
                    focusTypeName: '–°–µ—Ä–µ–¥–Ω—ñ–π —á–µ–∫',
                    focusType: 'revenue',
                    focusUnit: '–≥—Ä–Ω'
                }
            ]
        },
        {
            id: 'template-2',
            name: '–®–∞–±–ª–æ–Ω –¥–ª—è –∑–∞–∫–ª–∞–¥—ñ–≤',
            departmentId: 'dept-2',
            departmentName: '–ó–ê–ö–õ–ê–î–ò',
            monthKey: '202508',
            revenuePlan: 1500000,
            status: 'draft',
            createdAt: new Date(),
            createdBy: 'demo-user',
            
            // –§–æ–∫—É—Å–Ω—ñ –∑–∞–¥–∞—á—ñ
            focusTasks: [
                {
                    focusTypeId: 'focus-1',
                    focusTypeName: '–ö–æ–º–µ—Ä—Ü—ñ–π–Ω—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó',
                    focusType: 'quantity',
                    focusUnit: '—à—Ç'
                },
                {
                    focusTypeId: 'focus-4',
                    focusTypeName: '–ù–æ–≤—ñ –∫–ª—ñ—î–Ω—Ç–∏',
                    focusType: 'quantity',
                    focusUnit: '—à—Ç'
                }
            ]
        }
    ];
}

function getTestGoals() {
    return [
        {
            id: 'goal-1',
            name: '–ö–æ–º–µ—Ä—Ü—ñ–π–Ω—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó —Ç–∏–∂–¥–µ–Ω—å 1',
            weekKey: '2025-W01',
            type: 'commercial_proposals',
            target: 50,
            progress: 35,
            description: '–°—Ç–≤–æ—Ä–∏—Ç–∏ –∫–æ–º–µ—Ä—Ü—ñ–π–Ω—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –¥–ª—è –Ω–æ–≤–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤',
            managerId: 'emp-1',
            managerName: '–ê–Ω–≥–µ–ª—ñ–Ω–∞ –ú—É–¥—Ä–∏—Ü—å–∫–∞',
            status: 'active',
            clients: ['client-1', 'client-2'],
            createdAt: new Date().toISOString(),
            createdBy: 'demo-user'
        }
    ];
}

function getTestFocusTypes() {
    return [
        {
            id: 'focus-1',
            name: '–ö–æ–º–µ—Ä—Ü—ñ–π–Ω—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó',
            type: 'quantity',
            description: '–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö –∫–æ–º–µ—Ä—Ü—ñ–π–Ω–∏—Ö –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π',
            unit: '—à—Ç',
            category: 'sales'
        },
        {
            id: 'focus-2',
            name: '–ï—Ñ–µ–∫—Ç–∏–≤–Ω—ñ –¥–∑–≤—ñ–Ω–∫–∏',
            type: 'quantity',
            description: '–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—Ö –µ—Ñ–µ–∫—Ç–∏–≤–Ω–∏—Ö –¥–∑–≤—ñ–Ω–∫—ñ–≤',
            unit: '—à—Ç',
            category: 'communication'
        },
        {
            id: 'focus-3',
            name: '–°–µ—Ä–µ–¥–Ω—ñ–π —á–µ–∫',
            type: 'revenue',
            description: '–°–µ—Ä–µ–¥–Ω—ñ–π —á–µ–∫ –∑–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è',
            unit: '–≥—Ä–Ω',
            category: 'financial'
        },
        {
            id: 'focus-4',
            name: '–ó—Ä–∞–∑–∫–∏ —Ç–æ–≤–∞—Ä—ñ–≤',
            type: 'quantity',
            description: '–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–∏—Ö –∑—Ä–∞–∑–∫—ñ–≤',
            unit: '—à—Ç',
            category: 'sales'
        }
    ];
}