// goals.js - –ü—ñ–¥–º–æ–¥—É–ª—å —Ç–∏–∂–Ω–µ–≤–∏—Ö —Ü—ñ–ª–µ–π (—Å–ø—Ä–∏–Ω—Ç—ñ–≤)
import * as firebase from '../firebase.js';
import { getState, updateState } from './state.js';

/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ü—ñ–ª–µ–π
 */
function loadGoals() {
    console.log('üéØ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ü—ñ–ª–µ–π...');
    
    const goalsList = document.getElementById('goalsList');
    if (!goalsList) {
        console.error('‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–ø–∏—Å–∫—É —Ü—ñ–ª–µ–π –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        return;
    }
    
    // –û—Ç—Ä–∏–º—É—î–º–æ –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω—ñ —Ü—ñ–ª—ñ
    const filteredGoals = getFilteredGoals();
    
    // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫
    goalsList.innerHTML = renderGoalsList(filteredGoals);
    
    console.log(`‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${filteredGoals.length} —Ü—ñ–ª–µ–π`);
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –≤—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–∏—Ö —Ü—ñ–ª–µ–π
 */
function getFilteredGoals() {
    const weekFilter = document.getElementById('goalsWeek')?.value || getCurrentWeek();
    const managerFilter = document.getElementById('goalsManager')?.value || '';
    const statusFilter = document.getElementById('goalsStatus')?.value || '';
    
    return getState().planFactData?.goals?.filter(goal => {
        if (goal.weekKey !== weekFilter) return false;
        if (managerFilter && goal.managerId !== managerFilter) return false;
        if (statusFilter && goal.status !== statusFilter) return false;
        return true;
    }) || [];
}

/**
 * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å–ø–∏—Å–∫—É —Ü—ñ–ª–µ–π
 */
function renderGoalsList(goals = null) {
    // –ï—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω—ã —Ü–µ–ª–∏, –ø–æ–ª—É—á–∞–µ–º –∏—Ö –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if (!goals) {
        goals = getFilteredGoals();
    }
    
    if (goals.length === 0) {
        return `
            <div class="text-center py-8 text-gray-400">
                <p>–ù–µ–º–∞—î —Ü—ñ–ª–µ–π –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è</p>
                <p class="text-sm mt-2">–°—Ç–≤–æ—Ä—ñ—Ç—å –ø–µ—Ä—à—É —Ç–∏–∂–Ω–µ–≤—É —Ü—ñ–ª—å, –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –∫–Ω–æ–ø–∫—É "–°—Ç–≤–æ—Ä–∏—Ç–∏ —Ü—ñ–ª—å"</p>
            </div>
        `;
    }
    
    return `
        <div class="space-y-4">
            ${goals.map(goal => `
                <div class="bg-gray-800 rounded-lg p-4 border border-gray-600">
                    <div class="flex justify-between items-start mb-3">
                        <div>
                            <h4 class="text-lg font-bold text-white">${goal.name}</h4>
                            <p class="text-sm text-gray-400">${goal.managerName} ‚Ä¢ ${goal.type}</p>
                            <p class="text-xs text-gray-500">–¢–∏–∂–¥–µ–Ω—å: ${formatWeekKey(goal.weekKey)}</p>
                        </div>
                        <div class="text-right">
                            <span class="px-2 py-1 rounded-full text-xs ${getGoalStatusClass(goal.status)}">
                                ${getGoalStatusText(goal.status)}
                            </span>
                        </div>
                    </div>
                    
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-3">
                        <div>
                            <div class="text-sm text-gray-400">–¶—ñ–ª—å</div>
                            <div class="text-white font-medium">${formatGoalTarget(goal)}</div>
                        </div>
                        <div>
                            <div class="text-sm text-gray-400">–í–∏–∫–æ–Ω–∞–Ω–Ω—è</div>
                            <div class="text-white font-medium">${formatGoalProgress(goal)}</div>
                        </div>
                        <div>
                            <div class="text-sm text-gray-400">–ü—Ä–æ–≥—Ä–µ—Å</div>
                            <div class="text-white font-medium">${calculateGoalProgress(goal)}%</div>
                        </div>
                    </div>
                    
                    ${goal.description ? `
                        <div class="mb-3">
                            <div class="text-sm text-gray-400">–û–ø–∏—Å</div>
                            <div class="text-white text-sm">${goal.description}</div>
                        </div>
                    ` : ''}
                    
                    <div class="flex gap-2">
                        <button onclick="showGoalDetails('${goal.id}')" 
                                class="px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm">
                            –î–µ—Ç–∞–ª—ñ
                        </button>
                        <button onclick="editGoal('${goal.id}')" 
                                class="px-3 py-1 bg-yellow-600 text-white rounded hover:bg-yellow-700 text-sm">
                            –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
                        </button>
                        ${goal.status === 'active' ? 
                            `<button onclick="completeGoal('${goal.id}')" 
                                     class="px-3 py-1 bg-green-600 text-white rounded hover:bg-green-700 text-sm">
                                –ó–∞–≤–µ—Ä—à–∏—Ç–∏
                            </button>` : ''
                        }
                        <button onclick="deleteGoal('${goal.id}')" 
                                class="px-3 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-sm">
                            –í–∏–¥–∞–ª–∏—Ç–∏
                        </button>
                    </div>
                </div>
            `).join('')}
        </div>
    `;
}

/**
 * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤–∫–ª–∞–¥–∫–∏ —Ü–µ–ª–µ–π
 */
export function renderGoalsTab(container = null) {
    // –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, –∏—â–µ–º –µ–≥–æ
    if (!container) {
        container = document.getElementById('plan-fact-content');
    }
    
    if (!container) return;
    
    container.innerHTML = `
        <div class="space-y-6">
            <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞ –∫–Ω–æ–ø–∫–∏ -->
            <div class="flex justify-between items-center">
                <h2 class="text-xl font-bold text-white">–¢–∏–∂–Ω–µ–≤—ñ —Ü—ñ–ª—ñ</h2>
                <button onclick="showCreateGoalModal()" 
                        class="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700">
                    + –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ü—ñ–ª—å
                </button>
            </div>
            
            <!-- –§—ñ–ª—å—Ç—Ä–∏ -->
            <div class="bg-gray-700 rounded-lg p-4">
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-1">–¢–∏–∂–¥–µ–Ω—å</label>
                        <input type="week" id="goalsWeek" class="w-full bg-gray-600 border border-gray-500 rounded text-white p-2" 
                               value="${getCurrentWeek()}" onchange="loadGoals()">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-1">–ú–µ–Ω–µ–¥–∂–µ—Ä</label>
                        <select id="goalsManager" class="w-full bg-gray-600 border border-gray-500 rounded text-white p-2" onchange="loadGoals()">
                            <option value="">–í—Å—ñ –º–µ–Ω–µ–¥–∂–µ—Ä–∏</option>
                            ${getState().planFactData?.employees?.map(emp => 
                                `<option value="${emp.id}">${emp.name}</option>`
                            ).join('') || ''}
                        </select>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-1">–°—Ç–∞—Ç—É—Å</label>
                        <select id="goalsStatus" class="w-full bg-gray-600 border border-gray-500 rounded text-white p-2" onchange="loadGoals()">
                            <option value="">–í—Å—ñ —Å—Ç–∞—Ç—É—Å–∏</option>
                            <option value="active">–ê–∫—Ç–∏–≤–Ω—ñ</option>
                            <option value="completed">–ó–∞–≤–µ—Ä—à–µ–Ω—ñ</option>
                            <option value="overdue">–ü—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω—ñ</option>
                        </select>
                    </div>
                </div>
            </div>
            
            <!-- –°–ø–∏—Å–æ–∫ —Ü—ñ–ª–µ–π -->
            <div class="bg-gray-700 rounded-lg overflow-hidden">
                <div class="px-4 py-3 border-b border-gray-600">
                    <h3 class="text-lg font-bold text-white">–¶—ñ–ª—ñ</h3>
                </div>
                <div id="goalsList" class="p-4">
                    ${renderGoalsList()}
                </div>
            </div>
        </div>
    `;
    
    loadGoals();
}

/**
 * –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ü—ñ–ª—ñ
 */
window.showCreateGoalModal = function() {
    const modal = document.createElement('div');
    modal.className = 'fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-60';
    modal.innerHTML = `
        <div class="bg-gray-800 rounded-lg p-6 w-full max-w-2xl max-h-[90vh] overflow-y-auto">
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-2xl font-bold text-white">–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∏–∂–Ω–µ–≤–æ—ó —Ü—ñ–ª—ñ</h2>
                <button onclick="this.closest('.fixed').remove()" class="text-gray-400 hover:text-white text-2xl">&times;</button>
            </div>
            
            <form id="create-goal-form" class="space-y-4">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-1">–ù–∞–∑–≤–∞ —Ü—ñ–ª—ñ *</label>
                        <input type="text" id="goal-name" class="w-full bg-gray-600 text-white rounded border border-gray-500 p-2" required>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-1">–¢–∏–∂–¥–µ–Ω—å *</label>
                        <input type="week" id="goal-week" class="w-full bg-gray-600 text-white rounded border border-gray-500 p-2" required>
                    </div>
                </div>
                
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-1">–¢–∏–ø —Ü—ñ–ª—ñ *</label>
                        <select id="goal-type" class="w-full bg-gray-600 text-white rounded border border-gray-500 p-2" required>
                            <option value="">–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —Ü—ñ–ª—ñ</option>
                            <option value="commercial_proposals">–ö–æ–º–µ—Ä—Ü—ñ–π–Ω—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó</option>
                            <option value="client_shipments">–í—ñ–¥–≥—Ä—É–∑–∫–∏ –∫–ª—ñ—î–Ω—Ç—ñ–≤</option>
                            <option value="calls">–î–∑–≤—ñ–Ω–∫–∏ –∫–ª—ñ—î–Ω—Ç–∞–º</option>
                            <option value="meetings">–ó—É—Å—Ç—Ä—ñ—á—ñ</option>
                            <option value="revenue">–í–∏—Ä—É—á–∫–∞</option>
                            <option value="custom">–Ü–Ω—à–µ</option>
                        </select>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-300 mb-1">–¶—ñ–ª—å–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è *</label>
                        <input type="number" id="goal-target" class="w-full bg-gray-600 text-white rounded border border-gray-500 p-2" min="0" required>
                    </div>
                </div>
                
                <div>
                    <label class="block text-sm font-medium text-gray-300 mb-1">–û–ø–∏—Å</label>
                    <textarea id="goal-description" class="w-full bg-gray-600 text-white rounded border border-gray-500 p-2" rows="3" 
                              placeholder="–î–µ—Ç–∞–ª—å–Ω–∏–π –æ–ø–∏—Å —Ü—ñ–ª—ñ..."></textarea>
                </div>
                
                <!-- –ö–ª—ñ—î–Ω—Ç–∏ (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ) -->
                <div id="goal-clients-section" class="hidden">
                    <label class="block text-sm font-medium text-gray-300 mb-1">–ö–ª—ñ—î–Ω—Ç–∏</label>
                    <div id="goal-clients" class="space-y-2 max-h-40 overflow-y-auto">
                        <!-- –ö–ª—ñ—î–Ω—Ç–∏ –±—É–¥—É—Ç—å –¥–æ–¥–∞–Ω—ñ –¥–∏–Ω–∞–º—ñ—á–Ω–æ -->
                    </div>
                    <button type="button" onclick="addGoalClient()" class="mt-2 px-3 py-1 bg-blue-600 text-white rounded hover:bg-blue-700">
                        + –î–æ–¥–∞—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞
                    </button>
                </div>
                
                <div class="flex justify-end gap-4">
                    <button type="button" onclick="this.closest('.fixed').remove()" 
                            class="px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700">
                        –°–∫–∞—Å—É–≤–∞—Ç–∏
                    </button>
                    <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">
                        –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ü—ñ–ª—å
                    </button>
                </div>
            </form>
        </div>
    `;
    
    document.body.appendChild(modal);
    
    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π —Ç–∏–∂–¥–µ–Ω—å –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    document.getElementById('goal-week').value = getCurrentWeek();
    
    // –û–±—Ä–æ–±–Ω–∏–∫ –∑–º—ñ–Ω–∏ —Ç–∏–ø—É —Ü—ñ–ª—ñ
    document.getElementById('goal-type').addEventListener('change', toggleGoalClientsSection);
    
    // –û–±—Ä–æ–±–Ω–∏–∫ —Ñ–æ—Ä–º–∏
    document.getElementById('create-goal-form').onsubmit = function(e) {
        e.preventDefault();
        saveNewGoal();
    };
};

/**
 * –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è —Å–µ–∫—Ü—ñ—ó –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–∏–ø—É —Ü—ñ–ª—ñ
 */
window.toggleGoalClientsSection = function() {
    const goalType = document.getElementById('goal-type').value;
    const clientsSection = document.getElementById('goal-clients-section');
    
    if (goalType === 'commercial_proposals' || goalType === 'client_shipments') {
        clientsSection.classList.remove('hidden');
        loadGoalClients();
    } else {
        clientsSection.classList.add('hidden');
    }
};

/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤ –¥–ª—è —Ü—ñ–ª—ñ
 */
function loadGoalClients() {
    const clientsContainer = document.getElementById('goal-clients');
    if (!clientsContainer) return;
    
    const clients = getState().planFactData?.clientsData || [];
    
    if (clients.length === 0) {
        clientsContainer.innerHTML = '<p class="text-gray-400 text-sm">–ö–ª—ñ—î–Ω—Ç–∏ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ</p>';
        return;
    }
    
    clientsContainer.innerHTML = `
        <div class="space-y-2">
            ${clients.slice(0, 10).map(client => `
                <label class="flex items-center space-x-3 cursor-pointer">
                    <input type="checkbox" value="${client['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥']}" class="goal-client-checkbox rounded border-gray-400 text-blue-600 focus:ring-blue-500">
                    <span class="text-white text-sm">${client['–ö–ª–∏–µ–Ω—Ç.–ù–∞–∑–≤–∞–Ω–∏–µ'] || client['–ö–ª–∏–µ–Ω—Ç']}</span>
                </label>
            `).join('')}
        </div>
    `;
}

/**
 * –î–æ–¥–∞–≤–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞ –¥–æ —Ü—ñ–ª—ñ
 */
window.addGoalClient = function() {
    const clientsContainer = document.getElementById('goal-clients');
    if (!clientsContainer) return;
    
    const clientDiv = document.createElement('div');
    clientDiv.className = 'goal-client bg-gray-600 p-2 rounded border';
    clientDiv.innerHTML = `
        <div class="flex items-center justify-between">
            <input type="text" placeholder="–ù–∞–∑–≤–∞ –∫–ª—ñ—î–Ω—Ç–∞" class="goal-client-name bg-gray-500 text-white rounded border border-gray-400 p-1 text-sm">
            <button type="button" onclick="removeGoalClient(this)" class="px-2 py-1 bg-red-600 text-white rounded hover:bg-red-700 text-xs">
                –í–∏–¥–∞–ª–∏—Ç–∏
            </button>
        </div>
    `;
    clientsContainer.appendChild(clientDiv);
};

/**
 * –í–∏–¥–∞–ª–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç–∞ –∑ —Ü—ñ–ª—ñ
 */
window.removeGoalClient = function(button) {
    button.closest('.goal-client').remove();
};

/**
 * –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–æ–≤–æ—ó —Ü—ñ–ª—ñ
 */
async function saveNewGoal() {
    try {
        const formData = {
            name: document.getElementById('goal-name').value,
            weekKey: document.getElementById('goal-week').value,
            type: document.getElementById('goal-type').value,
            target: parseFloat(document.getElementById('goal-target').value) || 0,
            description: document.getElementById('goal-description').value,
            managerId: getState().state?.currentUserId || 'demo-user',
            managerName: getState().state?.currentUser?.displayName || '–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á',
            status: 'active',
            progress: 0,
            createdAt: new Date().toISOString(),
            createdBy: getState().state?.currentUserId || 'demo-user'
        };
        
        // –ó–±–∏—Ä–∞—î–º–æ –∫–ª—ñ—î–Ω—Ç—ñ–≤
        const selectedClients = Array.from(document.querySelectorAll('.goal-client-checkbox:checked')).map(cb => cb.value);
        const customClients = Array.from(document.querySelectorAll('.goal-client-name')).map(input => input.value).filter(Boolean);
        
        formData.clients = [...selectedClients, ...customClients];
        
        // –í–∞–ª—ñ–¥–∞—Ü—ñ—è
        if (!formData.name || !formData.weekKey || !formData.type || !formData.target) {
            alert('–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è');
            return;
        }
        
        // –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤—É —Ü—ñ–ª—å
        const newGoal = {
            id: `goal-${Date.now()}`,
            ...formData
        };
        
        // –î–æ–¥–∞—î–º–æ –¥–æ –¥–∞–Ω–∏—Ö
        if (!getState().planFactData.goals) {
            getState().planFactData.goals = [];
        }
        getState().planFactData.goals.push(newGoal);
        
        // –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –≤ Firebase (—è–∫—â–æ –¥–æ—Å—Ç—É–ø–Ω–æ)
        try {
            const companyId = getState().state?.currentCompanyId;
            if (companyId) {
                const goalRef = firebase.doc(firebase.db, 'companies', companyId, 'weeklyGoals', newGoal.id);
                await firebase.setDoc(goalRef, newGoal);
                console.log('‚úÖ –¶—ñ–ª—å –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ Firebase');
            }
        } catch (error) {
            console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ Firebase:', error);
        }
        
        alert('‚úÖ –¢–∏–∂–Ω–µ–≤—É —Ü—ñ–ª—å —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!');
        document.querySelector('.fixed').remove();
        
        // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
        if (getState().planFactData?.currentTab === 'goals') {
            renderGoalsTab();
        }
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ü—ñ–ª—ñ:', error);
        alert('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ü—ñ–ª—ñ');
    }
}

// === –î–û–ü–û–ú–Ü–ñ–ù–Ü –§–£–ù–ö–¶–Ü–á ===

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ç–∏–∂–Ω—è
 */
function getCurrentWeek() {
    const now = new Date();
    const year = now.getFullYear();
    const week = getWeekNumber(now);
    return `${year}-W${week.toString().padStart(2, '0')}`;
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ —Ç–∏–∂–Ω—è
 */
function getWeekNumber(date) {
    const firstDayOfYear = new Date(date.getFullYear(), 0, 1);
    const pastDaysOfYear = (date - firstDayOfYear) / 86400000;
    return Math.ceil((pastDaysOfYear + firstDayOfYear.getDay() + 1) / 7);
}

/**
 * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Ç–∏–∂–Ω—è
 */
function formatWeekKey(weekKey) {
    const [year, week] = weekKey.split('-W');
    return `–¢–∏–∂–¥–µ–Ω—å ${week}, ${year}`;
}

/**
 * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —Ü—ñ–ª—ñ
 */
function formatGoalTarget(goal) {
    switch (goal.type) {
        case 'commercial_proposals':
            return `${goal.target} –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π`;
        case 'client_shipments':
            return `${goal.target} –≤—ñ–¥–≥—Ä—É–∑–æ–∫`;
        case 'calls':
            return `${goal.target} –¥–∑–≤—ñ–Ω–∫—ñ–≤`;
        case 'meetings':
            return `${goal.target} –∑—É—Å—Ç—Ä—ñ—á–µ–π`;
        case 'revenue':
            return formatCurrency(goal.target);
        default:
            return goal.target;
    }
}

/**
 * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–æ–≥—Ä–µ—Å—É
 */
function formatGoalProgress(goal) {
    switch (goal.type) {
        case 'commercial_proposals':
            return `${goal.progress} –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π`;
        case 'client_shipments':
            return `${goal.progress} –≤—ñ–¥–≥—Ä—É–∑–æ–∫`;
        case 'calls':
            return `${goal.progress} –¥–∑–≤—ñ–Ω–∫—ñ–≤`;
        case 'meetings':
            return `${goal.progress} –∑—É—Å—Ç—Ä—ñ—á–µ–π`;
        case 'revenue':
            return formatCurrency(goal.progress);
        default:
            return goal.progress;
    }
}

/**
 * –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –ø—Ä–æ–≥—Ä–µ—Å—É —Ü—ñ–ª—ñ
 */
function calculateGoalProgress(goal) {
    if (goal.target <= 0) return 0;
    return Math.min(Math.round((goal.progress / goal.target) * 100), 100);
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–ª–∞—Å—É —Å—Ç–∞—Ç—É—Å—É
 */
function getGoalStatusClass(status) {
    switch (status) {
        case 'active':
            return 'bg-green-600 text-white';
        case 'completed':
            return 'bg-blue-600 text-white';
        case 'overdue':
            return 'bg-red-600 text-white';
        default:
            return 'bg-gray-600 text-white';
    }
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–µ–∫—Å—Ç—É —Å—Ç–∞—Ç—É—Å—É
 */
function getGoalStatusText(status) {
    switch (status) {
        case 'active':
            return '–ê–∫—Ç–∏–≤–Ω–∞';
        case 'completed':
            return '–ó–∞–≤–µ—Ä—à–µ–Ω–∞';
        case 'overdue':
            return '–ü—Ä–æ—Å—Ç—Ä–æ—á–µ–Ω–∞';
        default:
            return '–ù–µ–≤—ñ–¥–æ–º–∞';
    }
}

/**
 * –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –≤–∞–ª—é—Ç–∏
 */
function formatCurrency(amount) {
    return new Intl.NumberFormat('uk-UA', {
        style: 'currency',
        currency: 'UAH',
        minimumFractionDigits: 0,
        maximumFractionDigits: 0
    }).format(amount || 0);
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ü—ñ–ª–µ–π
 */
function getGoalsCount() {
    return getState().planFactData?.goals?.length || 0;
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∞–∫—Ç–∏–≤–Ω–∏—Ö —Ü—ñ–ª–µ–π
 */
function getActiveGoalsCount() {
    return getState().planFactData?.goals?.filter(g => g.status === 'active').length || 0;
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö —Ü—ñ–ª–µ–π
 */
function getCompletedGoalsCount() {
    return getState().planFactData?.goals?.filter(g => g.status === 'completed').length || 0;
}

/**
 * –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –ø—Ä–æ—Ç–µ—Ä–º—ñ–Ω–æ–≤–∞–Ω–∏—Ö —Ü—ñ–ª–µ–π
 */
function getOverdueGoalsCount() {
    return getState().planFactData?.goals?.filter(g => g.status === 'overdue').length || 0;
}

// === –ì–õ–û–ë–ê–õ–¨–ù–Ü –§–£–ù–ö–¶–Ü–á ===

/**
 * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ü—ñ–ª–µ–π –¥–ª—è —Ç–∏–∂–Ω—è
 */
window.loadGoalsForWeek = function() {
    const goalsList = document.getElementById('goalsList');
    if (goalsList) {
        goalsList.innerHTML = renderGoalsList();
    }
};

/**
 * –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ü—ñ–ª–µ–π
 */
window.refreshGoalsData = function() {
    console.log('üîÑ –û–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —Ü—ñ–ª–µ–π...');
    renderGoalsTab();
}; 