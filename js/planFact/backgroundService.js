// backgroundService.js - –°–µ—Ä–≤—ñ—Å —Ñ–æ–Ω–æ–≤–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö

import { getState, updateState, subscribe } from './state.js';

/**
 * –ò–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö (15 –º–∏–Ω—É—Ç)
 */
const UPDATE_INTERVAL = 15 * 60 * 1000; // 15 –º–∏–Ω—É—Ç

/**
 * ID –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
 */
let updateIntervalId = null;

/**
 * –§–ª–∞–≥ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞
 */
let isServiceActive = false;

/**
 * –ü–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
 */
let lastUpdateTime = null;

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ HTML —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–∞—à–±–æ—Ä–¥–∞
 */
function checkDashboardElementsReady() {
    const dashboardLoading = document.getElementById('dashboard-loading');
    const overallStats = document.getElementById('overall-stats');
    const departmentsSection = document.getElementById('departments-section');
    const managersSection = document.getElementById('managers-section');
    
    const allElementsExist = dashboardLoading && overallStats && departmentsSection && managersSection;
    
    if (!allElementsExist) {
        console.log('üîç –°—Ç–∞—Ç—É—Å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –¥–∞—à–±–æ—Ä–¥–∞:', {
            'dashboard-loading': !!dashboardLoading,
            'overall-stats': !!overallStats,
            'departments-section': !!departmentsSection,
            'managers-section': !!managersSection
        });
    }
    
    return allElementsExist;
}

/**
 * –§—É–Ω–∫—Ü–∏—è —Ñ–æ–Ω–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
 */
async function updateDashboardInBackground() {
    try {
        console.log('üîÑ –§–æ–Ω–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –¥–∞—à–±–æ—Ä–¥—É...');
        
        const startTime = Date.now();
        
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        const currentState = getState();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ API
        const freshData = await fetchSalesData();
        if (freshData && freshData.length > 0) {
            updateState({
                apiSalesCache: freshData,
                lastUpdate: new Date().toISOString()
            });
            
            // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å –≥–ª–æ–±–∞–ª—å–Ω—ã–º –æ–±—ä–µ–∫—Ç–æ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            // if (window.planFactData) {
            //     window.planFactData.salesData = freshData;
            // }
            
            console.log(`‚úÖ –§–æ–Ω–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ: ${freshData.length} –∑–∞–ø–∏—Å—ñ–≤ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ`);
        } else {
            console.warn('‚ö†Ô∏è –§–æ–Ω–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: –Ω–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –Ω–æ–≤—ñ –¥–∞–Ω—ñ');
        }
        
        // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞ –µ—Å–ª–∏ –æ–Ω –∞–∫—Ç–∏–≤–µ–Ω
        if (currentState.currentTab === 'dashboard') {
            await recalculateDashboardMetrics();
        }
        
        lastUpdateTime = Date.now();
        const duration = Date.now() - startTime;
        console.log(`‚è±Ô∏è –§–æ–Ω–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω–æ –∑–∞ ${duration}ms`);
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:', error);
    }
}

/**
 * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂ –∏–∑ API
 */
async function fetchSalesData() {
    try {
        console.log('üì° –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–≤—ñ–∂–∏—Ö –¥–∞–Ω–∏—Ö –∑ API...');
        
        const response = await fetch('https://fastapi.lookfort.com/nomenclature.analysis');
        
        if (!response.ok) {
            throw new Error(`HTTP ${response.status}: ${response.statusText}`);
        }
        
        const data = await response.json();
        
        if (!Array.isArray(data)) {
            throw new Error('API –ø–æ–≤–µ—Ä–Ω—É–≤ –Ω–µ–≤–∞–ª—ñ–¥–Ω—ñ –¥–∞–Ω—ñ (–Ω–µ –º–∞—Å–∏–≤)');
        }
        
        console.log(`üìä –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ ${data.length} —Å–≤—ñ–∂–∏—Ö –∑–∞–ø–∏—Å—ñ–≤`);
        return data;
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ API:', error);
        return null;
    }
}

/**
 * –ü–µ—Ä–µ—Å—á–µ—Ç –º–µ—Ç—Ä–∏–∫ –¥–∞—à–±–æ—Ä–¥–∞
 */
async function recalculateDashboardMetrics() {
    try {
        console.log('üìä –ü–µ—Ä–µ—Ä–∞—Ö—É–Ω–æ–∫ –º–µ—Ç—Ä–∏–∫ –¥–∞—à–±–æ—Ä–¥—É...');
        
        const currentState = getState();
        const { currentFilters } = currentState;
        
        // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –º–µ—Å—è—Ü–∞
        let month = currentFilters.month;
        if (!month) {
            month = new Date().toISOString().slice(0, 7); // YYYY-MM
        }
        
        console.log('üîç –§—ñ–ª—å—Ç—Ä–∏ –∑ —Ñ–æ–Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É:', { 
            month, 
            departmentId: currentFilters.departmentId, 
            managerId: currentFilters.managerId 
        });
        
        // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–∞—à–±–æ—Ä–¥–∞
        const { getActivePlansForDashboard, loadSalesFactsForPlans, calculateFocusTasksFacts } = await import('./dashboard.js');
        
        // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–ª–∞–Ω—ã
        const plans = await getActivePlansForDashboard(
            month,
            currentFilters.departmentId,
            currentFilters.managerId
        );
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–∫—Ç—ã –ø—Ä–æ–¥–∞–∂
        const salesFacts = await loadSalesFactsForPlans(plans);
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ñ–æ–∫—É—Å–Ω—ã–µ –∑–∞–¥–∞—á–∏
        const focusFacts = await calculateFocusTasksFacts(plans);
        
        // –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        const { combinePlanData } = await import('./dashboard.js');
        const dashboardData = combinePlanData(plans, salesFacts, focusFacts);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        updateState({
            dashboardData: {
                plans,
                salesFacts,
                focusFacts,
                lastCalculated: new Date().toISOString()
            }
        });
        
        // –†–µ–Ω–¥–µ—Ä–∏–º –¥–∞–Ω–Ω—ã–µ –≤ UI –µ—Å–ª–∏ –º—ã –Ω–∞ –≤–∫–ª–∞–¥–∫–µ –¥–∞—à–±–æ—Ä–¥–∞
        const currentTab = getState().currentTab;
        if (currentTab === 'dashboard') {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å HTML —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–∞—à–±–æ—Ä–¥–∞
            if (checkDashboardElementsReady()) {
                console.log('üé® –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–∞–Ω–∏—Ö –∑ —Ñ–æ–Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É...');
                const { renderDashboardData } = await import('./dashboard.js');
                await renderDashboardData(
                    dashboardData, 
                    currentFilters.month,
                    currentFilters.departmentId,
                    currentFilters.managerId
                );
                console.log('‚úÖ –î–∞–Ω—ñ –≤—ñ–¥—Ä–µ–Ω–¥–µ—Ä–µ–Ω–æ –∑ —Ñ–æ–Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É');
            } else {
                console.log('‚è≥ –í–∫–ª–∞–¥–∫–∞ –¥–∞—à–±–æ—Ä–¥–∞ —â–µ –Ω–µ –≤—ñ–¥—Ä–µ–Ω–¥–µ—Ä–µ–Ω–∞, –¥–∞–Ω—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ —Å—Ç–∞–Ω—ñ');
                
                // –î–æ–±–∞–≤–ª—è–µ–º –±–æ–ª–µ–µ –¥–ª–∏—Ç–µ–ª—å–Ω—É—é –∑–∞–¥–µ—Ä–∂–∫—É –∏ –ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑
                setTimeout(async () => {
                    if (checkDashboardElementsReady()) {
                        console.log('üé® –ü–æ–≤—Ç–æ—Ä–Ω–∞ —Å–ø—Ä–æ–±–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É –¥–∞–Ω–∏—Ö –∑ —Ñ–æ–Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É...');
                        const { renderDashboardData } = await import('./dashboard.js');
                        await renderDashboardData(
                            dashboardData, 
                            currentFilters.month,
                            currentFilters.departmentId,
                            currentFilters.managerId
                        );
                        console.log('‚úÖ –î–∞–Ω—ñ –≤—ñ–¥—Ä–µ–Ω–¥–µ—Ä–µ–Ω–æ –∑ —Ñ–æ–Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É (–ø–æ–≤—Ç–æ—Ä–Ω–∞ —Å–ø—Ä–æ–±–∞)');
                    } else {
                        console.log('‚ö†Ô∏è –ï–ª–µ–º–µ–Ω—Ç–∏ –¥–∞—à–±–æ—Ä–¥–∞ –≤—Å–µ —â–µ –Ω–µ –≥–æ—Ç–æ–≤—ñ –ø—ñ—Å–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ—ó —Å–ø—Ä–æ–±–∏');
                    }
                }, 3000); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–æ 3 —Å–µ–∫—É–Ω–¥
            }
        }
        
        console.log('‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ –¥–∞—à–±–æ—Ä–¥—É –ø–µ—Ä–µ—Ä–∞—Ö–æ–≤–∞–Ω–æ');
        
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ—Ä–∞—Ö—É–Ω–∫—É –º–µ—Ç—Ä–∏–∫:', error);
    }
}

/**
 * –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
 */
export function startBackgroundService() {
    if (isServiceActive) {
        console.warn('‚ö†Ô∏è –§–æ–Ω–æ–≤–∏–π —Å–µ—Ä–≤—ñ—Å –≤–∂–µ –∞–∫—Ç–∏–≤–Ω–∏–π');
        return;
    }
    
    console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è...');
    
    // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ –ø–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
    updateDashboardInBackground();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª
    updateIntervalId = setInterval(updateDashboardInBackground, UPDATE_INTERVAL);
    
    isServiceActive = true;
    lastUpdateTime = Date.now();
    
    console.log(`‚úÖ –§–æ–Ω–æ–≤–∏–π —Å–µ—Ä–≤—ñ—Å –∑–∞–ø—É—â–µ–Ω–æ (—ñ–Ω—Ç–µ—Ä–≤–∞–ª: ${UPDATE_INTERVAL / 1000 / 60} —Ö–≤–∏–ª–∏–Ω)`);
}

/**
 * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
 */
export function stopBackgroundService() {
    if (!isServiceActive) {
        console.warn('‚ö†Ô∏è –§–æ–Ω–æ–≤–∏–π —Å–µ—Ä–≤—ñ—Å –Ω–µ –∞–∫—Ç–∏–≤–Ω–∏–π');
        return;
    }
    
    console.log('üõë –ó—É–ø–∏–Ω–∫–∞ —Ñ–æ–Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É...');
    
    if (updateIntervalId) {
        clearInterval(updateIntervalId);
        updateIntervalId = null;
    }
    
    isServiceActive = false;
    
    console.log('‚úÖ –§–æ–Ω–æ–≤–∏–π —Å–µ—Ä–≤—ñ—Å –∑—É–ø–∏–Ω–µ–Ω–æ');
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞
 */
export function getServiceStatus() {
    return {
        isActive: isServiceActive,
        lastUpdate: lastUpdateTime,
        interval: UPDATE_INTERVAL,
        nextUpdate: lastUpdateTime ? lastUpdateTime + UPDATE_INTERVAL : null
    };
}

/**
 * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
 */
export async function forceUpdate() {
    console.log('üîß –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö...');
    
    try {
        // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        await updateDashboardInBackground();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
        const currentState = getState();
        if (currentState.dashboardData && currentState.dashboardData.plans) {
            console.log('‚úÖ –ü—Ä–∏–º—É—Å–æ–≤–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ');
            return true;
        } else {
            console.warn('‚ö†Ô∏è –î–∞–Ω—ñ –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ –ø—ñ—Å–ª—è –ø—Ä–∏–º—É—Å–æ–≤–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è');
            return false;
        }
    } catch (error) {
        console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏–º—É—Å–æ–≤–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:', error);
        throw error;
    }
}

/**
 * –ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
 */
export function setUpdateInterval(minutes) {
    const newInterval = minutes * 60 * 1000;
    
    console.log(`‚è∞ –ó–º—ñ–Ω–∞ —ñ–Ω—Ç–µ—Ä–≤–∞–ª—É –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: ${UPDATE_INTERVAL / 1000 / 60} ‚Üí ${minutes} —Ö–≤–∏–ª–∏–Ω`);
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
    if (updateIntervalId) {
        clearInterval(updateIntervalId);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª
    UPDATE_INTERVAL = newInterval;
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –µ—Å–ª–∏ —Å–µ—Ä–≤–∏—Å –∞–∫—Ç–∏–≤–µ–Ω
    if (isServiceActive) {
        updateIntervalId = setInterval(updateDashboardInBackground, UPDATE_INTERVAL);
    }
}

/**
 * –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ—Å—á–µ—Ç–∞
 */
export function setupStateSubscription() {
    const unsubscribe = subscribe((newState, oldState) => {
        // –ï—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª–∏—Å—å —Ñ–∏–ª—å—Ç—Ä—ã –∏ –∞–∫—Ç–∏–≤–µ–Ω –¥–∞—à–±–æ—Ä–¥ - –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º
        if (newState.currentTab === 'dashboard' && 
            JSON.stringify(newState.currentFilters) !== JSON.stringify(oldState.currentFilters)) {
            
            console.log('üîÑ –§—ñ–ª—å—Ç—Ä–∏ –∑–º—ñ–Ω–∏–ª–∏—Å—è, –ø–µ—Ä–µ—Ä–∞—Ö–æ–≤—É—î–º–æ –¥–∞—à–±–æ—Ä–¥...');
            recalculateDashboardMetrics();
        }
    });
    
    return unsubscribe;
}

/**
 * –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
 */
if (typeof window !== 'undefined') {
    window.backgroundService = {
        start: startBackgroundService,
        stop: stopBackgroundService,
        getStatus: getServiceStatus,
        forceUpdate,
        setInterval: setUpdateInterval
    };
} 