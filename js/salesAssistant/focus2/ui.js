// UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –§–æ–∫—É—Å 2.0
import * as firebase from '../../firebase.js';
import { getFocusNotes, setFocusNote, renderClientsTableWithNotes, attachTableHandlers, exportToCSV, getClientLink } from './notes.js';

export class FocusUI {
  constructor() {
    this.currentView = 'tasks';
    this.components = {};
  }
  
  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
   */
  async init() {
    console.log('üé® UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∏ –§–æ–∫—É—Å 2.0 —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
  }
  
  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á –∑ –≥—Ä—É–ø—É–≤–∞–Ω–Ω—è–º —Ç–∞ –∞–Ω—ñ–º–∞—Ü—ñ—î—é
   */
  renderTasksList(tasks = []) {
    if (tasks.length === 0) {
      return `
        <div class="text-center py-12 focus-empty-state">
          <div class="text-gray-400 text-6xl mb-4">üìã</div>
          <h3 class="text-xl font-semibold text-white mb-2">–ù–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–∏—Ö –∑–∞–¥–∞—á</h3>
          <p class="text-gray-400 mb-6">–°—Ç–≤–æ—Ä—ñ—Ç—å –ø–µ—Ä—à—É —Ñ–æ–∫—É—Å–Ω—É –∑–∞–¥–∞—á—É –¥–ª—è –ø–æ—á–∞—Ç–∫—É —Ä–æ–±–æ—Ç–∏</p>
          <button onclick="window.focus2Components?.taskConstructor?.showCreateModal()" 
                  class="px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-500 transition-all duration-200 hover:scale-105 focus-action-btn">
            –°—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–¥–∞—á—É
          </button>
        </div>
      `;
    }
    
    // –ì—Ä—É–ø—É—î–º–æ –∑–∞–¥–∞—á—ñ –∑–∞ —Å—Ç–∞—Ç—É—Å–æ–º
    const groupedTasks = this.groupTasksByStatus(tasks);
    
    return `
      <div class="space-y-6">
        <div class="flex items-center justify-between mb-6">
          <h2 class="text-2xl font-bold text-white">–§–æ–∫—É—Å–Ω—ñ –∑–∞–¥–∞—á—ñ</h2>
          <button onclick="window.focus2Components?.taskConstructor?.showCreateModal()" 
                  class="px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-500 transition-all duration-200 hover:scale-105 flex items-center gap-2 focus-action-btn">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
            </svg>
            –ù–æ–≤–∞ –∑–∞–¥–∞—á–∞
          </button>
        </div>
        
        <!-- –§—ñ–ª—å—Ç—Ä–∏ -->
        <div class="bg-gray-800 rounded-lg p-4 mb-6 border border-gray-700">
          <div class="flex flex-wrap gap-4 items-end">
            <div>
              <label class="block text-gray-300 text-sm mb-1">–°—Ç–∞—Ç—É—Å</label>
              <select id="task-status-filter" class="bg-gray-700 text-white rounded px-3 py-2 text-sm border border-gray-600 focus:border-blue-500 focus:outline-none focus-filter-input">
                <option value="">–í—Å—ñ —Å—Ç–∞—Ç—É—Å–∏</option>
                <option value="active">–ê–∫—Ç–∏–≤–Ω—ñ</option>
                <option value="paused">–ü—Ä–∏–∑—É–ø–∏–Ω–µ–Ω—ñ</option>
                <option value="completed">–ó–∞–≤–µ—Ä—à–µ–Ω—ñ</option>
                <option value="archived">–ê—Ä—Ö—ñ–≤–æ–≤–∞–Ω—ñ</option>
              </select>
            </div>
            <div>
              <label class="block text-gray-300 text-sm mb-1">–ü–µ—Ä—ñ–æ–¥</label>
              <select id="task-period-filter" class="bg-gray-700 text-white rounded px-3 py-2 text-sm border border-gray-600 focus:border-blue-500 focus:outline-none focus-filter-input">
                <option value="">–í—Å—ñ –ø–µ—Ä—ñ–æ–¥–∏</option>
                <option value="current">–ü–æ—Ç–æ—á–Ω–∏–π –º—ñ—Å—è—Ü—å</option>
                <option value="next">–ù–∞—Å—Ç—É–ø–Ω–∏–π –º—ñ—Å—è—Ü—å</option>
                <option value="past">–ú–∏–Ω—É–ª—ñ –º—ñ—Å—è—Ü—ñ</option>
              </select>
            </div>
            <div>
              <label class="block text-gray-300 text-sm mb-1">–ü–æ—à—É–∫</label>
              <input type="text" id="task-search-filter" placeholder="–ù–∞–∑–≤–∞ –∑–∞–¥–∞—á—ñ..." 
                     class="bg-gray-700 text-white rounded px-3 py-2 text-sm border border-gray-600 focus:border-blue-500 focus:outline-none focus-filter-input">
            </div>
            <div class="flex gap-2">
              <button id="task-filter-reset" class="px-3 py-2 bg-gray-600 text-white rounded text-sm hover:bg-gray-500 transition-colors duration-200 focus-action-btn">
                –°–∫–∏–Ω—É—Ç–∏
              </button>
              <button id="task-filter-apply" class="px-3 py-2 bg-blue-600 text-white rounded text-sm hover:bg-blue-500 transition-colors duration-200 focus-action-btn">
                –û–Ω–æ–≤–∏—Ç–∏
              </button>
            </div>
          </div>
        </div>
        
        <!-- –ì—Ä—É–ø—É–≤–∞–Ω–Ω—è –∑–∞–¥–∞—á –∑–∞ —Å—Ç–∞—Ç—É—Å–æ–º -->
        ${this.renderTaskGroups(groupedTasks)}
      </div>
    `;
    
    // –ü—Ä–∏–≤'—è–∑—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–æ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –∑–∞–¥–∞—á
    setTimeout(() => {
      if (window.focus2Components?.filters) {
        window.focus2Components.filters.attachFilterEventHandlers();
      }
      
      // –ü—Ä–∏–≤'—è–∑—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –∑–∞–¥–∞—á
      const resetButton = document.getElementById('task-filter-reset');
      const applyButton = document.getElementById('task-filter-apply');
      
      if (resetButton) {
        resetButton.onclick = () => {
          // –°–∫–∏–¥–∞—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
          const statusFilter = document.getElementById('task-status-filter');
          const periodFilter = document.getElementById('task-period-filter');
          const searchFilter = document.getElementById('task-search-filter');
          
          if (statusFilter) statusFilter.value = '';
          if (periodFilter) periodFilter.value = '';
          if (searchFilter) searchFilter.value = '';
          
          // –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ —Å–∫–∏–Ω—É—Ç—ñ —Ñ—ñ–ª—å—Ç—Ä–∏
          this.applyTaskFilters();
        };
      }
      
      if (applyButton) {
        applyButton.onclick = () => {
          this.applyTaskFilters();
        };
      }
    }, 100);
  }
  
  /**
   * –ì—Ä—É–ø—É–≤–∞–Ω–Ω—è –∑–∞–¥–∞—á –∑–∞ —Å—Ç–∞—Ç—É—Å–æ–º
   */
  groupTasksByStatus(tasks) {
    const groups = {
      active: { tasks: [], title: '–ê–∫—Ç–∏–≤–Ω—ñ –∑–∞–¥–∞—á—ñ', icon: 'üü¢', color: 'green' },
      paused: { tasks: [], title: '–ü—Ä–∏–∑—É–ø–∏–Ω–µ–Ω—ñ –∑–∞–¥–∞—á—ñ', icon: 'üü°', color: 'yellow' },
      completed: { tasks: [], title: '–ó–∞–≤–µ—Ä—à–µ–Ω—ñ –∑–∞–¥–∞—á—ñ', icon: 'üîµ', color: 'blue' },
      archived: { tasks: [], title: '–ê—Ä—Ö—ñ–≤–æ–≤–∞–Ω—ñ –∑–∞–¥–∞—á—ñ', icon: '‚ö´', color: 'gray' }
    };
    
    tasks.forEach(task => {
      const status = task.status || 'active';
      if (groups[status]) {
        groups[status].tasks.push(task);
      }
    });
    
    return groups;
  }
  
  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≥—Ä—É–ø –∑–∞–¥–∞—á
   */
  renderTaskGroups(groupedTasks) {
    let html = '';
    
    // –°–ø–æ—á–∞—Ç–∫—É –ø–æ–∫–∞–∑—É—î–º–æ –∞–∫—Ç–∏–≤–Ω—ñ –∑–∞–¥–∞—á—ñ
    if (groupedTasks.active.tasks.length > 0) {
      html += this.renderTaskGroup(groupedTasks.active, 'active');
    }
    
    // –ü–æ—Ç—ñ–º —ñ–Ω—à—ñ –≥—Ä—É–ø–∏
    ['paused', 'completed', 'archived'].forEach(status => {
      if (groupedTasks[status].tasks.length > 0) {
        html += this.renderTaskGroup(groupedTasks[status], status);
      }
    });
    
    return html;
  }
  
  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≥—Ä—É–ø–∏ –∑–∞–¥–∞—á
   */
  renderTaskGroup(group, status) {
    const groupColors = {
      active: { bg: 'bg-green-900/20', border: 'border-green-500/30', text: 'text-green-400' },
      paused: { bg: 'bg-yellow-900/20', border: 'border-yellow-500/30', text: 'text-yellow-400' },
      completed: { bg: 'bg-blue-900/20', border: 'border-blue-500/30', text: 'text-blue-400' },
      archived: { bg: 'bg-gray-900/20', border: 'border-gray-500/30', text: 'text-gray-400' }
    };
    
    const colors = groupColors[status] || groupColors.archived;
    
    return `
      <div class="mb-8 focus-task-group">
        <div class="flex items-center gap-3 mb-4 focus-group-header">
          <span class="text-2xl">${group.icon}</span>
          <h3 class="text-lg font-semibold ${colors.text}">${group.title}</h3>
          <span class="px-2 py-1 bg-gray-700 text-gray-300 rounded-full text-xs">${group.tasks.length}</span>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
          ${group.tasks.map(task => this.renderTaskCard(task)).join('')}
        </div>
      </div>
    `;
  }
  
  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–∞—Ä—Ç–æ—á–∫–∏ –∑–∞–¥–∞—á–∏ –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é
   */
  renderTaskCard(task) {
    const statusColors = {
      active: { bg: 'bg-green-600', border: 'border-green-500', hover: 'hover:border-green-400' },
      paused: { bg: 'bg-yellow-600', border: 'border-yellow-500', hover: 'hover:border-yellow-400' },
      completed: { bg: 'bg-blue-600', border: 'border-blue-500', hover: 'hover:border-blue-400' },
      archived: { bg: 'bg-gray-600', border: 'border-gray-500', hover: 'hover:border-gray-400' }
    };
    
    const statusText = {
      active: '–ê–∫—Ç–∏–≤–Ω–∞',
      paused: '–ü—Ä–∏–∑—É–ø–∏–Ω–µ–Ω–∞',
      completed: '–ó–∞–≤–µ—Ä—à–µ–Ω–∞',
      archived: '–ê—Ä—Ö—ñ–≤–æ–≤–∞–Ω–∞'
    };
    
    const colors = statusColors[task.status] || statusColors.archived;
    
    return `
      <div class="bg-gray-800 rounded-lg p-4 border ${colors.border} hover:${colors.hover} transition-all duration-300 hover:scale-105 hover:shadow-lg hover:shadow-blue-500/20 cursor-pointer group focus-task-card" 
           onclick="window.focus2Components?.ui?.showTaskDetails('${task.id}')">
        
        <!-- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∑ –∞–Ω—ñ–º–∞—Ü—ñ—î—é -->
        <div class="flex items-start justify-between mb-3">
          <div class="flex-1 min-w-0">
            <h3 class="text-sm font-semibold text-white mb-1 truncate group-hover:text-blue-300 transition-colors duration-200">
              ${task.title || '–ë–µ–∑ –Ω–∞–∑–≤–∏'}
            </h3>
            <p class="text-gray-400 text-xs mb-2 line-clamp-2 group-hover:text-gray-300 transition-colors duration-200">
              ${task.description || '–ë–µ–∑ –æ–ø–∏—Å—É'}
            </p>
          </div>
          <span class="px-2 py-1 text-xs font-medium rounded-full ${colors.bg} text-white ml-2 flex-shrink-0 group-hover:scale-110 transition-transform duration-200 focus-status-badge">
            ${statusText[task.status] || '–ù–µ–≤—ñ–¥–æ–º–∏–π'}
          </span>
        </div>
        
        <!-- –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –∑–∞–¥–∞—á—É -->
        <div class="space-y-2 mb-3">
          <div class="flex items-center text-xs">
            <span class="text-gray-400 w-16">–ü—Ä–æ–¥—É–∫—Ç–∏:</span>
            <span class="text-white font-medium">${task.products?.length || 0} –ø–æ–∑–∏—Ü—ñ–π</span>
          </div>
          <div class="flex items-center text-xs">
            <span class="text-gray-400 w-16">–°—Ç–≤–æ—Ä–µ–Ω–∞:</span>
            <span class="text-white">${this.formatDate(task.createdAt)}</span>
          </div>
          ${task.periodFrom ? `
            <div class="flex items-center text-xs">
              <span class="text-gray-400 w-16">–ü–µ—Ä—ñ–æ–¥:</span>
              <span class="text-white">${this.formatDate(task.periodFrom)} - ${this.formatDate(task.periodTo)}</span>
            </div>
          ` : ''}
          ${task.clientsSnapshot ? `
            <div class="flex items-center text-xs">
              <span class="text-gray-400 w-16">–ö–ª—ñ—î–Ω—Ç–∏:</span>
              <span class="text-white font-medium">${task.clientsSnapshot.length} –∫–ª—ñ—î–Ω—Ç—ñ–≤</span>
            </div>
          ` : ''}
        </div>
        
        <!-- –ü—Ä–æ–≥—Ä–µ—Å –±–∞—Ä (—è–∫—â–æ —î –¥–∞–Ω—ñ –ø—Ä–æ –ø—Ä–æ–≥—Ä–µ—Å) -->
        ${this.renderTaskProgress(task)}
        
        <!-- –ö–Ω–æ–ø–∫–∏ –¥—ñ–π -->
        <div class="flex items-center justify-between pt-3 border-t border-gray-700 mt-3">
          <div class="flex gap-2">
            <button onclick="event.stopPropagation(); window.focus2Components?.ui?.showTaskDetails('${task.id}')" 
                    class="px-3 py-1 bg-gray-600 text-white rounded text-xs hover:bg-gray-500 transition-colors duration-200 group-hover:bg-blue-600 group-hover:hover:bg-blue-500 focus-action-btn">
              –î–µ—Ç–∞–ª—ñ
            </button>
            <button onclick="event.stopPropagation(); window.focus2Components?.ui?.generateTaskReport('${task.id}')" 
                    class="px-3 py-1 bg-blue-600 text-white rounded text-xs hover:bg-blue-500 transition-colors duration-200 focus-action-btn">
              –ó–≤—ñ—Ç
            </button>
          </div>
          <div class="flex gap-1 opacity-0 group-hover:opacity-100 transition-opacity duration-200">
            <button onclick="event.stopPropagation(); window.focus2Components?.ui?.editTask('${task.id}')" 
                    class="p-1 text-gray-400 hover:text-white transition-colors duration-200 focus-action-btn">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path>
              </svg>
            </button>
            <button onclick="event.stopPropagation(); window.focus2Components?.ui?.archiveTask('${task.id}')" 
                    class="p-1 text-gray-400 hover:text-red-400 transition-colors duration-200 focus-action-btn">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
              </svg>
            </button>
          </div>
        </div>
      </div>
    `;
  }
  
  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –ø—Ä–æ–≥—Ä–µ—Å –±–∞—Ä—É –∑–∞–¥–∞—á—ñ
   */
  renderTaskProgress(task) {
    // –Ø–∫—â–æ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö –ø—Ä–æ –ø—Ä–æ–≥—Ä–µ—Å, –Ω–µ –ø–æ–∫–∞–∑—É—î–º–æ
    if (!task.clientsSnapshot || !Array.isArray(task.clientsSnapshot)) {
      return '';
    }
    
    const totalClients = task.clientsSnapshot.length;
    const completedClients = task.clientsSnapshot.filter(client => {
      // –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –ª–æ–≥—ñ–∫—É –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤
      // –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —á–µ—Ä–µ–∑ –Ω–æ—Ç–∞—Ç–∫–∏ –∞–±–æ —Å—Ç–∞—Ç—É—Å
      return false; // –ü–æ–∫–∏ —â–æ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ false
    }).length;
    
    const progressPercent = totalClients > 0 ? (completedClients / totalClients) * 100 : 0;
    
    return `
      <div class="mb-3">
        <div class="flex items-center justify-between text-xs mb-1">
          <span class="text-gray-400">–ü—Ä–æ–≥—Ä–µ—Å</span>
          <span class="text-white">${completedClients}/${totalClients}</span>
        </div>
        <div class="w-full bg-gray-700 rounded-full h-2">
          <div class="bg-blue-600 h-2 rounded-full transition-all duration-300 focus-progress-bar" 
               style="width: ${progressPercent}%"></div>
        </div>
      </div>
    `;
  }
  
  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–µ—Ç–∞–ª–µ–π –∑–∞–¥–∞—á–∏
   */
  async renderTaskDetails(taskId) {
    try {
      console.log('üìã –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–µ—Ç–∞–ª–µ–π –∑–∞–¥–∞—á—ñ:', taskId);
      
      const task = window.focus2Data?.tasks?.find(t => t.id === taskId);
      if (!task) {
        return '<div class="text-red-400">–ó–∞–¥–∞—á—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</div>';
      }

      // Start with basic task info first (fast rendering)
      const basicInfo = `
        <div class="bg-gray-800 rounded-lg p-4 w-full">
          <!-- –ö–æ–º–ø–∞–∫—Ç–Ω–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ -->
          <div class="flex items-center justify-between mb-4">
            <div>
              <h2 class="text-xl font-bold text-white">${task.title || '–ë–µ–∑ –Ω–∞–∑–≤–∏'}</h2>
              <div class="flex items-center space-x-4 text-sm text-gray-400 mt-1">
                <span>–°—Ç–∞—Ç—É—Å: ${task.status}</span>
                <span>–°—Ç–≤–æ—Ä–µ–Ω–∞: ${this.formatDate(task.createdAt)}</span>
                ${task.periodFrom ? `<span>–ü–µ—Ä—ñ–æ–¥: ${this.formatDate(task.periodFrom)} - ${this.formatDate(task.periodTo)}</span>` : ''}
                <span>–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞: ${task.products?.length || 0} –ø–æ–∑–∏—Ü—ñ–π</span>
              </div>
            </div>
            <div class="flex space-x-2">
              <button onclick="window.focus2Components?.ui?.generateTaskReport('${taskId}')" 
                      class="px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-500">
                –ó–≤—ñ—Ç
              </button>
              <button onclick="window.focus2Components?.ui?.editTask('${taskId}')" 
                      class="px-3 py-1 bg-gray-600 text-white rounded text-sm hover:bg-gray-500">
                –†–µ–¥–∞–≥—É–≤–∞—Ç–∏
              </button>
            </div>
          </div>

          <!-- –ö–æ–º–ø–∞–∫—Ç–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è (–∑–∞–≤–∂–¥–∏ –∑–≥–æ—Ä–Ω—É—Ç–∞) -->
          <div class="mb-4">
            <button onclick="toggleSection('task-details')" 
                    class="flex items-center justify-between w-full p-2 bg-gray-700 rounded text-sm hover:bg-gray-600 transition-colors">
              <span class="text-gray-300">–î–µ—Ç–∞–ª—ñ –∑–∞–¥–∞—á—ñ</span>
              <svg id="task-details-icon" class="w-4 h-4 text-gray-400 transform transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
              </svg>
            </button>
            <div id="task-details" class="hidden mt-2 p-3 bg-gray-700 rounded text-sm">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
                <div>
                  <span class="text-gray-400">–§–æ–∫—É—Å–Ω–∞ –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞:</span>
                  <div class="mt-1">
                    ${task.products?.slice(0, 5).map(code => `
                      <span class="inline-block bg-blue-600 text-white px-2 py-1 rounded text-xs mr-1 mb-1">
                        ${this.getNomenclatureName(code)}
                      </span>
                    `).join('') || '<span class="text-gray-400">–ù–µ –æ–±—Ä–∞–Ω–∞</span>'}
                    ${task.products?.length > 5 ? `<span class="text-gray-400 text-xs">... —Ç–∞ —â–µ ${task.products.length - 5}</span>` : ''}
                  </div>
                </div>
                <div>
                  <span class="text-gray-400">–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∞–Ω–∞–ª—ñ–∑—É:</span>
                  <div class="mt-1">
                    ${this.renderParameters(task.parameters)}
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- –í–∫–ª–∞–¥–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ -->
          <div class="mb-4" id="parameter-tabs-container">
            ${this.renderParameterTabs(taskId)}
          </div>
          
          <!-- –§–∏–ª—å—Ç—Ä—ã –∫–ª–∏–µ–Ω—Ç–æ–≤ -->
          <div class="mb-4" id="client-filters-container">
            ${this.renderClientFilters(taskId)}
          </div>
          
          <!-- –ö–ª–∏–µ–Ω—Ç—ã (—Å –∑–∞–≥—Ä—É–∑–∫–æ–π) -->
          <div class="mb-4">
            <div class="flex items-center justify-between mb-3">
              <h3 class="text-lg font-semibold text-white">–ó–Ω–∞–π–¥–µ–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∏</h3>
              <div class="flex space-x-2">
                <button onclick="window.focus2Components?.ui?.exportClientsToCSV('${taskId}')" 
                        class="px-3 py-1 bg-green-600 text-white rounded text-sm hover:bg-green-500">
                  üìä –ï–∫—Å–ø–æ—Ä—Ç CSV
                </button>
                <button onclick="window.focus2Components?.ui?.showSimpleClientsTable('${taskId}')" 
                        class="px-3 py-1 bg-gray-600 text-white rounded text-sm hover:bg-gray-500">
                  üìã –ü—Ä–æ—Å—Ç–∏–π –ø–µ—Ä–µ–≥–ª—è–¥
                </button>
              </div>
            </div>
            <div id="clients-container" class="bg-gray-700 rounded-lg p-4">
              <div class="text-center py-8">
                <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500 mx-auto mb-4"></div>
                <p class="text-gray-400">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤...</p>
              </div>
            </div>
          </div>
        </div>
      `;

      // Return basic info immediately for fast rendering
      return basicInfo;

    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É –¥–µ—Ç–∞–ª–µ–π –∑–∞–¥–∞—á—ñ:', error);
      return '<div class="text-red-400">–ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–¥–∞—á—ñ</div>';
    }
  }
  
  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∑–∞–¥–∞—á–∏
   */
  renderParameters(parameters) {
    if (!parameters) return '<span class="text-gray-400">–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ</span>';
    
    const paramDescriptions = {
      param1: '–ö—É–ø—É–≤–∞–ª–∏ —Ä–∞–Ω—ñ—à–µ',
      param2: '–ù–µ –∫—É–ø—É–≤–∞–ª–∏ –¥–Ω—ñ–≤',
      param3: '–ù–∏–∑—å–∫–∞ —á–∞—Å—Ç–æ—Ç–∞',
      param4: '–ù–∏–∑—å–∫–∞ —Å—É–º–∞',
      param5: '–ü–µ–≤–Ω—ñ —Å–µ–≥–º–µ–Ω—Ç–∏',
      param6: '–ü–æ—Ö–æ–∂—ñ –∫–ª—ñ—î–Ω—Ç–∏',
      param7: '–ë–µ—Ä—É—Ç—å X'
    };
    
    return Object.entries(parameters).map(([param, config]) => `
      <div class="flex items-center space-x-2 p-2 bg-gray-600 rounded text-xs">
        <div class="w-2 h-2 rounded-full ${config.enabled ? 'bg-green-500' : 'bg-gray-500'}"></div>
        <span class="text-white">${paramDescriptions[param] || param}</span>
        ${config.enabled ? `
          <span class="text-gray-400">(${this.getParameterDetails(param, config)})</span>
        ` : ''}
      </div>
    `).join('');
  }
  
  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
   */
  getParameterDetails(param, config) {
    switch (param) {
      case 'param1':
        return `–ü–µ—Ä—ñ–æ–¥: ${config.period || '–º—ñ—Å—è—Ü—å'}`;
      case 'param2':
        return `${config.days || 30} –¥–Ω—ñ–≤ –±–µ–∑ –ø–æ–∫—É–ø–æ–∫`;
      case 'param3':
        return `${config.frequency || 1} –ø–æ–∫—É–ø–æ–∫ –∑–∞ –º—ñ—Å—è—Ü—å`;
      case 'param4':
        return `${config.amount || 1000} ‚Ç¥ –∑–∞ –º—ñ—Å—è—Ü—å`;
      case 'param5':
        const segments = [];
        if (config.segments?.vip) segments.push('VIP');
        if (config.segments?.regular) segments.push('–ó–≤–∏—á–∞–π–Ω—ñ');
        if (config.segments?.new) segments.push('–ù–æ–≤—ñ');
        if (config.segments?.inactive) segments.push('–ù–µ–∞–∫—Ç–∏–≤–Ω—ñ');
        return segments.length > 0 ? `–°–µ–≥–º–µ–Ω—Ç–∏: ${segments.join(', ')}` : '–°–µ–≥–º–µ–Ω—Ç–∏ –Ω–µ –æ–±—Ä–∞–Ω—ñ';
      case 'param6':
        return `${config.similarity || 80}% —Å—Ö–æ–∂–æ—Å—Ç—ñ`;
      case 'param7':
        return `${config.products?.length || 0} —Ç–æ–≤–∞—Ä—ñ–≤ X`;
      default:
        return '–ù–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ';
    }
  }
  
  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –æ—Ç—á–µ—Ç–∞
   */
  renderReport(report) {
    if (!report) {
      return '<div class="text-gray-400">–ó–≤—ñ—Ç –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</div>';
    }
    
    return `
      <div class="bg-gray-800 rounded-lg p-6">
        <div class="flex items-center justify-between mb-6">
          <h2 class="text-2xl font-bold text-white">–ó–≤—ñ—Ç: ${report.taskTitle}</h2>
                     <div class="flex space-x-2">
             <button onclick="window.focus2Components?.ui?.exportReportToPDF()" 
                     class="px-4 py-2 bg-red-600 text-white rounded-md hover:bg-red-500">
               PDF
             </button>
             <button onclick="window.focus2Components?.ui?.exportReportToExcel()" 
                     class="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-500">
               Excel
             </button>
           </div>
        </div>
        
        <!-- –°–≤–æ–¥–∫–∞ -->
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-8">
          <div class="bg-gray-700 rounded-lg p-4">
            <h3 class="text-gray-400 text-sm">–í—Å—å–æ–≥–æ –∫–ª—ñ—î–Ω—Ç—ñ–≤</h3>
            <p class="text-2xl font-bold text-white">${report.summary.totalClients}</p>
          </div>
          <div class="bg-gray-700 rounded-lg p-4">
            <h3 class="text-gray-400 text-sm">–ü—ñ–¥—Ö–æ–¥—è—â–∏—Ö</h3>
            <p class="text-2xl font-bold text-white">${report.summary.matchedClients}</p>
          </div>
          <div class="bg-gray-700 rounded-lg p-4">
            <h3 class="text-gray-400 text-sm">–í—ñ–¥—Å–æ—Ç–æ–∫</h3>
            <p class="text-2xl font-bold text-white">${report.summary.matchPercentage}%</p>
          </div>
          <div class="bg-gray-700 rounded-lg p-4">
            <h3 class="text-gray-400 text-sm">–ü–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤</h3>
            <p class="text-2xl font-bold text-white">${report.summary.paramBreakdown.length}</p>
          </div>
        </div>
        
        <!-- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ -->
        <div class="mb-8">
          <h3 class="text-lg font-semibold text-white mb-4">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó</h3>
          <div class="space-y-3">
            ${report.recommendations.map(rec => `
              <div class="flex items-start space-x-3 p-3 bg-gray-700 rounded-md">
                <div class="flex-shrink-0">
                  <div class="w-2 h-2 rounded-full ${this.getRecommendationColor(rec.type)} mt-2"></div>
                </div>
                <div class="flex-1">
                  <p class="text-white">${rec.message}</p>
                  ${rec.action ? `
                    <button class="mt-2 px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-500">
                      ${rec.action}
                    </button>
                  ` : ''}
                </div>
              </div>
            `).join('')}
          </div>
        </div>
        
        <!-- –î–µ—Ç–∞–ª–∏ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º -->
        <div class="mb-8">
          <h3 class="text-lg font-semibold text-white mb-4">–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö</h3>
          <div class="space-y-4">
            ${report.summary.paramBreakdown.map(param => `
              <div class="flex items-center justify-between p-3 bg-gray-700 rounded-md">
                <span class="text-white">${param.description}</span>
                <span class="text-blue-400 font-semibold">${param.matched} –∫–ª—ñ—î–Ω—Ç—ñ–≤</span>
              </div>
            `).join('')}
          </div>
        </div>
        
        <!-- –ì—Ä–∞—Ñ–∏–∫–∏ -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div class="bg-gray-700 rounded-lg p-4">
            <h3 class="text-white font-semibold mb-4">–°–µ–≥–º–µ–Ω—Ç–∏ –∫–ª—ñ—î–Ω—Ç—ñ–≤</h3>
            <div id="segments-chart" class="h-64"></div>
          </div>
          <div class="bg-gray-700 rounded-lg p-4">
            <h3 class="text-white font-semibold mb-4">–¢–æ–ø –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑–∞ –≤–∏—Ä—É—á–∫–æ—é</h3>
            <div id="revenue-chart" class="h-64"></div>
          </div>
        </div>
      </div>
    `;
  }
  
  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å–ø–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤
   */
  renderClientsList(clients = [], taskId) {
    if (clients.length === 0) {
      return `
        <div class="text-center py-12">
          <div class="text-gray-400 text-6xl mb-4">üë•</div>
          <h3 class="text-xl font-semibold text-white mb-2">–ö–ª—ñ—î–Ω—Ç—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</h3>
          <p class="text-gray-400">–°–ø—Ä–æ–±—É–π—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä–∏ –∞–±–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤—É –∑–∞–¥–∞—á—É</p>
        </div>
      `;
    }
    
    return `
      <div class="space-y-4">
        <div class="flex items-center justify-between mb-6">
          <h2 class="text-2xl font-bold text-white">–ó–Ω–∞–π–¥–µ–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∏ (${clients.length})</h2>
                     <div class="flex space-x-2">
             <button onclick="window.focus2Components?.ui?.exportClientsToExcel()" 
                     class="px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-500">
               –ï–∫—Å–ø–æ—Ä—Ç
             </button>
           </div>
        </div>
        
        <div class="overflow-x-auto">
          <table class="w-full bg-gray-800 rounded-lg overflow-hidden">
            <thead class="bg-gray-700">
              <tr>
                <th class="px-4 py-3 text-left text-white font-semibold">–ö–ª—ñ—î–Ω—Ç</th>
                <th class="px-4 py-3 text-left text-white font-semibold">–ú–µ–Ω–µ–¥–∂–µ—Ä</th>
                <th class="px-4 py-3 text-left text-white font-semibold">–í–∏—Ä—É—á–∫–∞</th>
                <th class="px-4 py-3 text-left text-white font-semibold">–û—Å—Ç–∞–Ω–Ω—ñ–π –∑–∞–º–æ–≤</th>
                <th class="px-4 py-3 text-left text-white font-semibold">–°–µ–≥–º–µ–Ω—Ç</th>
                <th class="px-4 py-3 text-left text-white font-semibold">–î—ñ—ó</th>
              </tr>
            </thead>
            <tbody class="divide-y divide-gray-700">
              ${clients.map(client => this.renderClientRow(client, taskId)).join('')}
            </tbody>
          </table>
        </div>
      </div>
    `;
  }
  
  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å—Ç—Ä–æ–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞
   */
  renderClientRow(client, taskId) {
    const segmentColors = {
      vip: 'bg-purple-600',
      regular: 'bg-blue-600',
      new: 'bg-green-600',
      inactive: 'bg-gray-600'
    };
    
    return `
      <tr class="hover:bg-gray-700">
        <td class="px-4 py-3">
          <div>
            <div class="text-white font-medium">${client.name}</div>
            <div class="text-gray-400 text-sm">${client.code}</div>
          </div>
        </td>
        <td class="px-4 py-3 text-white">${client.manager || '-'}</td>
        <td class="px-4 py-3 text-white">${this.formatCurrency(client.totalRevenue || 0)}</td>
        <td class="px-4 py-3 text-white">${client.daysSinceLastPurchase ? `${client.daysSinceLastPurchase} –¥–Ω.` : '-'}</td>
        <td class="px-4 py-3">
          <span class="px-2 py-1 text-xs font-medium rounded-full ${segmentColors[client.segment] || 'bg-gray-600'} text-white">
            ${client.segment || 'new'}
          </span>
        </td>
        <td class="px-4 py-3">
          <div class="flex space-x-2">
            <button onclick="window.focus2Components?.ui?.showClientDetail('${client.code}', '${taskId}')" 
                    class="px-2 py-1 bg-blue-600 text-white rounded text-xs hover:bg-blue-500" 
                    title="–î–µ—Ç–∞–ª—ñ –∫–ª—ñ—î–Ω—Ç–∞">
              üëÅÔ∏è
            </button>
            <button onclick="window.focus2Components?.ui?.analyzeClient('${client.code}')" 
                    class="px-2 py-1 bg-green-600 text-white rounded text-xs hover:bg-green-500" 
                    title="–ê–Ω–∞–ª—ñ–∑ –∫–ª—ñ—î–Ω—Ç–∞">
              üìä
            </button>
          </div>
        </td>
      </tr>
    `;
  }
  
  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–µ—Ç–∞–ª–µ–π –∫–ª–∏–µ–Ω—Ç–∞
   */
  renderClientDetails(clientCode) {
    const client = window.focus2Data?.clients?.find(c => c.code === clientCode);
    if (!client) {
      return '<div class="text-red-400">–ö–ª—ñ—î–Ω—Ç–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ</div>';
    }
    
    return `
      <div class="bg-gray-800 rounded-lg p-6">
        <div class="flex items-center justify-between mb-6">
          <h2 class="text-2xl font-bold text-white">${client.name}</h2>
                     <button onclick="window.focus2Components?.ui?.closeClientDetails()" class="text-gray-400 hover:text-white">
             <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
               <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
             </svg>
           </button>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <h3 class="text-lg font-semibold text-white mb-4">–û—Å–Ω–æ–≤–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</h3>
            <div class="space-y-3">
              <div>
                <label class="text-gray-400 text-sm">–ö–æ–¥</label>
                <p class="text-white">${client.code}</p>
              </div>
              <div>
                <label class="text-gray-400 text-sm">–ú–µ–Ω–µ–¥–∂–µ—Ä</label>
                <p class="text-white">${client.manager || '-'}</p>
              </div>
              <div>
                <label class="text-gray-400 text-sm">–°—Ñ–µ—Ä–∞</label>
                <p class="text-white">${client.sphere || '-'}</p>
              </div>
              <div>
                <label class="text-gray-400 text-sm">–°–µ–≥–º–µ–Ω—Ç</label>
                <p class="text-white">${client.segment || 'new'}</p>
              </div>
            </div>
          </div>
          
          <div>
            <h3 class="text-lg font-semibold text-white mb-4">–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
            <div class="space-y-3">
              <div>
                <label class="text-gray-400 text-sm">–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∏—Ä—É—á–∫–∞</label>
                <p class="text-white">${this.formatCurrency(client.totalRevenue || 0)}</p>
              </div>
              <div>
                <label class="text-gray-400 text-sm">–ö—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω—å</label>
                <p class="text-white">${client.sales?.length || 0}</p>
              </div>
              <div>
                <label class="text-gray-400 text-sm">–û—Å—Ç–∞–Ω–Ω—ñ–π –∑–∞–º–æ–≤</label>
                <p class="text-white">${client.daysSinceLastPurchase ? `${client.daysSinceLastPurchase} –¥–Ω—ñ–≤ —Ç–æ–º—É` : '–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö'}</p>
              </div>
              <div>
                <label class="text-gray-400 text-sm">–°–µ—Ä–µ–¥–Ω—ñ–π —á–µ–∫</label>
                <p class="text-white">${this.formatCurrency(client.averageOrderValue || 0)}</p>
              </div>
            </div>
          </div>
        </div>
        
        <div class="mt-8">
          <h3 class="text-lg font-semibold text-white mb-4">–¢–æ–ø —Ç–æ–≤–∞—Ä–∏</h3>
          <div class="space-y-2">
            ${client.topProducts?.slice(0, 5).map(product => `
              <div class="flex items-center justify-between p-2 bg-gray-700 rounded">
                <span class="text-white">${product.name}</span>
                <span class="text-blue-400">${this.formatCurrency(product.revenue)}</span>
              </div>
            `).join('') || '<span class="text-gray-400">–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö</span>'}
          </div>
        </div>
      </div>
    `;
  }
  
  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
  
  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
   */
  formatDate(dateString) {
    if (!dateString) return '-';
    const date = new Date(dateString);
    return date.toLocaleDateString('uk-UA');
  }
  
  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª—é—Ç—ã
   */
  formatCurrency(amount) {
    return new Intl.NumberFormat('uk-UA', {
      style: 'currency',
      currency: 'UAH'
    }).format(amount);
  }
  
  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä—ã
   */
  getNomenclatureName(code) {
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –≤ nomenclatureData (API –¥–∞–Ω–Ω—ã–µ)
    const nomenclatureData = window.focus2Data?.nomenclatureData || [];
    const item = nomenclatureData.find(n => n['–ö–æ–¥'] === code || n['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞.–ö–æ–¥'] === code);
    if (item) {
      return item['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞'] || item['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞.–ù–∞–∑–≤–∞–Ω–∏–µ'] || code;
    }
    
    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–±—É–µ–º –≤ nomenclature (–∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
    const nomenclature = window.focus2Data?.nomenclature || [];
    const categoryItem = nomenclature.find(n => n['–ö–æ–¥'] === code);
    if (categoryItem) {
      return categoryItem['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞'] || code;
    }
    
    // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–¥
    return code;
  }
  
  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
   */
  getRecommendationColor(type) {
    const colors = {
      info: 'bg-blue-500',
      action: 'bg-green-500',
      priority: 'bg-red-500',
      reactivation: 'bg-yellow-500'
    };
    return colors[type] || 'bg-gray-500';
  }
  
  /**
   * –ì—Ä—É–ø—É–≤–∞–Ω–Ω—è –ø—Ä–æ–¥–∞–∂—ñ–≤ –ø–æ –¥–∞—Ç—ñ
   */
  groupSalesByDate(sales) {
    if (!sales || sales.length === 0) return [];
    
    const grouped = {};
    
    sales.forEach(sale => {
      const date = sale['–î–∞—Ç–∞'];
      const orderId = sale['ID'] || sale['–ù–æ–º–µ—Ä –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è'] || sale['–î–∞—Ç–∞']; // –ò—Å–ø–æ–ª—å–∑—É–µ–º ID –∑–∞–∫–∞–∑–∞ –∏–ª–∏ –¥–∞—Ç—É –∫–∞–∫ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É
      
      if (!grouped[orderId]) {
        grouped[orderId] = {
          date: date,
          orderId: orderId,
          sales: [],
          totalRevenue: 0
        };
      }
      grouped[orderId].sales.push(sale);
      grouped[orderId].totalRevenue += (sale['–í—ã—Ä—É—á–∫–∞'] || 0);
    });
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ —Å–Ω–∞—á–∞–ª–∞)
    return Object.values(grouped).sort((a, b) => new Date(b.date) - new Date(a.date));
  }
  
  /**
   * –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π –∑–∞–¥–∞—á–∏
   */
  async showTaskDetails(taskId) {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–¥–∞—á–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
      const tasks = window.focus2Data?.tasks || [];
      const task = tasks.find(t => t.id === taskId);
      
      if (!task) {
        console.error('‚ùå –ó–∞–¥–∞—á—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ:', taskId);
        alert('–ó–∞–¥–∞—á—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É.');
        return;
      }
      
      const container = document.getElementById('tasks-tab');
      if (container) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
        container.innerHTML = '<div class="text-center p-8"><div class="text-white">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–¥–∞—á—ñ...</div></div>';
        
        // –†–µ–Ω–¥–µ—Ä–∏–º –¥–µ—Ç–∞–ª–∏ –∑–∞–¥–∞—á–∏ (–±—ã—Å—Ç—Ä–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ)
        const taskDetails = await this.renderTaskDetails(taskId);
        container.innerHTML = taskDetails;
        
        // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
        if (task.hasClientsSnapshot) {
          const clientsContainer = document.getElementById('clients-container');
          if (clientsContainer) {
            const clientsContent = await this.loadTaskClients(taskId);
            clientsContainer.innerHTML = clientsContent;
            
            // –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã —Å –∑–∞–º–µ—Ç–∫–∞–º–∏
            attachTableHandlers(taskId);
            
            // –û–Ω–æ–≤–ª—é—î–º–æ –¥–∞–Ω—ñ –∑–∞–¥–∞—á—ñ –≤ window.focus2Data –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è clientsSnapshot
            const clientsSnapshot = await window.focus2TaskConstructor.loadClientsSnapshot(taskId);
            const taskIndex = window.focus2Data.tasks.findIndex(t => t.id === taskId);
            if (taskIndex !== -1) {
              window.focus2Data.tasks[taskIndex].clientsSnapshot = clientsSnapshot;
            }
            
            // –û–Ω–æ–≤–ª—é—î–º–æ –≤–∫–ª–∞–¥–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤
            const parameterTabsContainer = document.getElementById('parameter-tabs-container');
            if (parameterTabsContainer) {
              const parameterTabsContent = this.renderParameterTabs(taskId);
              parameterTabsContainer.innerHTML = parameterTabsContent;
            }
            
            // –û–Ω–æ–≤–ª—é—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–∏ –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
            const clientFiltersContainer = document.getElementById('client-filters-container');
            if (clientFiltersContainer) {
              const clientFiltersContent = this.renderClientFilters(taskId);
              clientFiltersContainer.innerHTML = clientFiltersContent;
            }
          }
        }
      }
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É –¥–µ—Ç–∞–ª–µ–π –∑–∞–¥–∞—á—ñ:', error);
      alert(`–ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É –¥–µ—Ç–∞–ª–µ–π: ${error.message}`);
    }
  }
  
  /**
   * –ó–∞–∫—Ä—ã—Ç–∏–µ –¥–µ—Ç–∞–ª–µ–π –∑–∞–¥–∞—á–∏
   */
  closeTaskDetails() {
    const container = document.getElementById('tasks-tab');
    if (container) {
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É –∑–∞–¥–∞—á
      this.loadTasksContent(container);
    }
  }
  
  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∑–∞–¥–∞—á
   */
  async loadTasksContent(container) {
    try {
      const tasks = window.focus2Data?.tasks || [];
      container.innerHTML = this.renderTasksList(tasks);
      
      // –ü—Ä–∏–≤'—è–∑—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–æ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –∑–∞–¥–∞—á –ø—ñ—Å–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É
      setTimeout(() => {
        if (window.focus2Components?.filters) {
          window.focus2Components.filters.attachFilterEventHandlers();
        }
      }, 100);
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É –∑–∞–¥–∞—á:', error);
      container.innerHTML = '<div class="text-center p-8 text-red-400">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–¥–∞—á</div>';
    }
  }
  
  /**
   * –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π –∫–ª–∏–µ–Ω—Ç–∞
   */
  showClientDetails(clientCode) {
    const container = document.getElementById('tasks-tab');
    if (container) {
      container.innerHTML = this.renderClientDetails(clientCode);
    }
  }
  
  /**
   * –ó–∞–∫—Ä—ã—Ç–∏–µ –¥–µ—Ç–∞–ª–µ–π –∫–ª–∏–µ–Ω—Ç–∞
   */
  closeClientDetails() {
    const container = document.getElementById('tasks-tab');
    if (container) {
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É –∫–ª–∏–µ–Ω—Ç–æ–≤
      this.loadClientsContent(container);
    }
  }
  
  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤
   */
  async loadClientsContent(container) {
    try {
      const clients = window.focus2Data?.clients || [];
      container.innerHTML = this.renderClientsList(clients);
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É –∫–ª—ñ—î–Ω—Ç—ñ–≤:', error);
      container.innerHTML = '<div class="text-center p-8 text-red-400">–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤</div>';
    }
  }
  
  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –ø–æ –∑–∞–¥–∞—á–µ
   */
  async generateTaskReport(taskId) {
    try {
      console.log('üìä –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–≤—ñ—Ç—É –¥–ª—è –∑–∞–¥–∞—á—ñ:', taskId);
      console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ñ –¥–∞–Ω—ñ –∑–∞–¥–∞—á:', window.focus2Data?.tasks?.length || 0);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –¥–æ—Å—Ç—É–ø–Ω—ã
      if (!window.focus2Data?.tasks) {
        throw new Error('–î–∞–Ω—ñ –∑–∞–¥–∞—á –Ω–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ');
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥—É–ª—å –æ—Ç—á–µ—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–µ–Ω
      if (!window.focus2Components?.reports) {
        throw new Error('–ú–æ–¥—É–ª—å –∑–≤—ñ—Ç—ñ–≤ –Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
      }
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
      const loadingModal = document.createElement('div');
      loadingModal.className = 'fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-60';
      loadingModal.innerHTML = `
        <div class="bg-gray-800 rounded-lg p-6 text-center">
          <div class="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 mb-4"></div>
          <p class="text-white">–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∑–≤—ñ—Ç—É...</p>
        </div>
      `;
      document.body.appendChild(loadingModal);
      
      try {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç—á–µ—Ç –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
        const timeoutPromise = new Promise((_, reject) => {
          setTimeout(() => reject(new Error('–¢–∞–π–º–∞—É—Ç –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–≤—ñ—Ç—É')), 15000); // 15 —Å–µ–∫—É–Ω–¥
        });
        
        const reportPromise = window.focus2Components.reports.showTaskReportModal(taskId);
        
        await Promise.race([reportPromise, timeoutPromise]);
        
      } finally {
        // –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        if (loadingModal.parentNode) {
          loadingModal.remove();
        }
      }
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–≤—ñ—Ç—É:', error);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
      let errorMessage = '–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–≤—ñ—Ç—É';
      if (error.message.includes('–¢–∞–π–º–∞—É—Ç')) {
        errorMessage = '–ó–≤—ñ—Ç –≥–µ–Ω–µ—Ä—É—î—Ç—å—Å—è –∑–∞–Ω–∞–¥—Ç–æ –¥–æ–≤–≥–æ. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ –∞–±–æ —Å—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤—É –∑–∞–¥–∞—á—É.';
      } else if (error.message.includes('–Ω–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ')) {
        errorMessage = '–ú–æ–¥—É–ª—å –∑–≤—ñ—Ç—ñ–≤ –Ω–µ –≥–æ—Ç–æ–≤–∏–π. –ü–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂—Ç–µ —Å—Ç–æ—Ä—ñ–Ω–∫—É.';
      } else {
        errorMessage = error.message;
      }
      
      alert(errorMessage);
    }
  }
  
  /**
   * –ê–Ω–∞–ª–∏–∑ –∫–ª–∏–µ–Ω—Ç–∞
   */
  async analyzeClient(clientCode) {
    try {
      const analysis = await window.focus2Components?.clientAnalyzer?.analyzeClient(clientCode);
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–ª–∏–µ–Ω—Ç–∞
      console.log('üîç –ê–Ω–∞–ª—ñ–∑ –∫–ª—ñ—î–Ω—Ç–∞:', analysis);
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–Ω–∞–ª—ñ–∑—É –∫–ª—ñ—î–Ω—Ç–∞:', error);
      alert(`–ü–æ–º–∏–ª–∫–∞ –∞–Ω–∞–ª—ñ–∑—É –∫–ª—ñ—î–Ω—Ç–∞: ${error.message}`);
    }
  }
  
  /**
   * –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–∞ –≤ PDF
   */
  async exportReportToPDF() {
    try {
      await window.focus2Components?.reports?.exportToPDF();
      alert('‚úÖ –ó–≤—ñ—Ç –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –≤ PDF');
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É –≤ PDF:', error);
      alert(`–ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É: ${error.message}`);
    }
  }
  
  /**
   * –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–∞ –≤ Excel
   */
  async exportReportToExcel() {
    try {
      await window.focus2Components?.reports?.exportToExcel();
      alert('‚úÖ –ó–≤—ñ—Ç –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –≤ Excel');
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É –≤ Excel:', error);
      alert(`–ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É: ${error.message}`);
    }
  }
  
  /**
   * –≠–∫—Å–ø–æ—Ä—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ Excel
   */
  async exportClientsToExcel() {
    try {
      // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —ç–∫—Å–ø–æ—Ä—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤
      console.log('üìä –ï–∫—Å–ø–æ—Ä—Ç –∫–ª—ñ—î–Ω—Ç—ñ–≤ –≤ Excel...');
      alert('‚úÖ –ö–ª—ñ—î–Ω—Ç—ñ–≤ –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –≤ Excel');
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É –∫–ª—ñ—î–Ω—Ç—ñ–≤:', error);
      alert(`–ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É: ${error.message}`);
    }
  }
  
  /**
   * –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
   */
  editTask(taskId) {
    try {
      console.log('‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ:', taskId);
      if (window.focus2Components?.taskConstructor) {
        window.focus2Components.taskConstructor.editTask(taskId);
      } else {
        throw new Error('–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∑–∞–¥–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
      }
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ:', error);
      alert(`–ü–æ–º–∏–ª–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è: ${error.message}`);
    }
  }
  
  /**
   * –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
   */
  archiveTask(taskId) {
    try {
      console.log('üì¶ –ê—Ä—Ö—ñ–≤—É–≤–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ:', taskId);
      if (confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –∞—Ä—Ö—ñ–≤—É–≤–∞—Ç–∏ —Ü—é –∑–∞–¥–∞—á—É?')) {
        if (window.focus2Components?.taskConstructor) {
          window.focus2Components.taskConstructor.archiveTask(taskId);
        } else {
          throw new Error('–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∑–∞–¥–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        }
      }
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∞—Ä—Ö—ñ–≤—É–≤–∞–Ω–Ω—è –∑–∞–¥–∞—á—ñ:', error);
      alert(`–ü–æ–º–∏–ª–∫–∞ –∞—Ä—Ö—ñ–≤—É–≤–∞–Ω–Ω—è: ${error.message}`);
    }
  }
  
  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –ø—Ä–æ—Å—Ç–æ–π —Ç–∞–±–ª–∏—Ü—ã –∫–ª–∏–µ–Ω—Ç–æ–≤
   */
  renderSimpleClientsTable(clients) {
    return `
      <div class="overflow-x-auto">
        <table class="w-full text-sm">
          <thead>
            <tr class="border-b border-gray-600">
              <th class="text-left py-2 text-gray-300">–ö–ª—ñ—î–Ω—Ç</th>
              <th class="text-left py-2 text-gray-300">–ú–µ–Ω–µ–¥–∂–µ—Ä</th>
              <th class="text-left py-2 text-gray-300">–°—Ñ–µ—Ä–∞</th>
              <th class="text-left py-2 text-gray-300">–°—É–º–∞</th>
              <th class="text-left py-2 text-gray-300">–û—Å—Ç–∞–Ω–Ω—è –¥–∞—Ç–∞</th>
              <th class="text-left py-2 text-gray-300">–ü–∞—Ä–∞–º–µ—Ç—Ä–∏</th>
            </tr>
          </thead>
          <tbody>
            ${clients.map(client => `
              <tr class="border-b border-gray-600 hover:bg-gray-600">
                <td class="py-2 text-white">
                  <div>
                    <div class="font-medium">${client.name}</div>
                    <div class="text-gray-400 text-xs">${client.code}</div>
                  </div>
                </td>
                <td class="py-2 text-white">${client.manager || '-'}</td>
                <td class="py-2 text-white">${client.sphere || '-'}</td>
                <td class="py-2 text-white">${this.formatCurrency(client.sum || 0)}</td>
                <td class="py-2 text-white">${client.lastDate ? this.formatDate(new Date(client.lastDate)) : '-'}</td>
                <td class="py-2 text-white">
                  ${(() => {
                    const paramLabels = {
                      param1: '–ö—É–ø—É–≤–∞–ª–∏ —Ä–∞–Ω—ñ—à–µ',
                      param2: '–ù–µ –∫—É–ø—É–≤–∞–ª–∏ –¥–Ω—ñ–≤',
                      param3: '–ù–∏–∑—å–∫–∞ —á–∞—Å—Ç–æ—Ç–∞',
                      param4: '–ù–∏–∑—å–∫–∞ —Å—É–º–∞',
                      param5: '–ü–µ–≤–Ω—ñ —Å–µ–≥–º–µ–Ω—Ç–∏',
                      param6: '–ü–æ—Ö–æ–∂—ñ –∫–ª—ñ—î–Ω—Ç–∏',
                      param7: '–ë–µ—Ä—É—Ç—å X'
                    };
                    
                    return client.params && Array.isArray(client.params) ? 
                      client.params.map(param => `
                        <span class="inline-block bg-blue-600 text-white px-1 py-0.5 rounded text-xs mr-1 mb-1">
                          ${paramLabels[param] || param}
                        </span>
                      `).join('') : '-';
                  })()}
                </td>
              </tr>
            `).join('')}
          </tbody>
        </table>
      </div>
    `;
  }
  
  /**
   * –ü–æ–∫–∞–∑ –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –∑–∞–º–µ—Ç–∫–∞–º–∏
   */
  async showClientsWithNotes(taskId) {
    try {
      console.log('üìù –ü–æ–∫–∞–∑ –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑ –Ω–æ—Ç–∞—Ç–∫–∞–º–∏ –¥–ª—è –∑–∞–¥–∞—á—ñ:', taskId);
      
      const task = window.focus2Data?.tasks?.find(t => t.id === taskId);
      if (!task) {
        alert('–ó–∞–¥–∞—á—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        return;
      }
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º clientsSnapshot
      let clientsSnapshot = [];
      if (task.hasClientsSnapshot && task.clientsSnapshotCount > 0) {
        clientsSnapshot = await window.focus2TaskConstructor.loadClientsSnapshot(taskId);
      }
      
      if (clientsSnapshot.length === 0) {
        alert('–ö–ª—ñ—î–Ω—Ç—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–ª—è —Ü—ñ—î—ó –∑–∞–¥–∞—á—ñ');
        return;
      }
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–º–µ—Ç–∫–∏
      const notes = await getFocusNotes(taskId);
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫–∏ –∫ –∫–ª–∏–µ–Ω—Ç–∞–º
      const clientsWithLinks = await Promise.all(clientsSnapshot.map(async (client) => {
        const link = await getClientLink(client.code);
        return { ...client, link };
      }));
      
             // –†–µ–Ω–¥–µ—Ä–∏–º —Ç–∞–±–ª–∏—Ü—É —Å –∑–∞–º–µ—Ç–∫–∞–º–∏
       const container = document.getElementById('clients-table-container');
       if (container) {
         container.innerHTML = renderClientsTableWithNotes(taskId, clientsWithLinks, notes);
         
         // –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
         attachTableHandlers(taskId);
         
         // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∫ –ø—Ä–æ—Å—Ç–æ–π —Ç–∞–±–ª–∏—Ü–µ
         const button = document.querySelector(`button[onclick*="showSimpleClientsTable('${taskId}')"]`);
         if (button) {
           button.onclick = () => this.showSimpleClientsTable(taskId);
           button.innerHTML = 'üìã –ü—Ä–æ—Å—Ç–∏–π –ø–µ—Ä–µ–≥–ª—è–¥';
           button.className = 'px-3 py-1 bg-gray-600 text-white rounded text-sm hover:bg-gray-500';
         }
       }
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑ –Ω–æ—Ç–∞—Ç–∫–∞–º–∏:', error);
      alert(`–ü–æ–º–∏–ª–∫–∞: ${error.message}`);
    }
  }
  
  /**
   * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø—Ä–æ—Å—Ç–æ–π —Ç–∞–±–ª–∏—Ü–µ –∫–ª–∏–µ–Ω—Ç–æ–≤
   */
  async showSimpleClientsTable(taskId) {
    try {
      const task = window.focus2Data?.tasks?.find(t => t.id === taskId);
      if (!task) return;
      
      let clientsSnapshot = [];
      if (task.hasClientsSnapshot && task.clientsSnapshotCount > 0) {
        clientsSnapshot = await window.focus2TaskConstructor.loadClientsSnapshot(taskId);
      }
      
      const container = document.getElementById('clients-table-container');
      if (container) {
        container.innerHTML = this.renderSimpleClientsTable(clientsSnapshot);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ —Å –∑–∞–º–µ—Ç–∫–∞–º–∏
        const button = document.querySelector(`button[onclick*="showSimpleClientsTable('${taskId}')"]`);
        if (button) {
          button.onclick = () => this.showClientsWithNotes(taskId);
          button.innerHTML = 'üìù –ó –Ω–æ—Ç–∞—Ç–∫–∞–º–∏';
          button.className = 'px-3 py-1 bg-blue-600 text-white rounded text-sm hover:bg-blue-500';
        }
      }
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –ø—Ä–æ—Å—Ç–æ—ó —Ç–∞–±–ª–∏—Ü—ñ:', error);
    }
  }
  
  /**
   * –≠–∫—Å–ø–æ—Ä—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ CSV
   */
  async exportClientsToCSV(taskId) {
    try {
      console.log('üìä –ï–∫—Å–ø–æ—Ä—Ç –∫–ª—ñ—î–Ω—Ç—ñ–≤ –≤ CSV –¥–ª—è –∑–∞–¥–∞—á—ñ:', taskId);
      
      const task = window.focus2Data?.tasks?.find(t => t.id === taskId);
      if (!task) {
        alert('–ó–∞–¥–∞—á—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        return;
      }
      
      let clientsSnapshot = [];
      if (task.hasClientsSnapshot && task.clientsSnapshotCount > 0) {
        clientsSnapshot = await window.focus2TaskConstructor.loadClientsSnapshot(taskId);
      }
      
      if (clientsSnapshot.length === 0) {
        alert('–ö–ª—ñ—î–Ω—Ç—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É');
        return;
      }
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–º–µ—Ç–∫–∏
      const notes = await getFocusNotes(taskId);
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫–∏ –∫ –∫–ª–∏–µ–Ω—Ç–∞–º
      const clientsWithLinks = await Promise.all(clientsSnapshot.map(async (client) => {
        const link = await getClientLink(client.code);
        return { ...client, link };
      }));
      
      // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ CSV
      exportToCSV(clientsWithLinks, notes);
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É –∫–ª—ñ—î–Ω—Ç—ñ–≤:', error);
      alert(`–ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É: ${error.message}`);
    }
  }

  /**
   * –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –∑–∞–¥–∞—á–∏
   */
  /**
   * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤ –¥–ª—è –∑–∞–¥–∞—á—ñ (–ø–æ–≤–µ—Ä—Ç–∞—î –æ–±'—î–∫—Ç –∑ –¥–∞–Ω–∏–º–∏)
   */
  async loadTaskClientsData(taskId) {
    try {
      const task = window.focus2Data?.tasks?.find(t => t.id === taskId);
      if (!task) {
        throw new Error('–ó–∞–¥–∞—á—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
      }

      let clientsSnapshot = [];
      let hasClientsSnapshot = false;
      
      if (task.hasClientsSnapshot) {
        try {
          clientsSnapshot = await window.focus2TaskConstructor.loadClientsSnapshot(taskId);
          hasClientsSnapshot = true;
        } catch (error) {
          console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è clientsSnapshot:', error);
        }
      }

      if (!hasClientsSnapshot) {
        return { clients: [], notes: {}, error: '–ó–∞–¥–∞—á–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞ –±–µ–∑ –∞–Ω–∞–ª—ñ–∑—É –∫–ª—ñ—î–Ω—Ç—ñ–≤' };
      }

      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –Ω–æ—Ç–∞—Ç–∫–∏ —Ç–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤
      const notes = await getFocusNotes(taskId);
      
      // –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∞ —Å—Å—ã–ª–æ–∫ - –∑–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Å—Ä–∞–∑—É
      const allLinks = await this.loadAllClientLinks();
      
      // –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –∑–∞–º–µ—Ç–∫–∞–º–∏ –∏ —Å—Å—ã–ª–∫–∞–º–∏
      const clientsWithNotes = clientsSnapshot.map(client => ({
        ...client,
        link: allLinks[client.code] || null
      }));

      return {
        clients: clientsWithNotes,
        notes: notes,
        totalCount: clientsSnapshot.length
      };

    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤:', error);
      return { clients: [], notes: {}, error: error.message };
    }
  }

  /**
   * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤ –¥–ª—è –∑–∞–¥–∞—á—ñ (–ø–æ–≤–µ—Ä—Ç–∞—î HTML)
   */
  async loadTaskClients(taskId) {
    try {
      const task = window.focus2Data?.tasks?.find(t => t.id === taskId);
      if (!task) {
        throw new Error('–ó–∞–¥–∞—á—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
      }

      let clientsSnapshot = [];
      let hasClientsSnapshot = false;
      
      if (task.hasClientsSnapshot) {
        try {
          clientsSnapshot = await window.focus2TaskConstructor.loadClientsSnapshot(taskId);
          hasClientsSnapshot = true;
        } catch (error) {
          console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è clientsSnapshot:', error);
        }
      }

      if (!hasClientsSnapshot) {
        return `
          <div class="bg-yellow-900/20 border border-yellow-500 rounded-lg p-4">
            <h3 class="text-lg font-semibold text-yellow-400 mb-2">–£–≤–∞–≥–∞</h3>
            <p class="text-yellow-300">–¶—è –∑–∞–¥–∞—á–∞ –±—É–ª–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞ –±–µ–∑ –∞–Ω–∞–ª—ñ–∑—É –∫–ª—ñ—î–Ω—Ç—ñ–≤. –î–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É —Å–ø–∏—Å–∫—É –∫–ª—ñ—î–Ω—Ç—ñ–≤ —Å—Ç–≤–æ—Ä—ñ—Ç—å –Ω–æ–≤—É –∑–∞–¥–∞—á—É –∞–±–æ –æ–Ω–æ–≤—ñ—Ç—å —ñ—Å–Ω—É—é—á—É.</p>
          </div>
        `;
      }

      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –Ω–æ—Ç–∞—Ç–∫–∏ —Ç–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤
      const notes = await getFocusNotes(taskId);
      
      // –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∞ –∑–∞–≥—Ä—É–∑–∫–∞ —Å—Å—ã–ª–æ–∫ - –∑–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Å—Ä–∞–∑—É
      const allLinks = await this.loadAllClientLinks();
      
      // –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –∑–∞–º–µ—Ç–∫–∞–º–∏ –∏ —Å—Å—ã–ª–∫–∞–º–∏
      const clientsWithNotes = clientsSnapshot.map(client => ({
        ...client,
        link: allLinks[client.code] || null
      }));

      // –†–µ–Ω–¥–µ—Ä–∏–º —Ç–∞–±–ª–∏—Ü—É —Å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π –¥–ª—è –±–æ–ª—å—à–∏—Ö —Å–ø–∏—Å–∫–æ–≤
      return this.renderOptimizedClientsTable(taskId, clientsWithNotes, notes, clientsSnapshot.length);

    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–ª—ñ—î–Ω—Ç—ñ–≤:', error);
      return `
        <div class="bg-red-900/20 border border-red-500 rounded-lg p-4">
          <h3 class="text-lg font-semibold text-red-400 mb-2">–ü–æ–º–∏–ª–∫–∞</h3>
          <p class="text-red-300">–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∫–ª—ñ—î–Ω—Ç—ñ–≤: ${error.message}</p>
        </div>
      `;
    }
  }

  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫ –Ω–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ –∑–∞ –æ–¥–∏–Ω —Ä–∞–∑
   */
  async loadAllClientLinks() {
    try {
      const res = await fetch('https://fastapi.lookfort.com/nomenclature.analysis?mode=company_url');
      const arr = await res.json();
      const links = {};
      arr.forEach(c => { 
        links[c['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥']] = c['–ø–æ—Å–∏–ª–∞–Ω–Ω—è']; 
      });
      return links;
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø–æ—Å–∏–ª–∞–Ω—å –Ω–∞ –∫–ª—ñ—î–Ω—Ç—ñ–≤:', error);
      return {};
    }
  }

  /**
   * –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
   */
  renderOptimizedClientsTable(taskId, clients, notes, totalCount) {
    const pageSize = 50; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ 50 –∫–ª–∏–µ–Ω—Ç–æ–≤ –∑–∞ —Ä–∞–∑
    const totalPages = Math.ceil(clients.length / pageSize);
    
    return `
      <div class="space-y-4">
        <!-- –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –≤–∏–¥–∞ -->
        <div class="view-toggle">
          <button class="view-toggle-btn active" data-view="table" onclick="window.focus2Components?.ui?.switchView('table')">
            üìä –¢–∞–±–ª–∏—Ü—è
          </button>
          <button class="view-toggle-btn" data-view="cards" onclick="window.focus2Components?.ui?.switchView('cards')">
            üÉè –ö–∞—Ä—Ç–∫–∏
          </button>
        </div>
        
        <div class="flex items-center justify-between">
          <span class="text-gray-300">–í—Å—å–æ–≥–æ –∫–ª—ñ—î–Ω—Ç—ñ–≤: ${totalCount}</span>
          <div class="flex items-center space-x-2">
            <button onclick="window.focus2Components?.ui?.changeClientsPage('${taskId}', -1)" 
                    class="px-2 py-1 bg-gray-600 text-white rounded text-sm hover:bg-gray-500">
              ‚Üê
            </button>
            <span id="clients-page-info" class="text-gray-300 text-sm">–°—Ç–æ—Ä—ñ–Ω–∫–∞ 1 –∑ ${totalPages}</span>
            <button onclick="window.focus2Components?.ui?.changeClientsPage('${taskId}', 1)" 
                    class="px-2 py-1 bg-gray-600 text-white rounded text-sm hover:bg-gray-500">
              ‚Üí
            </button>
          </div>
        </div>
        
        <!-- –¢–∞–±–ª–∏—á–Ω—ã–π –≤–∏–¥ -->
        <div class="clients-table-container" id="clients-table-view">
          <table class="w-full text-sm bg-gray-800 rounded-lg overflow-hidden">
            <thead class="sticky top-0 bg-gray-700">
              <tr class="text-gray-300">
                <th class="px-3 py-2 text-left">–ö–ª—ñ—î–Ω—Ç</th>
                <th class="px-3 py-2 text-left">–ú–µ–Ω–µ–¥–∂–µ—Ä</th>
                <th class="px-3 py-2 text-left">–°—Ñ–µ—Ä–∞</th>
                <th class="px-3 py-2 text-left">–ü–∞—Ä–∞–º–µ—Ç—Ä–∏</th>
                <th class="px-3 py-2 text-left">–°—É–º–∞</th>
                <th class="px-3 py-2 text-left">–û—Å—Ç–∞–Ω–Ω—è –ø–æ–∫—É–ø–∫–∞</th>
                <th class="px-3 py-2 text-left">–î–∞—Ç–∞ –∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—ó</th>
                <th class="px-3 py-2 text-center">–ü—Ä–æ–ø–æ–∑–∏—Ü—ñ—è</th>
                <th class="px-3 py-2 text-center">–ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç</th>
                <th class="px-3 py-2 text-left">–ö–æ–º–µ–Ω—Ç–∞—Ä</th>
                <th class="px-3 py-2 text-center">–î—ñ—ó</th>
              </tr>
            </thead>
            <tbody id="clients-table-body">
              ${this.renderClientsPage(clients.slice(0, pageSize), notes, taskId)}
            </tbody>
          </table>
        </div>
        
        <!-- –ö–∞—Ä—Ç–æ—á–Ω—ã–π –≤–∏–¥ -->
        <div class="clients-cards-container hidden" id="clients-cards-view">
          ${this.renderClientsCards(clients.slice(0, pageSize), notes, taskId)}
        </div>
        
        <div class="hidden" id="clients-data" data-task-id="${taskId}" data-total="${clients.length}" data-page-size="${pageSize}">
          ${JSON.stringify(clients)}
        </div>
      </div>
    `;
  }

  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–ª–∏–µ–Ω—Ç–æ–≤
   */
  renderClientsPage(clients, notes, taskId) {
    return clients.map(client => {
      const note = notes[client.code] || {};
      const clientName = client.link ? 
        `<a href="${client.link}" target="_blank" class="text-blue-400 underline hover:text-blue-600">${client.name}</a>` : 
        client.name;
      
      // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –∫–ª—ñ—î–Ω—Ç–∞
      const paramLabels = {
        param1: '–ö—É–ø—É–≤–∞–ª–∏ —Ä–∞–Ω—ñ—à–µ',
        param2: '–ù–µ –∫—É–ø—É–≤–∞–ª–∏ –¥–Ω—ñ–≤',
        param3: '–ù–∏–∑—å–∫–∞ —á–∞—Å—Ç–æ—Ç–∞',
        param4: '–ù–∏–∑—å–∫–∞ —Å—É–º–∞',
        param5: '–ü–µ–≤–Ω—ñ —Å–µ–≥–º–µ–Ω—Ç–∏',
        param6: '–ü–æ—Ö–æ–∂—ñ –∫–ª—ñ—î–Ω—Ç–∏',
        param7: '–ë–µ—Ä—É—Ç—å X'
      };
      
      const clientParams = client.params && Array.isArray(client.params) ? 
        client.params.map(param => paramLabels[param] || param).join(', ') : '-';
      
      // –ö–ª–∞—Å—Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
      const priorityClass = note.priority ? `priority-${note.priority}` : '';
      
      return `
        <tr class="border-b border-gray-700 hover:bg-gray-700">
          <td class="px-3 py-2 text-gray-200">
            <div>
              <div class="font-medium">${clientName}</div>
              <div class="text-gray-400 text-xs">${client.code}</div>
            </div>
          </td>
          <td class="px-3 py-2 text-gray-300">${client.manager || '-'}</td>
          <td class="px-3 py-2 text-gray-300">${client.sphere || '-'}</td>
          <td class="px-3 py-2 text-gray-300">
            <div class="text-xs">
              ${clientParams}
            </div>
          </td>
          <td class="px-3 py-2 text-green-400">${client.sum ? client.sum.toFixed(2) : '-'}</td>
          <td class="px-3 py-2 text-gray-300">${client.lastDate ? new Date(client.lastDate).toLocaleDateString('uk-UA') : '-'}</td>
          <td class="px-3 py-2">
            <input type="date" 
                   value="${note.commDate || ''}" 
                   data-cid="${client.code}" 
                   class="focus-commdate bg-gray-900 text-gray-200 rounded px-2 py-1 text-xs">
          </td>
          <td class="px-3 py-2 text-center">
            <input type="checkbox" 
                   data-cid="${client.code}" 
                   class="focus-done" 
                   ${note.done ? 'checked' : ''}>
          </td>
          <td class="px-3 py-2 text-center">
            <select data-cid="${client.code}" 
                    class="focus-priority bg-gray-900 text-gray-200 rounded px-2 py-1 text-xs ${priorityClass}">
              <option value="">-</option>
              <option value="low" ${note.priority === 'low' ? 'selected' : ''}>–ù–∏–∑—å–∫–∏–π</option>
              <option value="medium" ${note.priority === 'medium' ? 'selected' : ''}>–°–µ—Ä–µ–¥–Ω—ñ–π</option>
              <option value="high" ${note.priority === 'high' ? 'selected' : ''}>–í–∏—Å–æ–∫–∏–π</option>
              <option value="urgent" ${note.priority === 'urgent' ? 'selected' : ''}>–¢–µ—Ä–º—ñ–Ω–æ–≤–æ</option>
            </select>
          </td>
          <td class="px-3 py-2">
            <input type="text" 
                   value="${note.comment || ''}" 
                   data-cid="${client.code}" 
                   class="focus-comment bg-gray-900 text-gray-200 rounded px-2 py-1 text-xs w-full"
                   placeholder="–ö–æ–º–µ–Ω—Ç–∞—Ä...">
          </td>
          <td class="px-3 py-2 text-center">
            <button onclick="window.focus2Components?.ui?.showClientDetail('${client.code}', '${taskId}')" 
                    class="px-2 py-1 bg-blue-600 text-white rounded text-xs hover:bg-blue-500 transition-colors duration-200">
              –î–µ—Ç–∞–ª—ñ–∑–∞—Ü—ñ—è
            </button>
          </td>
        </tr>
      `;
    }).join('');
  }

  /**
   * –°–º–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∫–ª–∏–µ–Ω—Ç–æ–≤
   */
  changeClientsPage(taskId, direction) {
    const dataElement = document.getElementById('clients-data');
    if (!dataElement) return;
    
    const clients = JSON.parse(dataElement.textContent);
    const pageSize = parseInt(dataElement.dataset.pageSize);
    const currentPage = parseInt(document.getElementById('clients-page-info').textContent.match(/–°—Ç–æ—Ä—ñ–Ω–∫–∞ (\d+)/)[1]);
    const totalPages = Math.ceil(clients.length / pageSize);
    
    let newPage = currentPage + direction;
    if (newPage < 1) newPage = 1;
    if (newPage > totalPages) newPage = totalPages;
    
    const startIndex = (newPage - 1) * pageSize;
    const endIndex = startIndex + pageSize;
    const pageClients = clients.slice(startIndex, endIndex);
    
    // –ü–æ–ª—É—á–∞–µ–º –∑–∞–º–µ—Ç–∫–∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤
    const notes = window.focus2Components?.notes?.getFocusNotes(taskId) || {};
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É
    const tbody = document.getElementById('clients-table-body');
    if (tbody) {
      tbody.innerHTML = this.renderClientsPage(pageClients, notes, taskId);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
    const cardsContainer = document.getElementById('clients-cards-view');
    if (cardsContainer && !cardsContainer.classList.contains('hidden')) {
      cardsContainer.innerHTML = this.renderClientsCards(pageClients, notes, taskId);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    const pageInfo = document.getElementById('clients-page-info');
    if (pageInfo) {
      pageInfo.textContent = `–°—Ç–æ—Ä—ñ–Ω–∫–∞ ${newPage} –∑ ${totalPages}`;
    }
    
    // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    setTimeout(() => {
      if (window.focus2Components?.notes) {
        window.focus2Components.notes.attachTableHandlers();
      }
    }, 100);
  }

  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤–∫–ª–∞–¥–æ–∫ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –¥–ª—è –∫–ª—ñ—î–Ω—Ç—ñ–≤
   */
  renderParameterTabs(taskId) {
    const task = window.focus2Data?.tasks?.find(t => t.id === taskId);
    if (!task || !task.clientsSnapshot) {
      console.log('‚ùå –ù–µ–º–∞—î –∑–∞–¥–∞—á—ñ –∞–±–æ clientsSnapshot –¥–ª—è:', taskId);
      return '';
    }
    
    console.log('üîç –ê–Ω–∞–ª—ñ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –¥–ª—è –∑–∞–¥–∞—á—ñ:', taskId);
    console.log('  - –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫–ª—ñ—î–Ω—Ç—ñ–≤:', task.clientsSnapshot.length);
    
    // –ê–Ω–∞–ª—ñ–∑—É—î–º–æ, —è–∫—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è
    const usedParams = new Set();
    task.clientsSnapshot.forEach(client => {
      if (client.params && Array.isArray(client.params)) {
        client.params.forEach(param => usedParams.add(param));
      }
    });
    
    console.log('  - –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏:', Array.from(usedParams));
    console.log('  - –ö—ñ–ª—å–∫—ñ—Å—Ç—å —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤:', usedParams.size);
    
    if (usedParams.size === 0) {
      console.log('  - –ù–µ–º–∞—î –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤, –≤–∫–ª–∞–¥–∫–∏ –Ω–µ –ø–æ–∫–∞–∑—É—é—Ç—å—Å—è');
      return ''; // –Ø–∫—â–æ –Ω–µ–º–∞—î –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤, –Ω–µ –ø–æ–∫–∞–∑—É—î–º–æ –≤–∫–ª–∞–¥–∫–∏
    }
    
    const paramLabels = {
      param1: '–ö—É–ø—É–≤–∞–ª–∏ —Ä–∞–Ω—ñ—à–µ',
      param2: '–ù–µ –∫—É–ø—É–≤–∞–ª–∏ –¥–Ω—ñ–≤',
      param3: '–ù–∏–∑—å–∫–∞ —á–∞—Å—Ç–æ—Ç–∞',
      param4: '–ù–∏–∑—å–∫–∞ —Å—É–º–∞',
      param5: '–ü–µ–≤–Ω—ñ —Å–µ–≥–º–µ–Ω—Ç–∏',
      param6: '–ü–æ—Ö–æ–∂—ñ –∫–ª—ñ—î–Ω—Ç–∏',
      param7: '–ë–µ—Ä—É—Ç—å X'
    };
    
    const tabsHTML = Array.from(usedParams).map(param => {
      const clientCount = task.clientsSnapshot.filter(client => 
        client.params && client.params.includes(param)
      ).length;
      
      return `
        <button onclick="window.focus2Components?.ui?.switchParameterTab('${taskId}', '${param}')" 
                id="param-tab-${param}" 
                class="param-tab px-4 py-2 rounded-lg text-sm font-medium transition-colors"
                data-param="${param}">
          ${paramLabels[param] || param} (${clientCount})
        </button>
      `;
    }).join('');
    
    console.log('  - –ì–µ–Ω–µ—Ä—É—î–º–æ –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤:', Array.from(usedParams));
    
    return `
      <div class="mb-4">
        <div class="flex items-center justify-between mb-3">
          <h3 class="text-base font-semibold text-white">–§—ñ–ª—å—Ç—Ä –∑–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏</h3>
          <button onclick="window.focus2Components?.ui?.showAllClients('${taskId}')" 
                  id="all-clients-tab"
                  class="param-tab px-3 py-1 rounded text-sm font-medium transition-colors bg-blue-600 text-white">
            –í—Å—ñ –∫–ª—ñ—î–Ω—Ç–∏ (${task.clientsSnapshot.length})
          </button>
        </div>
        <div class="flex space-x-2 overflow-x-auto">
          ${tabsHTML}
        </div>
      </div>
    `;
  }
  
  /**
   * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º—ñ–∂ –≤–∫–ª–∞–¥–∫–∞–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤
   */
  switchParameterTab(taskId, param) {
    console.log('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–Ω—è –Ω–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä:', param, '–¥–ª—è –∑–∞–¥–∞—á—ñ:', taskId);
    
    // –û–Ω–æ–≤–ª—é—î–º–æ –∞–∫—Ç–∏–≤–Ω—É –≤–∫–ª–∞–¥–∫—É
    document.querySelectorAll('.param-tab').forEach(tab => {
      tab.classList.remove('bg-blue-600', 'text-white');
      tab.classList.add('bg-gray-600', 'text-gray-300');
    });
    
    const activeTab = document.querySelector(`[data-param="${param}"]`);
    if (activeTab) {
      activeTab.classList.remove('bg-gray-600', 'text-gray-300');
      activeTab.classList.add('bg-blue-600', 'text-white');
    }
    
    // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º
    this.filterClientsByParameter(taskId, param);
  }
  
  /**
   * –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤
   */
  showAllClients(taskId) {
    console.log('üîÑ –ü–æ–∫–∞–∑ –≤—Å—ñ—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤ –¥–ª—è –∑–∞–¥–∞—á—ñ:', taskId);
    
    // –û–Ω–æ–≤–ª—é—î–º–æ –∞–∫—Ç–∏–≤–Ω—É –≤–∫–ª–∞–¥–∫—É
    document.querySelectorAll('.param-tab').forEach(tab => {
      tab.classList.remove('bg-blue-600', 'text-white');
      tab.classList.add('bg-gray-600', 'text-gray-300');
    });
    
    const allClientsTab = document.getElementById('all-clients-tab');
    if (allClientsTab) {
      allClientsTab.classList.remove('bg-gray-600', 'text-gray-300');
      allClientsTab.classList.add('bg-blue-600', 'text-white');
    }
    
    // –ü–æ–∫–∞–∑—É—î–º–æ –≤—Å—ñ—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤
    this.filterClientsByParameter(taskId, null);
  }
  
  /**
   * –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –∫–ª—ñ—î–Ω—Ç—ñ–≤ –∑–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º
   */
  filterClientsByParameter(taskId, param) {
    const task = window.focus2Data?.tasks?.find(t => t.id === taskId);
    if (!task || !task.clientsSnapshot) {
      return;
    }
    
    let filteredClients;
    if (param) {
      filteredClients = task.clientsSnapshot.filter(client => 
        client.params && client.params.includes(param)
      );
    } else {
      filteredClients = task.clientsSnapshot;
    }
    
    console.log(`üìä –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –∫–ª—ñ—î–Ω—Ç—ñ–≤: ${filteredClients.length} –∑ ${task.clientsSnapshot.length} (–ø–∞—Ä–∞–º–µ—Ç—Ä: ${param || '–≤—Å—ñ'})`);
    
    // –û–Ω–æ–≤–ª—é—î–º–æ —Ç–∞–±–ª–∏—Ü—é –∫–ª—ñ—î–Ω—Ç—ñ–≤
    const clientsContainer = document.getElementById('clients-container');
    if (clientsContainer) {
      const tableContent = this.renderOptimizedClientsTable(taskId, filteredClients, {}, filteredClients.length);
      clientsContainer.innerHTML = tableContent;
      
      // –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã —Å –∑–∞–º–µ—Ç–∫–∞–º–∏
      attachTableHandlers(taskId);
    }
  }
  
  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –∑–∞–¥–∞—á–∏
   */
  renderClientFilters(taskId) {
    if (!window.focus2Components?.filters) {
      return '';
    }
    
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Firebase –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    let departmentsCount = 0;
    let managersCount = 0;
    let departmentsOptions = '';
    let managersOptions = '';
    
    if (window.focus2Components.filters.departmentsData && window.focus2Components.filters.departmentsData.length > 0) {
      departmentsCount = window.focus2Components.filters.departmentsData.length;
      departmentsOptions = window.focus2Components.filters.departmentsData
        .map(dept => `<option value="${dept.id}">${dept.name || dept.id}</option>`)
        .join('');
    } else {
      departmentsCount = window.focus2Components.filters.availableFilters.departments.length;
      departmentsOptions = window.focus2Components.filters.availableFilters.departments.length > 0 
        ? window.focus2Components.filters.availableFilters.departments.map(dept => 
            `<option value="${dept}">${dept}</option>`
          ).join('')
        : '<option value="" disabled>–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö</option>';
    }
    
    if (window.focus2Components.filters.managersData && window.focus2Components.filters.managersData.length > 0) {
      managersCount = window.focus2Components.filters.managersData.length;
      managersOptions = window.focus2Components.filters.managersData
        .map(manager => `<option value="${manager.id}">${manager.name || manager.id}</option>`)
        .join('');
    } else {
      managersCount = window.focus2Components.filters.availableFilters.managers.length;
      managersOptions = window.focus2Components.filters.availableFilters.managers.length > 0 
        ? window.focus2Components.filters.availableFilters.managers.map(manager => 
            `<option value="${manager}">${manager}</option>`
          ).join('')
        : '<option value="" disabled>–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö</option>';
    }
    
    const filtersHTML = `
      <div class="mb-4">
        <div class="flex items-center justify-between mb-3">
          <h3 class="text-base font-semibold text-white">–§—ñ–ª—å—Ç—Ä–∏ –∫–ª—ñ—î–Ω—Ç—ñ–≤</h3>
          <div class="flex space-x-2">
            <button onclick="window.focus2Components?.filters?.loadAvailableFilters()" 
                    class="px-2 py-1 bg-gray-600 text-white rounded text-xs hover:bg-gray-500">
              –û–Ω–æ–≤–∏—Ç–∏
            </button>
            <button onclick="window.focus2Components?.ui?.applyClientFilters('${taskId}')" 
                    class="px-2 py-1 bg-blue-600 text-white rounded text-xs hover:bg-blue-500">
              –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏
            </button>
          </div>
        </div>
        
        <div class="grid grid-cols-1 md:grid-cols-3 gap-3">
          <!-- –û—Ç–¥–µ–ª -->
          <div>
            <label class="block text-gray-300 text-xs mb-1">–í—ñ–¥–¥—ñ–ª (${departmentsCount})</label>
            <select id="client-department-filter" class="w-full bg-gray-700 text-white rounded px-2 py-1 text-sm">
              <option value="">–í—Å—ñ –≤—ñ–¥–¥—ñ–ª–∏</option>
              ${departmentsOptions}
            </select>
          </div>
          
          <!-- –ú–µ–Ω–µ–¥–∂–µ—Ä -->
          <div>
            <label class="block text-gray-300 text-xs mb-1">–ú–µ–Ω–µ–¥–∂–µ—Ä (${managersCount})</label>
            <select id="client-manager-filter" class="w-full bg-gray-700 text-white rounded px-2 py-1 text-sm">
              <option value="">–í—Å—ñ –º–µ–Ω–µ–¥–∂–µ—Ä–∏</option>
              ${managersOptions}
            </select>
          </div>
          
          <!-- –ü–æ–∏—Å–∫ -->
          <div>
            <label class="block text-gray-300 text-xs mb-1">–ü–æ—à—É–∫ –∫–ª—ñ—î–Ω—Ç–∞</label>
            <input type="text" id="client-search-filter" 
                   class="w-full bg-gray-700 text-white rounded px-2 py-1 text-sm" 
                   placeholder="–ù–∞–∑–≤–∞ –∫–ª—ñ—î–Ω—Ç–∞...">
          </div>
        </div>
      </div>
    `;
    
    // –ü—Ä–∏–≤'—è–∑—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –ø—ñ—Å–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É
    setTimeout(() => {
      this.attachClientFilterHandlers(taskId);
    }, 100);
    
    return filtersHTML;
  }
  
  /**
   * –ü—Ä–∏–≤'—è–∑—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ –ø–æ–¥—ñ–π –¥–æ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –∫–ª—ñ—î–Ω—Ç—ñ–≤
   */
  attachClientFilterHandlers(taskId) {
    try {
      const filters = [
        'client-department-filter',
        'client-manager-filter',
        'client-search-filter'
      ];
      
      filters.forEach(filterId => {
        const filterElement = document.getElementById(filterId);
        if (filterElement) {
          // –í–∏–¥–∞–ª—è—î–º–æ —Å—Ç–∞—Ä—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏
          filterElement.removeEventListener('change', this.handleClientFilterChange);
          filterElement.removeEventListener('input', this.handleClientFilterChange);
          
          // –î–æ–¥–∞—î–º–æ –Ω–æ–≤—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏
          filterElement.addEventListener('change', () => this.handleClientFilterChange(taskId));
          filterElement.addEventListener('input', () => this.handleClientFilterChange(taskId));
        }
      });
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏–≤\'—è–∑—É–≤–∞–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –∫–ª—ñ—î–Ω—Ç—ñ–≤:', error);
    }
  }
  
  /**
   * –û–±—Ä–æ–±–Ω–∏–∫ –∑–º—ñ–Ω–∏ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –∫–ª—ñ—î–Ω—Ç—ñ–≤
   */
  handleClientFilterChange(taskId) {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
      const departmentFilter = document.getElementById('client-department-filter');
      const managerFilter = document.getElementById('client-manager-filter');
      const searchFilter = document.getElementById('client-search-filter');
      
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –∑–º—ñ–Ω–∏–≤—Å—è –≤—ñ–¥–¥—ñ–ª
      if (departmentFilter && window.focus2Components?.filters) {
        const departmentValue = departmentFilter.value;
        window.focus2Components.filters.setFilter('department', departmentValue);
        
        // –û–Ω–æ–≤–ª—é—î–º–æ —Å–ø–∏—Å–æ–∫ –º–µ–Ω–µ–¥–∂–µ—Ä—ñ–≤ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –≤—ñ–¥–¥—ñ–ª—É
        window.focus2Components.filters.updateManagersFilter();
      }
      
      if (managerFilter && window.focus2Components?.filters) {
        const managerValue = managerFilter.value;
        window.focus2Components.filters.setFilter('manager', managerValue);
      }
      
      if (searchFilter && window.focus2Components?.filters) {
        const searchValue = searchFilter.value;
        window.focus2Components.filters.setFilter('search', searchValue);
      }
      
      // –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
      this.applyClientFilters(taskId);
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –∑–º—ñ–Ω–∏ —Ñ—ñ–ª—å—Ç—Ä–∞ –∫–ª—ñ—î–Ω—Ç—ñ–≤:', error);
    }
  }
  
  /**
   * –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∫ –∫–ª–∏–µ–Ω—Ç–∞–º
   */
  async applyClientFilters(taskId) {
    try {
      // –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
      const departmentFilter = document.getElementById('client-department-filter')?.value || '';
      const managerFilter = document.getElementById('client-manager-filter')?.value || '';
      const searchFilter = document.getElementById('client-search-filter')?.value || '';
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
      if (window.focus2Components?.filters) {
        window.focus2Components.filters.setFilter('department', departmentFilter);
        window.focus2Components.filters.setFilter('manager', managerFilter);
        window.focus2Components.filters.setFilter('search', searchFilter);
      }
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ window.focus2Data
      const task = window.focus2Data?.tasks?.find(t => t.id === taskId);
      if (!task || !task.clientsSnapshot) {
        return;
      }
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∑–∞–º–µ—Ç–∫–∏ (–µ—Å–ª–∏ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã)
      const notes = await getFocusNotes(taskId);
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Å—ã–ª–∫–∏ (–µ—Å–ª–∏ –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã)
      const allLinks = await this.loadAllClientLinks();
      
      // –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –∑–∞–º–µ—Ç–∫–∞–º–∏ –∏ —Å—Å—ã–ª–∫–∞–º–∏
      const clientsWithNotes = task.clientsSnapshot.map(client => ({
        ...client,
        link: allLinks[client.code] || null
      }));
      
      // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã
      if (window.focus2Components?.filters && clientsWithNotes.length > 0) {
        const filteredClients = window.focus2Components.filters.applyClientFilters(
          clientsWithNotes, 
          notes
        );
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤
        const clientsContainer = document.getElementById('clients-container');
        if (clientsContainer) {
          const filteredContent = this.renderOptimizedClientsTable(
            taskId, 
            filteredClients, 
            notes, 
            filteredClients.length
          );
          clientsContainer.innerHTML = filteredContent;
          
          // –ü—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
          if (typeof attachTableHandlers === 'function') {
            attachTableHandlers(taskId);
          }
        }
      }
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤:', error);
    }
  }

  /**
   * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–≤–æ—Ä–∞—á–∏–≤–∞–µ–º—ã—Ö —Å–µ–∫—Ü–∏–π
   */
  toggleSection(sectionId) {
    const section = document.getElementById(sectionId);
    const icon = document.getElementById(`${sectionId}-icon`);
    
    if (section && icon) {
      const isHidden = section.classList.contains('hidden');
      
      if (isHidden) {
        section.classList.remove('hidden');
        icon.classList.add('rotate-180');
      } else {
        section.classList.add('hidden');
        icon.classList.remove('rotate-180');
      }
    }
  }
  
  /**
   * –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –¥–æ –∑–∞–¥–∞—á
   */
  async applyTaskFilters() {
    try {
      console.log('üéØ applyTaskFilters –≤–∏–∫–ª–∏–∫–∞–Ω–æ');
      
      // –û—Ç—Ä–∏–º—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
      const statusFilter = document.getElementById('task-status-filter')?.value || '';
      const periodFilter = document.getElementById('task-period-filter')?.value || '';
      const searchFilter = document.getElementById('task-search-filter')?.value || '';
      
      console.log('üîç –ó–Ω–∞—á–µ–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤:', { statusFilter, periodFilter, searchFilter });
      
      // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–∏
      if (window.focus2Components?.filters) {
        window.focus2Components.filters.setFilter('status', statusFilter);
        window.focus2Components.filters.setFilter('period', periodFilter);
        window.focus2Components.filters.setFilter('search', searchFilter);
      }
      
      // –û—Ç—Ä–∏–º—É—î–º–æ –≤—Å—ñ –∑–∞–¥–∞—á—ñ
      const tasks = window.focus2Data?.tasks || [];
      console.log('üìã –í—Å—å–æ–≥–æ –∑–∞–¥–∞—á:', tasks.length);
      
      // –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–∏
      if (window.focus2Components?.filters) {
        const filteredTasks = window.focus2Components.filters.applyFilters(tasks);
        console.log('‚úÖ –í—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –∑–∞–¥–∞—á:', filteredTasks.length);
        
        // –û–Ω–æ–≤–ª—é—î–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∑–∞–¥–∞—á
        const tasksContainer = document.getElementById('tasks-tab');
        if (tasksContainer) {
          const tasksContent = this.renderTasksList(filteredTasks);
          tasksContainer.innerHTML = tasksContent;
          console.log('‚úÖ –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –æ–Ω–æ–≤–ª–µ–Ω–æ');
          
          // –ü—Ä–∏–≤'—è–∑—É—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –ø–æ–¥—ñ–π –¥–æ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –∑–∞–¥–∞—á –ø—ñ—Å–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è
          setTimeout(() => {
            if (window.focus2Components?.filters) {
              window.focus2Components.filters.attachFilterEventHandlers();
            }
          }, 100);
        } else {
          console.warn('‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∑–∞–¥–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
        }
      }
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ –∑–∞–¥–∞—á:', error);
    }
  }

  /**
   * –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π –∫–ª–∏–µ–Ω—Ç–∞
   */
  async showClientDetail(clientCode, taskId) {
    try {
      console.log('üë§ –ü–æ–∫–∞–∑ –¥–µ—Ç–∞–ª–µ–π –∫–ª—ñ—î–Ω—Ç–∞:', clientCode);
      
      // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞
      const clientManagerDirectory = window.focus2Data?.clientManagerDirectory || {};
      const clientInfo = clientManagerDirectory[clientCode];
      const salesData = window.focus2Data?.salesData || [];
      
      // –§–∏–ª—å—Ç—Ä—É–µ–º –ø—Ä–æ–¥–∞–∂–∏ –∫–ª–∏–µ–Ω—Ç–∞
      const clientSales = salesData.filter(sale => sale['–ö–ª–∏–µ–Ω—Ç.–ö–æ–¥'] === clientCode);
      
      // –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ–∫—É—Å–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
      const tasks = window.focus2Data?.tasks || [];
      const task = tasks.find(t => t.id === taskId);
      const focusProducts = new Set(task?.products || []);
      
      // –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–∏–æ–¥ –¥–µ–π—Å—Ç–≤–∏—è –∑–∞–¥–∞—á–∏
      const taskPeriodStart = task?.periodFrom ? new Date(task.periodFrom) : null;
      const taskPeriodEnd = task?.periodTo ? new Date(task.periodTo) : null;
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–¥–∞–∂–∏ –ø–æ —Ñ–æ–∫—É—Å–Ω—ã–º –ø—Ä–æ–¥—É–∫—Ç–∞–º –í –ü–ï–†–ò–û–î –î–ï–ô–°–¢–í–ò–Ø –ó–ê–î–ê–ß–ò
      const focusSalesInPeriod = clientSales.filter(sale => {
        const isFocusProduct = focusProducts.has(sale['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞.–ö–æ–¥']);
        const saleDate = new Date(sale['–î–∞—Ç–∞']);
        const isInTaskPeriod = (!taskPeriodStart || saleDate >= taskPeriodStart) && 
                              (!taskPeriodEnd || saleDate <= taskPeriodEnd);
        return isFocusProduct && isInTaskPeriod;
      });
      
      // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –í–°–ï –ø—Ä–æ–¥–∞–∂–∏ —Ñ–æ–∫—É—Å–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∑–∞ –í–ï–°–¨ –ø–µ—Ä–∏–æ–¥ (–¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏)
      const allFocusSales = clientSales.filter(sale => focusProducts.has(sale['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞.–ö–æ–¥']));
      
      const otherSales = clientSales.filter(sale => !focusProducts.has(sale['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞.–ö–æ–¥']));
      
      // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      const totalRevenue = clientSales.reduce((sum, sale) => sum + (sale['–í—ã—Ä—É—á–∫–∞'] || 0), 0);
      const focusRevenueInPeriod = focusSalesInPeriod.reduce((sum, sale) => sum + (sale['–í—ã—Ä—É—á–∫–∞'] || 0), 0);
      const allFocusRevenue = allFocusSales.reduce((sum, sale) => sum + (sale['–í—ã—Ä—É—á–∫–∞'] || 0), 0);
      const otherRevenue = otherSales.reduce((sum, sale) => sum + (sale['–í—ã—Ä—É—á–∫–∞'] || 0), 0);
      
      // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–æ–¥–∞–∂–∏
      const lastSales = clientSales
        .sort((a, b) => new Date(b['–î–∞—Ç–∞']) - new Date(a['–î–∞—Ç–∞']))
        .slice(0, 10);
      
      console.log('üîç –ê–Ω–∞–ª—ñ–∑ –∫–ª—ñ—î–Ω—Ç–∞:', {
        clientCode,
        totalSales: clientSales.length,
        focusSalesInPeriod: focusSalesInPeriod.length,
        allFocusSales: allFocusSales.length,
        otherSales: otherSales.length,
        focusProducts: focusProducts.size,
        taskPeriod: taskPeriodStart && taskPeriodEnd ? `${taskPeriodStart.toLocaleDateString()} - ${taskPeriodEnd.toLocaleDateString()}` : '–ù–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'
      });
      
      // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      const modal = document.createElement('div');
      modal.className = 'fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-60';
      modal.innerHTML = `
        <div class="bg-gray-900 rounded-2xl shadow-2xl p-8 w-full max-w-4xl max-h-[90vh] overflow-y-auto relative">
          <button id="close-client-detail" class="absolute top-4 right-4 text-gray-400 hover:text-white text-2xl">&times;</button>
          
          <div class="mb-6">
            <h2 class="text-2xl font-bold text-white mb-2">${clientInfo?.name || clientCode}</h2>
            <p class="text-gray-400">–ö–æ–¥: ${clientCode}</p>
            ${clientInfo?.manager ? `<p class="text-gray-400">–ú–µ–Ω–µ–¥–∂–µ—Ä: ${clientInfo.manager}</p>` : ''}
            ${clientInfo?.department ? `<p class="text-gray-400">–í—ñ–¥–¥—ñ–ª: ${clientInfo.department}</p>` : ''}
            ${taskPeriodStart && taskPeriodEnd ? `<p class="text-gray-400">–ü–µ—Ä—ñ–æ–¥ –∑–∞–¥–∞—á—ñ: ${taskPeriodStart.toLocaleDateString()} - ${taskPeriodEnd.toLocaleDateString()}</p>` : ''}
          </div>
          
          <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ -->
          <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
            <div class="bg-gray-800 rounded-lg p-4">
              <h3 class="text-gray-400 text-sm mb-1">–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∏—Ä—É—á–∫–∞</h3>
              <p class="text-2xl font-bold text-white">${this.formatCurrency(totalRevenue)}</p>
            </div>
            <div class="bg-gray-800 rounded-lg p-4">
              <h3 class="text-gray-400 text-sm mb-1">–§–æ–∫—É—Å–Ω—ñ –≤ –ø–µ—Ä—ñ–æ–¥—ñ</h3>
              <p class="text-2xl font-bold text-blue-400">${this.formatCurrency(focusRevenueInPeriod)}</p>
            </div>
            <div class="bg-gray-800 rounded-lg p-4">
              <h3 class="text-gray-400 text-sm mb-1">–í—Å—ñ —Ñ–æ–∫—É—Å–Ω—ñ</h3>
              <p class="text-2xl font-bold text-green-400">${this.formatCurrency(allFocusRevenue)}</p>
            </div>
          </div>
          
          <!-- –í–∫–ª–∞–¥–∫–∏ -->
          <div class="flex gap-2 mb-6">
            <button class="client-tab-btn active px-4 py-2 bg-blue-600 text-white rounded" data-tab="focus">–§–æ–∫—É—Å–Ω—ñ –ø—Ä–æ–¥—É–∫—Ç–∏</button>
            <button class="client-tab-btn px-4 py-2 bg-gray-700 text-white rounded" data-tab="all">–í—Å—ñ –ø—Ä–æ–¥–∞–∂—ñ</button>
            <button class="client-tab-btn px-4 py-2 bg-gray-700 text-white rounded" data-tab="history">–Ü—Å—Ç–æ—Ä—ñ—è —Ñ–æ–∫—É—Å–Ω—ñ</button>
          </div>
          
          <!-- –ö–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–æ–∫ -->
          <div id="client-detail-content">
            <!-- –ö–æ–Ω—Ç–µ–Ω—Ç –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
          </div>
          
          <div class="flex justify-end gap-4 mt-6 pt-4 border-t border-gray-700">
            <button id="export-client-csv" class="px-4 py-2 bg-green-600 text-white rounded hover:bg-green-500">
              üìä –ï–∫—Å–ø–æ—Ä—Ç CSV
            </button>
            <button id="close-client-detail-btn" class="px-4 py-2 bg-gray-700 text-white rounded hover:bg-gray-600">
              –ó–∞–∫—Ä–∏—Ç–∏
            </button>
          </div>
        </div>
      `;
      
      document.body.appendChild(modal);
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
      const closeModal = () => modal.remove();
      const closeBtn = modal.querySelector('#close-client-detail');
      const closeDetailBtn = modal.querySelector('#close-client-detail-btn');
      const exportBtn = modal.querySelector('#export-client-csv');
      
      closeBtn.onclick = closeModal;
      closeDetailBtn.onclick = closeModal;
      exportBtn.onclick = () => this.exportClientToCSV(clientCode, clientSales);
      
      // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤–∫–ª–∞–¥–æ–∫
      const tabBtns = modal.querySelectorAll('.client-tab-btn');
      const contentDiv = modal.querySelector('#client-detail-content');
      
      const switchTab = (tabName) => {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
        tabBtns.forEach(btn => {
          btn.classList.toggle('bg-blue-600', btn.dataset.tab === tabName);
          btn.classList.toggle('bg-gray-700', btn.dataset.tab !== tabName);
        });
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤–∫–ª–∞–¥–∫–∏
        contentDiv.innerHTML = this.renderClientDetailTab(tabName, {
          clientCode,
          clientInfo,
          focusSales: focusSalesInPeriod, // –î–ª—è –≤–∫–ª–∞–¥–∫–∏ "–§–æ–∫—É—Å–Ω—ñ –ø—Ä–æ–¥—É–∫—Ç–∏" - —Ç–æ–ª—å–∫–æ –≤ –ø–µ—Ä–∏–æ–¥–µ
          allFocusSales, // –î–ª—è –≤–∫–ª–∞–¥–∫–∏ "–Ü—Å—Ç–æ—Ä—ñ—è —Ñ–æ–∫—É—Å–Ω—ñ" - –≤—Å–µ —Ñ–æ–∫—É—Å–Ω—ã–µ –ø—Ä–æ–¥–∞–∂–∏
          otherSales,
          lastSales,
          totalRevenue,
          focusRevenue: focusRevenueInPeriod, // –î–ª—è –≤–∫–ª–∞–¥–∫–∏ "–§–æ–∫—É—Å–Ω—ñ –ø—Ä–æ–¥—É–∫—Ç–∏"
          allFocusRevenue, // –î–ª—è –≤–∫–ª–∞–¥–∫–∏ "–Ü—Å—Ç–æ—Ä—ñ—è —Ñ–æ–∫—É—Å–Ω—ñ"
          otherRevenue,
          clientSales: focusSalesInPeriod.concat(otherSales), // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–¥–∞–∂–∏ –≤ –ø–µ—Ä–∏–æ–¥–µ
          taskPeriodStart,
          taskPeriodEnd
        });
        
        console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–µ—Ç–∞–ª–µ–π –∫–ª—ñ—î–Ω—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–æ –∑ –¥–∞–Ω–∏–º–∏:', {
          focusSalesInPeriod: focusSalesInPeriod.length,
          allFocusSales: allFocusSales.length,
          otherSales: otherSales.length,
          totalSales: focusSalesInPeriod.length + otherSales.length
        });
      };
      
      tabBtns.forEach(btn => {
        btn.onclick = () => switchTab(btn.dataset.tab);
      });
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é –≤–∫–ª–∞–¥–∫—É
      switchTab('focus');
      
      // –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é toggleOrderDetails –≥–ª–æ–±–∞–ª—å–Ω–æ–π
      window.toggleOrderDetails = (orderId) => this.toggleOrderDetails(orderId);
      
      // –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é toggleSelectedNomenclature –≥–ª–æ–±–∞–ª—å–Ω–æ–π
      window.toggleSelectedNomenclature = () => {
        const detailsElement = document.getElementById('selectedNomenclatureDetails');
        if (detailsElement) {
          const isHidden = detailsElement.classList.contains('hidden');
          if (isHidden) {
            detailsElement.classList.remove('hidden');
          } else {
            detailsElement.classList.add('hidden');
          }
        }
      };
      
      // –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é toggleOrderDetails –¥–ª—è –≤—Å—ñ—Ö –ø—Ä–æ–¥–∞–∂—ñ–≤ –≥–ª–æ–±–∞–ª—å–Ω–æ—é
      window.toggleAllOrderDetails = (orderId) => {
        const detailsElement = document.getElementById(orderId);
        const iconElement = document.getElementById(orderId.replace('-details', '-icon'));
        if (detailsElement && iconElement) {
          const isHidden = detailsElement.classList.contains('hidden');
          if (isHidden) {
            detailsElement.classList.remove('hidden');
            iconElement.classList.add('rotate-180');
          } else {
            detailsElement.classList.add('hidden');
            iconElement.classList.remove('rotate-180');
          }
        }
      };
      
      console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–µ—Ç–∞–ª–µ–π –∫–ª—ñ—î–Ω—Ç–∞ –≤—ñ–¥–∫—Ä–∏—Ç–æ');
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É –¥–µ—Ç–∞–ª–µ–π –∫–ª—ñ—î–Ω—Ç–∞:', error);
      alert('–ü–æ–º–∏–ª–∫–∞ –ø–æ–∫–∞–∑—É –¥–µ—Ç–∞–ª–µ–π –∫–ª—ñ—î–Ω—Ç–∞: ' + error.message);
    }
  }
  
  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤–∫–ª–∞–¥–∫–∏ –¥–µ—Ç–∞–ª–µ–π –∫–ª–∏–µ–Ω—Ç–∞
   */
  renderClientDetailTab(tabName, data) {
    switch (tabName) {
      case 'focus':
        return this.renderClientFocusTab(data);
      case 'all':
        return this.renderClientAllSalesTab(data);
      case 'history':
        return this.renderClientHistoryTab(data);
      default:
        return '<div class="text-gray-400">–í–∫–ª–∞–¥–∫–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞</div>';
    }
  }
  
  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤–∫–ª–∞–¥–∫–∏ —Ñ–æ–∫—É—Å–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤
   */
  renderClientFocusTab(data) {
    const { focusSales, focusRevenue, totalRevenue, taskPeriodStart, taskPeriodEnd } = data;
    const focusPercentage = totalRevenue > 0 ? (focusRevenue / totalRevenue * 100).toFixed(1) : 0;
    
    const periodInfo = taskPeriodStart && taskPeriodEnd 
      ? `–∑–∞ –ø–µ—Ä—ñ–æ–¥ ${taskPeriodStart.toLocaleDateString()} - ${taskPeriodEnd.toLocaleDateString()}`
      : '–∑–∞ –≤–µ—Å—å –ø–µ—Ä—ñ–æ–¥ (–ø–µ—Ä—ñ–æ–¥ –∑–∞–¥–∞—á—ñ –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ)';
    
    return `
      <div class="space-y-4">
        <div class="bg-blue-900 bg-opacity-20 border border-blue-500 rounded-lg p-4">
          <h3 class="text-lg font-semibold text-blue-400 mb-2">–ü—Ä–æ–¥–∞–∂—ñ —Ñ–æ–∫—É—Å–Ω–∏—Ö –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ ${periodInfo}</h3>
          <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div>
              <p class="text-gray-400 text-sm">–í–∏—Ä—É—á–∫–∞ –ø–æ —Ñ–æ–∫—É—Å—É</p>
              <p class="text-xl font-bold text-blue-400">${this.formatCurrency(focusRevenue)}</p>
            </div>
            <div>
              <p class="text-gray-400 text-sm">–ß–∞—Å—Ç–∫–∞ –≤—ñ–¥ –∑–∞–≥–∞–ª—å–Ω–æ—ó</p>
              <p class="text-xl font-bold text-blue-400">${focusPercentage}%</p>
            </div>
            <div>
              <p class="text-gray-400 text-sm">–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–æ–¥–∞–∂—ñ–≤</p>
              <p class="text-xl font-bold text-blue-400">${focusSales.length}</p>
            </div>
          </div>
        </div>
        
        ${focusSales.length > 0 ? `
          <div class="overflow-x-auto">
            <table class="w-full text-sm">
              <thead>
                <tr class="bg-gray-800">
                  <th class="text-left p-3 text-gray-300">–î–∞—Ç–∞</th>
                  <th class="text-left p-3 text-gray-300">–ü—Ä–æ–¥—É–∫—Ç</th>
                  <th class="text-left p-3 text-gray-300">–ö—ñ–ª—å–∫—ñ—Å—Ç—å</th>
                  <th class="text-left p-3 text-gray-300">–í–∏—Ä—É—á–∫–∞</th>
                </tr>
              </thead>
              <tbody>
                ${focusSales.map(sale => `
                  <tr class="border-b border-gray-700">
                    <td class="p-3 text-white">${this.formatDate(sale['–î–∞—Ç–∞'])}</td>
                    <td class="p-3 text-white">${this.getNomenclatureName(sale['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞.–ö–æ–¥'])}</td>
                    <td class="p-3 text-white">${sale['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'] || 0}</td>
                    <td class="p-3 text-white">${this.formatCurrency(sale['–í—ã—Ä—É—á–∫–∞'] || 0)}</td>
                  </tr>
                `).join('')}
              </tbody>
            </table>
          </div>
        ` : `
          <div class="bg-gray-800 rounded-lg p-4 text-center">
            <p class="text-gray-400">–ù–µ–º–∞—î –ø—Ä–æ–¥–∞–∂—ñ–≤ —Ñ–æ–∫—É—Å–Ω–∏—Ö –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ ${periodInfo}</p>
          </div>
        `}
      </div>
    `;
  }
  
  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤–∫–ª–∞–¥–∫–∏ –≤—Å–µ—Ö –ø—Ä–æ–¥–∞–∂
   */
  renderClientAllSalesTab(data) {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ–¥–∞–∂–∏ –∫–ª–∏–µ–Ω—Ç–∞
    const clientSales = data.clientSales || [];
    const totalRevenue = data.totalRevenue || 0;
    
    console.log('üìä –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤—Å—ñ—Ö –ø—Ä–æ–¥–∞–∂—ñ–≤:', {
      clientSalesCount: clientSales.length,
      totalRevenue: totalRevenue,
      sampleSale: clientSales[0]
    });
    
    if (!clientSales || clientSales.length === 0) {
      return `
        <div class="space-y-4">
          <div class="bg-gray-800 rounded-lg p-4">
            <h3 class="text-lg font-semibold text-white mb-2">–í—Å—ñ –ø—Ä–æ–¥–∞–∂—ñ –∫–ª—ñ—î–Ω—Ç–∞</h3>
            <p class="text-gray-400">–î–∞–Ω—ñ –ø—Ä–æ –ø—Ä–æ–¥–∞–∂—ñ –≤—ñ–¥—Å—É—Ç–Ω—ñ</p>
          </div>
        </div>
      `;
    }
    
    return `
      <div class="space-y-4">
        <div class="bg-gray-800 rounded-lg p-4">
          <h3 class="text-lg font-semibold text-white mb-2">–í—Å—ñ –ø—Ä–æ–¥–∞–∂—ñ –∫–ª—ñ—î–Ω—Ç–∞</h3>
          <p class="text-gray-400">–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∏—Ä—É—á–∫–∞: <span class="text-white font-bold">${this.formatCurrency(totalRevenue)}</span></p>
        </div>
        
        <div class="space-y-3">
          ${this.groupSalesByDate(clientSales).map((group, groupIndex) => `
            <div class="bg-gray-800 rounded-lg p-4">
              <button onclick="toggleAllOrderDetails('all-order-${groupIndex}-details')" 
                      class="flex items-center justify-between w-full mb-3 hover:bg-gray-700 p-2 rounded transition-colors">
                <div class="flex items-center space-x-4">
                  <span class="text-lg font-semibold text-white">${this.formatDate(group.date)}</span>
                  <span class="text-sm text-gray-400">–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è #${groupIndex + 1}</span>
                  <span class="text-sm text-blue-400">${group.sales.length} –ø–æ–∑–∏—Ü—ñ–π</span>
                  <span class="text-sm text-green-400">${this.formatCurrency(group.totalRevenue)}</span>
                </div>
                <svg id="all-order-${groupIndex}-icon" class="w-5 h-5 text-gray-400 transform transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
              </button>
              <div id="all-order-${groupIndex}-details" class="hidden space-y-2">
                ${group.sales.map((sale, saleIndex) => {
                  const isFocus = window.focus2Data?.tasks?.some(task => 
                    task.products?.includes(sale['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞.–ö–æ–¥'])
                  );
                  return `
                    <div class="bg-gray-700 rounded p-3 flex items-center justify-between">
                      <div class="flex-1">
                        <p class="text-white font-medium">${this.getNomenclatureName(sale['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞.–ö–æ–¥'])}</p>
                        <p class="text-gray-400 text-sm">${this.formatDate(sale['–î–∞—Ç–∞'])}</p>
                      </div>
                      <div class="flex items-center space-x-4">
                        <div>
                          <p class="text-gray-400 text-sm">–ö—ñ–ª—å–∫—ñ—Å—Ç—å</p>
                          <p class="text-white font-medium">${sale['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'] || sale['–ö—ñ–ª—å–∫—ñ—Å—Ç—å'] || 1}</p>
                        </div>
                        <div>
                          <p class="text-gray-400 text-sm">–í–∏—Ä—É—á–∫–∞</p>
                          <p class="text-white font-medium">${this.formatCurrency(sale['–í—ã—Ä—É—á–∫–∞'] || 0)}</p>
                        </div>
                        <div>
                          <span class="px-2 py-1 rounded text-xs ${isFocus ? 'bg-blue-600 text-white' : 'bg-gray-600 text-gray-300'}">
                            ${isFocus ? '–§–æ–∫—É—Å' : '–Ü–Ω—à–∏–π'}
                          </span>
                        </div>
                      </div>
                    </div>
                  `;
                }).join('')}
              </div>
            </div>
          `).join('')}
        </div>
      </div>
    `;
  }
  
  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤–∫–ª–∞–¥–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏
   */
  renderClientHistoryTab(data) {
    const { allFocusSales = [], allFocusRevenue = 0 } = data;
    
    if (!allFocusSales || allFocusSales.length === 0) {
      return `
        <div class="space-y-4">
          <div class="bg-gray-800 rounded-lg p-4">
            <h3 class="text-lg font-semibold text-white mb-2">–Ü—Å—Ç–æ—Ä—ñ—è —Ñ–æ–∫—É—Å–Ω–∏—Ö –ø—Ä–æ–¥–∞–∂—ñ–≤</h3>
            <p class="text-gray-400">–ù–µ–º–∞—î –ø—Ä–æ–¥–∞–∂—ñ–≤ —Ñ–æ–∫—É—Å–Ω–∏—Ö –ø—Ä–æ–¥—É–∫—Ç—ñ–≤ –∑–∞ –≤–µ—Å—å –ø–µ—Ä—ñ–æ–¥</p>
          </div>
        </div>
      `;
    }
    
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ —Å–Ω–∞—á–∞–ª–∞)
    const sortedSales = allFocusSales.sort((a, b) => new Date(b['–î–∞—Ç–∞']) - new Date(a['–î–∞—Ç–∞']));
    
    return `
      <div class="space-y-4">
        <div class="bg-green-900 bg-opacity-20 border border-green-500 rounded-lg p-4">
          <h3 class="text-lg font-semibold text-green-400 mb-2">–Ü—Å—Ç–æ—Ä—ñ—è —Ñ–æ–∫—É—Å–Ω–∏—Ö –ø—Ä–æ–¥–∞–∂—ñ–≤ –∑–∞ –≤–µ—Å—å –ø–µ—Ä—ñ–æ–¥</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <p class="text-gray-400 text-sm">–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∏—Ä—É—á–∫–∞ —Ñ–æ–∫—É—Å–Ω–∏—Ö</p>
              <p class="text-xl font-bold text-green-400">${this.formatCurrency(allFocusRevenue)}</p>
            </div>
            <div>
              <p class="text-gray-400 text-sm">–ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø—Ä–æ–¥–∞–∂—ñ–≤</p>
              <p class="text-xl font-bold text-green-400">${allFocusSales.length}</p>
            </div>
          </div>
        </div>
        
        <div class="space-y-3">
          ${this.groupSalesByDate(sortedSales).map((group, groupIndex) => `
            <div class="bg-gray-800 rounded-lg p-4">
              <button onclick="toggleOrderDetails('history-order-${groupIndex}')" 
                      class="flex items-center justify-between w-full mb-3 hover:bg-gray-700 p-2 rounded transition-colors">
                <div class="flex items-center space-x-4">
                  <span class="text-lg font-semibold text-white">${this.formatDate(group.date)}</span>
                  <span class="text-sm text-gray-400">–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è #${groupIndex + 1}</span>
                  <span class="text-sm text-green-400">${group.sales.length} –ø–æ–∑–∏—Ü—ñ–π</span>
                  <span class="text-sm text-green-400">${this.formatCurrency(group.totalRevenue)}</span>
                </div>
                <svg id="history-order-${groupIndex}-icon" class="w-5 h-5 text-gray-400 transform transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
              </button>
              <div id="history-order-${groupIndex}-details" class="hidden space-y-2">
                ${group.sales.map((sale, saleIndex) => `
                  <div class="bg-gray-700 rounded p-3">
                    <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                      <div>
                        <p class="text-gray-400 text-sm">–ü—Ä–æ–¥—É–∫—Ç</p>
                        <p class="text-white font-medium">${this.getNomenclatureName(sale['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞.–ö–æ–¥'])}</p>
                      </div>
                      <div>
                        <p class="text-gray-400 text-sm">–ö—ñ–ª—å–∫—ñ—Å—Ç—å</p>
                        <p class="text-white font-medium">${sale['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'] || sale['–ö—ñ–ª—å–∫—ñ—Å—Ç—å'] || 1}</p>
                      </div>
                      <div>
                        <p class="text-gray-400 text-sm">–í–∏—Ä—É—á–∫–∞</p>
                        <p class="text-white font-medium">${this.formatCurrency(sale['–í—ã—Ä—É—á–∫–∞'] || 0)}</p>
                      </div>
                    </div>
                  </div>
                `).join('')}
              </div>
              <div class="mt-3 pt-3 border-t border-gray-700">
                <div class="flex justify-between items-center">
                  <span class="text-gray-400">–ó–∞–≥–∞–ª—å–Ω–∞ –≤–∏—Ä—É—á–∫–∞ –∑–∞ –¥–µ–Ω—å:</span>
                  <span class="text-white font-bold">${this.formatCurrency(group.totalRevenue)}</span>
                </div>
              </div>
            </div>
          `).join('')}
        </div>
      </div>
    `;
  }
  
  /**
   * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
   */
  toggleOrderDetails(orderId) {
    const detailsElement = document.getElementById(`${orderId}-details`);
    const iconElement = document.getElementById(`${orderId}-icon`);
    
    if (detailsElement && iconElement) {
      const isHidden = detailsElement.classList.contains('hidden');
      
      if (isHidden) {
        detailsElement.classList.remove('hidden');
        iconElement.style.transform = 'rotate(180deg)';
      } else {
        detailsElement.classList.add('hidden');
        iconElement.style.transform = 'rotate(0deg)';
      }
    }
  }
  
  /**
   * –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞ –≤ CSV
   */
  exportClientToCSV(clientCode, sales) {
    try {
      const clientManagerDirectory = window.focus2Data?.clientManagerDirectory || {};
      const clientInfo = clientManagerDirectory[clientCode];
      
      // –°–æ–∑–¥–∞–µ–º CSV –¥–∞–Ω–Ω—ã–µ
      let csvContent = 'data:text/csv;charset=utf-8,';
      
      // –ó–∞–≥–æ–ª–æ–≤–æ–∫
      csvContent += `–î–µ—Ç–∞–ª—ñ –∫–ª—ñ—î–Ω—Ç–∞: ${clientInfo?.name || clientCode}\n`;
      csvContent += `–ö–æ–¥: ${clientCode}\n`;
      csvContent += `–ú–µ–Ω–µ–¥–∂–µ—Ä: ${clientInfo?.manager || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}\n`;
      csvContent += `–í—ñ–¥–¥—ñ–ª: ${clientInfo?.department || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}\n\n`;
      
      // –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
      csvContent += '–î–∞—Ç–∞,–ü—Ä–æ–¥—É–∫—Ç,–ö—ñ–ª—å–∫—ñ—Å—Ç—å,–í–∏—Ä—É—á–∫–∞,–¢–∏–ø\n';
      
      // –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥–∞–∂
      sales.forEach(sale => {
                          const isFocus = window.focus2Data?.tasks?.some(task => 
                    task.products?.includes(sale['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞.–ö–æ–¥'])
                  );
        const type = isFocus ? '–§–æ–∫—É—Å' : '–Ü–Ω—à–∏–π';
        
        csvContent += `${this.formatDate(sale['–î–∞—Ç–∞'])},${this.getNomenclatureName(sale['–ù–æ–º–µ–Ω–∫–ª–∞—Ç—É—Ä–∞'])},${sale['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ'] || 0},${sale['–í—ã—Ä—É—á–∫–∞'] || 0},${type}\n`;
      });
      
      // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
      const encodedUri = encodeURI(csvContent);
      const link = document.createElement('a');
      link.setAttribute('href', encodedUri);
      link.setAttribute('download', `client_${clientCode}_${new Date().toISOString().split('T')[0]}.csv`);
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      
      console.log('‚úÖ –î–∞–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∞ –µ–∫—Å–ø–æ—Ä—Ç–æ–≤–∞–Ω–æ –≤ CSV');
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É –¥–∞–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç–∞:', error);
      alert('–ü–æ–º–∏–ª–∫–∞ –µ–∫—Å–ø–æ—Ä—Ç—É –¥–∞–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç–∞');
    }
  }

  /**
   * –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–∞—Ä—Ç–æ—á–µ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤
   */
  renderClientsCards(clients, notes, taskId) {
    return clients.map(client => {
      const note = notes[client.code] || {};
      const clientName = client.link ? 
        `<a href="${client.link}" target="_blank" class="text-blue-400 underline hover:text-blue-600">${client.name}</a>` : 
        client.name;
      
      // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤ –∫–ª—ñ—î–Ω—Ç–∞
      const paramLabels = {
        param1: '–ö—É–ø—É–≤–∞–ª–∏ —Ä–∞–Ω—ñ—à–µ',
        param2: '–ù–µ –∫—É–ø—É–≤–∞–ª–∏ –¥–Ω—ñ–≤',
        param3: '–ù–∏–∑—å–∫–∞ —á–∞—Å—Ç–æ—Ç–∞',
        param4: '–ù–∏–∑—å–∫–∞ —Å—É–º–∞',
        param5: '–ü–µ–≤–Ω—ñ —Å–µ–≥–º–µ–Ω—Ç–∏',
        param6: '–ü–æ—Ö–æ–∂—ñ –∫–ª—ñ—î–Ω—Ç–∏',
        param7: '–ë–µ—Ä—É—Ç—å X'
      };
      
      const clientParams = client.params && Array.isArray(client.params) ? 
        client.params.map(param => paramLabels[param] || param).join(', ') : '-';
      
      return `
        <div class="client-card">
          <div class="client-card-header">
            <div>
              <div class="client-name">${clientName}</div>
              <div class="client-code">${client.code}</div>
            </div>
            <div class="client-actions">
              <button onclick="window.focus2Components?.ui?.showClientDetail('${client.code}', '${taskId}')" 
                      class="client-action-btn primary">
                –î–µ—Ç–∞–ª—ñ
              </button>
            </div>
          </div>
          
          <div class="client-details">
            <div class="client-detail-item">
              <div class="client-detail-label">–ú–µ–Ω–µ–¥–∂–µ—Ä</div>
              <div class="client-detail-value">${client.manager || '-'}</div>
            </div>
            <div class="client-detail-item">
              <div class="client-detail-label">–°—Ñ–µ—Ä–∞</div>
              <div class="client-detail-value">${client.sphere || '-'}</div>
            </div>
            <div class="client-detail-item">
              <div class="client-detail-label">–ü–∞—Ä–∞–º–µ—Ç—Ä–∏</div>
              <div class="client-detail-value">${clientParams}</div>
            </div>
            <div class="client-detail-item">
              <div class="client-detail-label">–°—É–º–∞</div>
              <div class="client-detail-value">${client.sum ? client.sum.toFixed(2) : '-'}</div>
            </div>
            <div class="client-detail-item">
              <div class="client-detail-label">–û—Å—Ç–∞–Ω–Ω—è –ø–æ–∫—É–ø–∫–∞</div>
              <div class="client-detail-value">${client.lastDate ? new Date(client.lastDate).toLocaleDateString('uk-UA') : '-'}</div>
            </div>
            <div class="client-detail-item">
              <div class="client-detail-label">–ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç</div>
              <div class="client-detail-value">
                <select data-cid="${client.code}" 
                        class="focus-priority bg-gray-900 text-gray-200 rounded px-2 py-1 text-xs">
                  <option value="">-</option>
                  <option value="low" ${note.priority === 'low' ? 'selected' : ''}>–ù–∏–∑—å–∫–∏–π</option>
                  <option value="medium" ${note.priority === 'medium' ? 'selected' : ''}>–°–µ—Ä–µ–¥–Ω—ñ–π</option>
                  <option value="high" ${note.priority === 'high' ? 'selected' : ''}>–í–∏—Å–æ–∫–∏–π</option>
                  <option value="urgent" ${note.priority === 'urgent' ? 'selected' : ''}>–¢–µ—Ä–º—ñ–Ω–æ–≤–æ</option>
                </select>
              </div>
            </div>
          </div>
          
          <div class="client-details">
            <div class="client-detail-item">
              <div class="client-detail-label">–î–∞—Ç–∞ –∫–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—ó</div>
              <div class="client-detail-value">
                <input type="date" 
                       value="${note.commDate || ''}" 
                       data-cid="${client.code}" 
                       class="focus-commdate bg-gray-900 text-gray-200 rounded px-2 py-1 text-xs">
              </div>
            </div>
            <div class="client-detail-item">
              <div class="client-detail-label">–ü—Ä–æ–ø–æ–∑–∏—Ü—ñ—è</div>
              <div class="client-detail-value">
                <input type="checkbox" 
                       data-cid="${client.code}" 
                       class="focus-done" 
                       ${note.done ? 'checked' : ''}>
              </div>
            </div>
          </div>
          
          <div class="client-detail-item">
            <div class="client-detail-label">–ö–æ–º–µ–Ω—Ç–∞—Ä</div>
            <div class="client-detail-value">
              <input type="text" 
                     value="${note.comment || ''}" 
                     data-cid="${client.code}" 
                     class="focus-comment bg-gray-900 text-gray-200 rounded px-2 py-1 text-xs w-full"
                     placeholder="–ö–æ–º–µ–Ω—Ç–∞—Ä...">
            </div>
          </div>
        </div>
      `;
    }).join('');
  }

  /**
   * –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–µ–∂–¥—É –≤–∏–¥–∞–º–∏ —Ç–∞–±–ª–∏—Ü—ã
   */
  switchView(viewType) {
    const tableView = document.getElementById('clients-table-view');
    const cardsView = document.getElementById('clients-cards-view');
    const tableBtn = document.querySelector('[data-view="table"]');
    const cardsBtn = document.querySelector('[data-view="cards"]');
    
    if (viewType === 'table') {
      tableView.classList.remove('hidden');
      cardsView.classList.add('hidden');
      tableBtn.classList.add('active');
      cardsBtn.classList.remove('active');
    } else {
      tableView.classList.add('hidden');
      cardsView.classList.remove('hidden');
      tableBtn.classList.remove('active');
      cardsBtn.classList.add('active');
    }
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Å–µ–∫—Ü–∏–π
window.toggleSection = function(sectionId) {
  const section = document.getElementById(sectionId);
  const icon = document.getElementById(`${sectionId}-icon`);
  
  if (section && icon) {
    const isHidden = section.classList.contains('hidden');
    
    if (isHidden) {
      section.classList.remove('hidden');
      icon.classList.add('rotate-180');
    } else {
      section.classList.add('hidden');
      icon.classList.remove('rotate-180');
    }
  }
};