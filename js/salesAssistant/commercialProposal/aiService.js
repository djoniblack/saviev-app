// AI-—Å–µ—Ä–≤—ñ—Å –¥–ª—è –∫–æ–º–µ—Ä—Ü—ñ–π–Ω–∏—Ö –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π
export class CommercialProposalAIService {
  constructor() {
    this.isInitialized = false;
    this.pricingRules = {};
    this.templates = {};
    this.markupPercentages = {
      standard: 15,    // 15% –Ω–∞—Ü—ñ–Ω–∫–∞ –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏—Ö –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π
      premium: 25,     // 25% –Ω–∞—Ü—ñ–Ω–∫–∞ –¥–ª—è –ø—Ä–µ–º—ñ—É–º –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ–π
      wholesale: 10,   // 10% –Ω–∞—Ü—ñ–Ω–∫–∞ –¥–ª—è –æ–ø—Ç–æ–≤–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å
      retail: 30       // 30% –Ω–∞—Ü—ñ–Ω–∫–∞ –¥–ª—è —Ä–æ–∑–¥—Ä—ñ–±–Ω–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å
    };
    
    // Gemini API –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
    this.geminiAPIKey = null;
    // –û–Ω–æ–≤–ª–µ–Ω–∞ –º–æ–¥–µ–ª—å –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º, —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ 404
    this.geminiEndpoint = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent';
    this.useGemini = false;
  }

  /**
   * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è AI-—Å–µ—Ä–≤—ñ—Å—É
   */
  async init() {
    try {
      console.log('ü§ñ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è AI-—Å–µ—Ä–≤—ñ—Å—É...');
      
      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø—Ä–∞–≤–∏–ª–∞ —Ü—ñ–Ω–æ—É—Ç–≤–æ—Ä–µ–Ω–Ω—è
      await this.loadPricingRules();
      
      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —à–∞–±–ª–æ–Ω–∏ –¥–ª—è AI
      await this.loadAITemplates();
      
      this.isInitialized = true;
      console.log('‚úÖ AI-—Å–µ—Ä–≤—ñ—Å —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó AI-—Å–µ—Ä–≤—ñ—Å—É:', error);
      throw error;
    }
  }

  /**
   * –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è Gemini API
   */
  async initGeminiAPI(apiKey) {
    try {
      this.geminiAPIKey = apiKey;
      this.useGemini = true;
      console.log('‚úÖ Gemini API —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ');
      return true;
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó Gemini API:', error);
      this.useGemini = false;
      return false;
    }
  }

  /**
   * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–∞–≤–∏–ª —Ü—ñ–Ω–æ—É—Ç–≤–æ—Ä–µ–Ω–Ω—è
   */
  async loadPricingRules() {
    // –ë–∞–∑–æ–≤—ñ –ø—Ä–∞–≤–∏–ª–∞ —Ü—ñ–Ω–æ—É—Ç–≤–æ—Ä–µ–Ω–Ω—è
    this.pricingRules = {
      // –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –ø—Ä–æ–¥—É–∫—Ç—ñ–≤
      productTypes: {
        'electronics': { baseMarkup: 20, volumeDiscount: true },
        'clothing': { baseMarkup: 40, volumeDiscount: true },
        'food': { baseMarkup: 25, volumeDiscount: false },
        'services': { baseMarkup: 35, volumeDiscount: false },
        'software': { baseMarkup: 50, volumeDiscount: true }
      },
      
      // –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –æ–±—Å—è–≥—ñ–≤ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
      volumeDiscounts: {
        'small': { minQuantity: 1, maxQuantity: 10, discount: 0 },
        'medium': { minQuantity: 11, maxQuantity: 50, discount: 5 },
        'large': { minQuantity: 51, maxQuantity: 100, discount: 10 },
        'wholesale': { minQuantity: 101, maxQuantity: 999999, discount: 15 }
      },
      
      // –ü—Ä–∞–≤–∏–ª–∞ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –∫–ª—ñ—î–Ω—Ç—ñ–≤
      clientTypes: {
        'new': { additionalDiscount: 0 },
        'returning': { additionalDiscount: 5 },
        'vip': { additionalDiscount: 10 },
        'wholesale': { additionalDiscount: 15 }
      }
    };
  }

  /**
   * –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è AI-—à–∞–±–ª–æ–Ω—ñ–≤
   */
  async loadAITemplates() {
    this.templates = {
      // –®–∞–±–ª–æ–Ω–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –æ–ø–∏—Å—ñ–≤
      descriptions: {
        'electronics': [
          '–í–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞ –∑ –≥–∞—Ä–∞–Ω—Ç—ñ—î—é —è–∫–æ—Å—Ç—ñ —Ç–∞ —Ç–µ—Ö–Ω—ñ—á–Ω–æ—é –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é',
          '–Ü–Ω–Ω–æ–≤–∞—Ü—ñ–π–Ω—ñ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è –≤–∞—à–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É –∑ –Ω–∞–π–∫—Ä–∞—â–∏–º —Å–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è–º —Ü—ñ–Ω–∞/—è–∫—ñ—Å—Ç—å',
          '–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–µ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è –¥–ª—è –ø—ñ–¥–≤–∏—â–µ–Ω–Ω—è –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –≤–∞—à–∏—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤'
        ],
        'clothing': [
          '–°—Ç–∏–ª—å–Ω–∏–π –æ–¥—è–≥ –ø—Ä–µ–º—ñ—É–º-–∫–ª–∞—Å—É –∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–∏—Ö –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤',
          '–°—É—á–∞—Å–Ω—ñ –∫–æ–ª–µ–∫—Ü—ñ—ó –¥–ª—è –∞–∫—Ç–∏–≤–Ω–∏—Ö –ª—é–¥–µ–π, —â–æ —Ü—ñ–Ω—É—é—Ç—å –∫–æ–º—Ñ–æ—Ä—Ç —Ç–∞ —Å—Ç–∏–ª—å',
          '–Ø–∫—ñ—Å–Ω–∏–π –æ–¥—è–≥ –¥–ª—è –≤–∞—à–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Å—Ç–∏–ª—é'
        ],
        'food': [
          '–°–≤—ñ–∂—ñ —Ç–∞ —è–∫—ñ—Å–Ω—ñ –ø—Ä–æ–¥—É–∫—Ç–∏ –∑ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–∏—Ö –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫—ñ–≤',
          '–ó–¥–æ—Ä–æ–≤–µ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è –¥–ª—è –≤–∞—à–æ—ó –∫–æ–º–∞–Ω–¥–∏ –∑ –¥–æ—Å—Ç–∞–≤–∫–æ—é –≤—á–∞—Å–Ω–æ',
          '–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ñ –ø—Ä–æ–¥—É–∫—Ç–∏ –±–µ–∑ —à—Ç—É—á–Ω–∏—Ö –¥–æ–±–∞–≤–æ–∫ –¥–ª—è –∑–¥–æ—Ä–æ–≤–æ–≥–æ —Å–ø–æ—Å–æ–±—É –∂–∏—Ç—Ç—è'
        ],
        'services': [
          '–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω—ñ –ø–æ—Å–ª—É–≥–∏ –≤—ñ–¥ –¥–æ—Å–≤—ñ–¥—á–µ–Ω–∏—Ö —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç—ñ–≤ –∑ –≥–∞—Ä–∞–Ω—Ç—ñ—î—é —è–∫–æ—Å—Ç—ñ',
          '–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –ø—ñ–¥—Ö—ñ–¥ –¥–æ –∫–æ–∂–Ω–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞ –∑ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ—é –µ—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—é',
          '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ñ —Ä—ñ—à–µ–Ω–Ω—è –¥–ª—è –≤–∞—à–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É –∑ –ø–æ—Å—Ç—ñ–π–Ω–æ—é –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é'
        ]
      },
      
      // –®–∞–±–ª–æ–Ω–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø–µ—Ä–µ–≤–∞–≥
      benefits: [
        '–ï–∫–æ–Ω–æ–º—ñ—è —á–∞—Å—É —Ç–∞ —Ä–µ—Å—É—Ä—Å—ñ–≤ –∑–∞–≤–¥—è–∫–∏ –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–º –ø—Ä–æ—Ü–µ—Å–∞–º',
        '–ü—ñ–¥–≤–∏—â–µ–Ω–Ω—è —è–∫–æ—Å—Ç—ñ –ø—Ä–æ–¥—É–∫—Ü—ñ—ó —Ç–∞ –ø–æ—Å–ª—É–≥',
        '–ó–º–µ–Ω—à–µ–Ω–Ω—è –æ–ø–µ—Ä–∞—Ü—ñ–π–Ω–∏—Ö –≤–∏—Ç—Ä–∞—Ç',
        '–ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∏—Ö –ø–µ—Ä–µ–≤–∞–≥',
        '–ú–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è –±—ñ–∑–Ω–µ—Å—É –∑ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–º–∏ —Ä–∏–∑–∏–∫–∞–º–∏'
      ],
      
      // –®–∞–±–ª–æ–Ω–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ç–µ—Ä–º—ñ–Ω—ñ–≤
      terms: [
        '–ì–Ω—É—á–∫—ñ —É–º–æ–≤–∏ –æ–ø–ª–∞—Ç–∏ –∑ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—é —Ä–æ–∑—Å—Ç—Ä–æ—á–∫–∏',
        '–®–≤–∏–¥–∫–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≤—Å—ñ–π –£–∫—Ä–∞—ó–Ω—ñ',
        '–¢–µ—Ö–Ω—ñ—á–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ 24/7',
        '–ì–∞—Ä–∞–Ω—Ç—ñ—è —è–∫–æ—Å—Ç—ñ –Ω–∞ –≤—Å—ñ –ø—Ä–æ–¥—É–∫—Ç–∏ —Ç–∞ –ø–æ—Å–ª—É–≥–∏',
        '–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è'
      ]
    };
  }

  /**
   * –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω
   */
  calculatePricing(products, clientType = 'new', orderVolume = 'small') {
    try {
      const calculatedProducts = products.map(product => {
        const basePrice = parseFloat(product.basePrice) || 0;
        const quantity = parseInt(product.quantity) || 1;
        
        // –í–∏–∑–Ω–∞—á–∞—î–º–æ —Ç–∏–ø –ø—Ä–æ–¥—É–∫—Ç—É
        const productType = this.detectProductType(product.name, product.category);
        const productRules = this.pricingRules.productTypes[productType] || this.pricingRules.productTypes['services'];
        
        // –ë–∞–∑–æ–≤–∞ –Ω–∞—Ü—ñ–Ω–∫–∞
        let markup = productRules.baseMarkup;
        
        // –ó–Ω–∏–∂–∫–∞ –∑–∞ –æ–±—Å—è–≥
        const volumeDiscount = this.pricingRules.volumeDiscounts[orderVolume]?.discount || 0;
        
        // –î–æ–¥–∞—Ç–∫–æ–≤–∞ –∑–Ω–∏–∂–∫–∞ –¥–ª—è –∫–ª—ñ—î–Ω—Ç–∞
        const clientDiscount = this.pricingRules.clientTypes[clientType]?.additionalDiscount || 0;
        
        // –ó–∞–≥–∞–ª—å–Ω–∞ –∑–Ω–∏–∂–∫–∞
        const totalDiscount = volumeDiscount + clientDiscount;
        
        // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ñ—ñ–Ω–∞–ª—å–Ω–æ—ó —Ü—ñ–Ω–∏
        const priceWithMarkup = basePrice * (1 + markup / 100);
        const finalPrice = priceWithMarkup * (1 - totalDiscount / 100);
        
        // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –∑–∞–≥–∞–ª—å–Ω–æ—ó –≤–∞—Ä—Ç–æ—Å—Ç—ñ
        const totalPrice = finalPrice * quantity;
        
        return {
          ...product,
          calculatedPrice: finalPrice.toFixed(2),
          totalPrice: totalPrice.toFixed(2),
          markup: markup,
          volumeDiscount: volumeDiscount,
          clientDiscount: clientDiscount,
          totalDiscount: totalDiscount
        };
      });
      
      // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –∑–∞–≥–∞–ª—å–Ω–æ—ó —Å—É–º–∏
      const totalOrderAmount = calculatedProducts.reduce((sum, product) => {
        return sum + parseFloat(product.totalPrice);
      }, 0);
      
      return {
        products: calculatedProducts,
        totalAmount: totalOrderAmount.toFixed(2),
        summary: {
          totalProducts: calculatedProducts.length,
          totalQuantity: calculatedProducts.reduce((sum, p) => sum + (parseInt(p.quantity) || 1), 0),
          averageDiscount: calculatedProducts.reduce((sum, p) => sum + p.totalDiscount, 0) / calculatedProducts.length
        }
      };
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Ü—ñ–Ω:', error);
      throw error;
    }
  }

  /**
   * –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∏–ø—É –ø—Ä–æ–¥—É–∫—Ç—É
   */
  detectProductType(name, category) {
    const nameLower = (name || '').toLowerCase();
    const categoryLower = (category || '').toLowerCase();
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞–∑–≤—É —Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é
    if (nameLower.includes('—Ç–µ–ª–µ—Ñ–æ–Ω') || nameLower.includes('–∫–æ–º–ø—å—é—Ç–µ—Ä') || nameLower.includes('–Ω–æ—É—Ç–±—É–∫') || 
        categoryLower.includes('–µ–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞')) {
      return 'electronics';
    }
    
    if (nameLower.includes('—Ñ—É—Ç–±–æ–ª–∫–∞') || nameLower.includes('–¥–∂–∏–Ω—Å–∏') || nameLower.includes('–∫—É—Ä—Ç–∫–∞') || 
        categoryLower.includes('–æ–¥—è–≥')) {
      return 'clothing';
    }
    
    if (nameLower.includes('—Ö–ª—ñ–±') || nameLower.includes('–º–æ–ª–æ–∫–æ') || nameLower.includes('–º\'—è—Å–æ') || 
        categoryLower.includes('–ø—Ä–æ–¥—É–∫—Ç–∏')) {
      return 'food';
    }
    
    if (nameLower.includes('–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è') || nameLower.includes('–æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è') || nameLower.includes('—Ä–µ–º–æ–Ω—Ç') || 
        categoryLower.includes('–ø–æ—Å–ª—É–≥–∏')) {
      return 'services';
    }
    
    // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    return 'services';
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –æ–ø–∏—Å—É –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó
   */
  generateDescription(companyName, products, template = 'standard') {
    try {
      const productTypes = [...new Set(products.map(p => this.detectProductType(p.name, p.category)))];
      const mainType = productTypes[0] || 'services';
      
      // –û—Ç—Ä–∏–º—É—î–º–æ —à–∞–±–ª–æ–Ω–∏ –æ–ø–∏—Å—ñ–≤
      const descriptions = this.templates.descriptions[mainType] || this.templates.descriptions['services'];
      const randomDescription = descriptions[Math.floor(Math.random() * descriptions.length)];
      
      // –ì–µ–Ω–µ—Ä—É—î–º–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π –æ–ø–∏—Å
      let description = `–ö–æ–º–ø–∞–Ω—ñ—è "${companyName}" –ø—Ä–æ–ø–æ–Ω—É—î ${randomDescription}. `;
      
      if (products.length === 1) {
        description += `–ù–∞—à–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è –≤–∫–ª—é—á–∞—î ${products[0].name} –∑ –Ω–∞–π–∫—Ä–∞—â–∏–º–∏ —É–º–æ–≤–∞–º–∏ –Ω–∞ —Ä–∏–Ω–∫—É.`;
      } else {
        description += `–ù–∞—à–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è –≤–∫–ª—é—á–∞—î ${products.length} –ø–æ–∑–∏—Ü—ñ–π –∑ –Ω–∞–π–∫—Ä–∞—â–∏–º–∏ —É–º–æ–≤–∞–º–∏ –Ω–∞ —Ä–∏–Ω–∫—É.`;
      }
      
      // –î–æ–¥–∞—î–º–æ –ø–µ—Ä–µ–≤–∞–≥–∏
      const benefits = this.templates.benefits.slice(0, 2);
      description += ` –û—Å–Ω–æ–≤–Ω—ñ –ø–µ—Ä–µ–≤–∞–≥–∏: ${benefits.join(', ')}.`;
      
      return description;
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –æ–ø–∏—Å—É:', error);
      return '–Ø–∫—ñ—Å–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è –≤—ñ–¥ –Ω–∞–¥—ñ–π–Ω–æ–≥–æ –ø–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∞ –∑ –Ω–∞–π–∫—Ä–∞—â–∏–º–∏ —É–º–æ–≤–∞–º–∏ –Ω–∞ —Ä–∏–Ω–∫—É.';
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø–µ—Ä–µ–≤–∞–≥
   */
  generateBenefits(products, clientType) {
    try {
      const baseBenefits = this.templates.benefits.slice(0, 3);
      const customBenefits = [];
      
      // –î–æ–¥–∞—î–º–æ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ –ø–µ—Ä–µ–≤–∞–≥–∏ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–∏–ø—ñ–≤ –ø—Ä–æ–¥—É–∫—Ç—ñ–≤
      const productTypes = [...new Set(products.map(p => this.detectProductType(p.name, p.category)))];
      
      if (productTypes.includes('electronics')) {
        customBenefits.push('–¢–µ—Ö–Ω—ñ—á–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞ —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è');
        customBenefits.push('–ì–∞—Ä–∞–Ω—Ç—ñ—è —Ç–∞ —Å–µ—Ä–≤—ñ—Å–Ω–µ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è');
      }
      
      if (productTypes.includes('clothing')) {
        customBenefits.push('–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∏–π –ø—ñ–¥–±—ñ—Ä —Ä–æ–∑–º—ñ—Ä—ñ–≤');
        customBenefits.push('–ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å –±—Ä–µ–Ω–¥—É–≤–∞–Ω–Ω—è');
      }
      
      if (productTypes.includes('food')) {
        customBenefits.push('–°–≤—ñ–∂—ñ—Å—Ç—å —Ç–∞ —è–∫—ñ—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ñ–≤');
        customBenefits.push('–ì–Ω—É—á–∫–∏–π –≥—Ä–∞—Ñ—ñ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏');
      }
      
      // –î–æ–¥–∞—î–º–æ –ø–µ—Ä–µ–≤–∞–≥–∏ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –∫–ª—ñ—î–Ω—Ç—ñ–≤
      if (clientType === 'vip') {
        customBenefits.push('–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π –º–µ–Ω–µ–¥–∂–µ—Ä');
        customBenefits.push('–ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω–µ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è');
      }
      
      if (clientType === 'wholesale') {
        customBenefits.push('–°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ —É–º–æ–≤–∏ –¥–ª—è –æ–ø—Ç–æ–≤–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å');
        customBenefits.push('–õ–æ–≥—ñ—Å—Ç–∏—á–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞');
      }
      
      return [...baseBenefits, ...customBenefits];
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø–µ—Ä–µ–≤–∞–≥:', error);
      return this.templates.benefits.slice(0, 3);
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ç–µ—Ä–º—ñ–Ω—ñ–≤
   */
  generateTerms(products, clientType, orderVolume) {
    try {
      const baseTerms = this.templates.terms.slice(0, 3);
      const customTerms = [];
      
      // –î–æ–¥–∞—î–º–æ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ —Ç–µ—Ä–º—ñ–Ω–∏ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ –æ–±—Å—è–≥—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
      if (orderVolume === 'wholesale') {
        customTerms.push('–†–æ–∑—Å—Ç—Ä–æ—á–∫–∞ –¥–æ 30 –¥–Ω—ñ–≤');
        customTerms.push('–ë–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –ª–æ–≥—ñ—Å—Ç–∏–∫–∞ –ø—Ä–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ –≤—ñ–¥ 100 —Ç–∏—Å. –≥—Ä–Ω');
      }
      
      if (orderVolume === 'large') {
        customTerms.push('–ó–Ω–∏–∂–∫–∞ 10% –ø—Ä–∏ –æ–ø–ª–∞—Ç—ñ –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å');
        customTerms.push('–ü—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω–∞ –¥–æ—Å—Ç–∞–≤–∫–∞');
      }
      
      // –î–æ–¥–∞—î–º–æ —Ç–µ—Ä–º—ñ–Ω–∏ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –∫–ª—ñ—î–Ω—Ç—ñ–≤
      if (clientType === 'vip') {
        customTerms.push('–ï–∫—Å–∫–ª—é–∑–∏–≤–Ω—ñ —É–º–æ–≤–∏ —Ç–∞ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–Ω–µ –æ–±—Å–ª—É–≥–æ–≤—É–≤–∞–Ω–Ω—è');
        customTerms.push('–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞ –∑–Ω–∏–∂–∫–∞ 15%');
      }
      
      if (clientType === 'returning') {
        customTerms.push('–î–æ–¥–∞—Ç–∫–æ–≤–∞ –∑–Ω–∏–∂–∫–∞ 5% –¥–ª—è –ø–æ—Å—Ç—ñ–π–Ω–∏—Ö –∫–ª—ñ—î–Ω—Ç—ñ–≤');
        customTerms.push('–ü—Ä–æ–≥—Ä–∞–º–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç—ñ');
      }
      
      return [...baseTerms, ...customTerms];
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —Ç–µ—Ä–º—ñ–Ω—ñ–≤:', error);
      return this.templates.terms.slice(0, 3);
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø–æ–≤–Ω–æ—ó –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –∑ AI
   */
  async generateFullProposal(proposalData) {
    try {
      console.log('ü§ñ –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø–æ–≤–Ω–æ—ó –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó –∑ AI...');
      
      const {
        companyName,
        products,
        clientType = 'new',
        orderVolume = 'small',
        template = 'standard'
      } = proposalData;
      
      // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ–Ω
      const pricing = this.calculatePricing(products, clientType, orderVolume);
      
      // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –æ–ø–∏—Å—É
      const description = this.generateDescription(companyName, products, template);
      
      // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø–µ—Ä–µ–≤–∞–≥
      const benefits = this.generateBenefits(products, clientType);
      
      // –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ç–µ—Ä–º—ñ–Ω—ñ–≤
      const terms = this.generateTerms(products, clientType, orderVolume);
      
      // –§–æ—Ä–º—É—î–º–æ –ø–æ–≤–Ω—É –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é
      const fullProposal = {
        ...proposalData,
        description: description,
        benefits: benefits,
        terms: terms,
        pricing: pricing,
        generatedAt: new Date().toISOString(),
        aiVersion: '1.0'
      };
      
      console.log('‚úÖ –ü–æ–≤–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∞ –∑ AI');
      return fullProposal;
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø–æ–≤–Ω–æ—ó –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó:', error);
      throw error;
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è HTML –¥–ª—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó
   */
  generateHTML(proposal) {
    try {
      const html = `
        <!DOCTYPE html>
        <html lang="uk">
        <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>–ö–æ–º–µ—Ä—Ü—ñ–π–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è - ${proposal.companyName}</title>
          <base href="${window.location.origin}/">
          <style>
            * { margin: 0; padding: 0; box-sizing: border-box; }
            body { 
              font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; 
              line-height: 1.6; 
              color: #333; 
              background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
              min-height: 100vh;
            }
            .container { 
              max-width: 1200px; 
              margin: 0 auto; 
              padding: 20px; 
            }
            .proposal-card { 
              background: white; 
              border-radius: 20px; 
              box-shadow: 0 20px 40px rgba(0,0,0,0.1); 
              overflow: hidden; 
              margin: 20px 0; 
            }
            .header { 
              background: linear-gradient(135deg, #2c3e50 0%, #3498db 100%); 
              color: white; 
              padding: 18px; 
              text-align: center; 
            }
            .brand {
              display: flex;
              align-items: center;
              justify-content: center;
              gap: 16px;
              margin-bottom: 16px;
            }
            .brand .logo {
              height: 36px;
              width: auto;
              filter: drop-shadow(0 2px 4px rgba(0,0,0,0.25));
              background: transparent;
            }
            .header h1 { 
              font-size: 1.8em; 
              margin-bottom: 6px; 
              font-weight: 300; 
            }
            .header h2 { 
              font-size: 1.2em; 
              margin-bottom: 10px; 
              opacity: 0.9; 
            }
            .header .date { 
              font-size: 0.95em; 
              opacity: 0.8; 
            }
            .content { 
              padding: 40px; 
            }
            .section { 
              margin-bottom: 40px; 
            }
            .section h3 { 
              color: #2c3e50; 
              font-size: 1.5em; 
              margin-bottom: 20px; 
              border-bottom: 3px solid #3498db; 
              padding-bottom: 10px; 
            }
            .description { 
              font-size: 1.1em; 
              line-height: 1.8; 
              color: #555; 
            }
            .products-grid { 
              display: grid; 
              grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); 
              gap: 20px; 
              margin-top: 20px; 
            }
            .product-card { 
              border: 2px solid #ecf0f1; 
              border-radius: 15px; 
              padding: 20px; 
              transition: all 0.3s ease; 
            }
            .product-card:hover { 
              border-color: #3498db; 
              transform: translateY(-5px); 
              box-shadow: 0 10px 20px rgba(52, 152, 219, 0.2); 
            }
            .product-name { 
              font-size: 1.3em; 
              font-weight: bold; 
              color: #2c3e50; 
              margin-bottom: 10px; 
            }
            .product-category {
              background: #3498db;
              color: white;
              padding: 4px 12px;
              border-radius: 20px;
              font-size: 0.8em;
              display: inline-block;
              margin-bottom: 10px;
            }
            .product-description { 
              color: #666; 
              margin-bottom: 15px; 
            }
            .product-price { 
              font-size: 1.4em; 
              font-weight: bold; 
              color: #27ae60; 
              text-align: right; 
            }
            .product-details {
              display: grid;
              grid-template-columns: 1fr 1fr;
              gap: 10px;
              margin: 10px 0;
              font-size: 0.9em;
              color: #666;
            }
            .benefits-list { 
              list-style: none; 
              margin-top: 20px; 
            }
            .benefits-list li { 
              padding: 10px 0; 
              border-bottom: 1px solid #ecf0f1; 
              position: relative; 
              padding-left: 30px; 
            }
            .benefits-list li:before { 
              content: '‚úì'; 
              position: absolute; 
              left: 0; 
              color: #27ae60; 
              font-weight: bold; 
              font-size: 1.2em; 
            }
            .pricing-summary { 
              background: #f8f9fa; 
              border-radius: 15px; 
              padding: 30px; 
              margin-top: 20px; 
            }
            .total-amount { 
              font-size: 2em; 
              font-weight: bold; 
              color: #2c3e50; 
              text-align: center; 
              margin: 20px 0; 
            }
            .terms-grid { 
              display: grid; 
              grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); 
              gap: 15px; 
              margin-top: 20px; 
            }
            .term-item { 
              background: #ecf0f1; 
              padding: 15px; 
              border-radius: 10px; 
              text-align: center; 
              font-weight: 500; 
            }
            
            .discounts-grid {
              display: grid;
              grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
              gap: 20px;
              margin-top: 20px;
            }
            .discount-card {
              background: linear-gradient(135deg, #28a745, #20c997);
              color: white;
              padding: 25px;
              border-radius: 15px;
              box-shadow: 0 10px 25px rgba(40, 167, 69, 0.3);
              text-align: center;
            }
            .discount-header {
              margin-bottom: 20px;
            }
            .discount-badge {
              display: inline-block;
              background: rgba(255,255,255,0.2);
              padding: 8px 16px;
              border-radius: 25px;
              font-size: 1.2em;
              font-weight: bold;
              margin-bottom: 10px;
            }
            .discount-quantity {
              display: block;
              font-size: 1.1em;
              opacity: 0.9;
            }
            .discount-details {
              text-align: left;
            }
            .price-row, .savings-row {
              display: flex;
              justify-content: space-between;
              margin-bottom: 10px;
              padding: 8px 0;
              border-bottom: 1px solid rgba(255,255,255,0.2);
            }
            .savings-row {
              border-bottom: none;
              font-weight: bold;
              font-size: 1.1em;
            }
            .original-price {
              text-decoration: line-through;
              opacity: 0.8;
            }
            .discounted-price {
              color: #ffeb3b;
              font-weight: bold;
            }
            .savings-amount {
              color: #ffeb3b;
              font-weight: bold;
            }
            
            
            .footer { 
              background: #2c3e50; 
              color: white; 
              text-align: center; 
              padding: 30px; 
              margin-top: 40px; 
            }
            /* ai badge removed by request */
            .actions {
              margin-top: 16px;
            }
            .download-btn {
              display: inline-block;
              background: #e83e8c;
              color: white;
              border: none;
              padding: 10px 18px;
              border-radius: 8px;
              cursor: pointer;
              font-weight: 600;
            }
            .download-btn:hover { background: #d63384; }
            @media (max-width: 768px) { 
              .container { padding: 10px; } 
              .header { padding: 20px; } 
              .content { padding: 20px; } 
              .products-grid { grid-template-columns: 1fr; } 
            }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="proposal-card">
              <div class="header">
                <div class="brand">
                  <img src="Lookfort_logo_new.svg" alt="Company Logo" class="logo"/>
                </div>
                <h1>–ö–æ–º–µ—Ä—Ü—ñ–π–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è</h1>
                <h2>${proposal.companyName}</h2>
                <div class="date">–î–∞—Ç–∞: ${new Date(proposal.createdAt || new Date()).toLocaleDateString('uk-UA')}</div>
                
                <div class="actions">
                  <button id="downloadPdfBtn" class="download-btn">–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ PDF</button>
                </div>
              </div>
              
              <div class="content">
                <div class="section">
                  <h3>–û–ø–∏—Å –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó</h3>
                  <div class="description">${proposal.description}</div>
                </div>
                
                ${proposal.products && proposal.products.length > 0 ? `
                <div class="section">
                  <h3>–ü—Ä–æ–¥—É–∫—Ç–∏ —Ç–∞ –ø–æ—Å–ª—É–≥–∏ (${proposal.products.length} –ø–æ–∑–∏—Ü—ñ–π)</h3>
                  <div class="products-grid">
                    ${proposal.products.map(product => `
                      <div class="product-card">
                        <div class="product-category">${product.category || '–¢–æ–≤–∞—Ä'}</div>
                        <div class="product-name">${product.name}</div>
                        <div class="product-details">
                          <div>–ú—ñ–Ω. –∫—ñ–ª—å–∫—ñ—Å—Ç—å: ${product.minQuantity || 1} ${product.unit || '—à—Ç'}</div>
                          <div>–ú–∞–∫—Å. –∫—ñ–ª—å–∫—ñ—Å—Ç—å: ${product.maxQuantity || 1} ${product.unit || '—à—Ç'}</div>
                        </div>
                        <div class="product-price">
                          ${product.calculatedPrice ? `${product.calculatedPrice} –≥—Ä–Ω` : (product.basePrice ? `${product.basePrice} –≥—Ä–Ω` : '–¶—ñ–Ω–∞ –∑–∞ –∑–∞–ø–∏—Ç–æ–º')}
                        </div>
                      </div>
                    `).join('')}
                  </div>
                </div>
                ` : ''}
                
                ${proposal.calculations && proposal.calculations.discountExamples && proposal.calculations.discountExamples.length > 0 ? `
                <div class="section">
                  <h3>–°–∏—Å—Ç–µ–º–∞ –∑–Ω–∏–∂–æ–∫ —Ç–∞ –≤–∏–≥–æ–¥–∏</h3>
                  <div class="discounts-grid">
                    ${proposal.calculations.discountExamples.map(discount => `
                      <div class="discount-card">
                        <div class="discount-header">
                          <span class="discount-badge">-${discount.discountPercent}%</span>
                          <span class="discount-quantity">–≤—ñ–¥ ${discount.quantity} —à—Ç</span>
                        </div>
                        <div class="discount-details">
                          <div class="price-row">
                            <span>–¶—ñ–Ω–∞ –±–µ–∑ –∑–Ω–∏–∂–∫–∏:</span>
                            <span class="original-price">${discount.originalPrice.toFixed(2)} –≥—Ä–Ω</span>
                          </div>
                          <div class="price-row">
                            <span>–¶—ñ–Ω–∞ –∑—ñ –∑–Ω–∏–∂–∫–æ—é:</span>
                            <span class="discounted-price">${discount.discountedPrice.toFixed(2)} –≥—Ä–Ω</span>
                          </div>
                          <div class="savings-row">
                            <span>–í–∞—à–∞ –≤–∏–≥–æ–¥–∞:</span>
                            <span class="savings-amount">${discount.savings.toFixed(2)} –≥—Ä–Ω</span>
                          </div>
                          ${discount.description ? `<div style="text-align: center; margin-top: 10px; font-size: 0.9em; opacity: 0.8;">${discount.description}</div>` : ''}
                        </div>
                      </div>
                    `).join('')}
                  </div>
                </div>
                ` : ''}
                
                ${proposal.benefits && proposal.benefits.length > 0 ? `
                <div class="section">
                  <h3>–ü–µ—Ä–µ–≤–∞–≥–∏ —Å–ø—ñ–≤–ø—Ä–∞—Ü—ñ</h3>
                  <ul class="benefits-list">
                    ${proposal.benefits.map(benefit => `<li>${benefit}</li>`).join('')}
                  </ul>
                </div>
                ` : ''}
                
                ${proposal.pricing && proposal.pricing.totalAmount ? `
                <div class="section">
                  <h3>–¶—ñ–Ω–æ—É—Ç–≤–æ—Ä–µ–Ω–Ω—è</h3>
                  <div class="pricing-summary">
                    <div class="total-amount">–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: ${proposal.pricing.totalAmount} –≥—Ä–Ω</div>
                    <div style="text-align: center; color: #666;">
                      –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–∑–∏—Ü—ñ–π: ${proposal.pricing.summary?.totalProducts || 0} | 
                      –ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å: ${proposal.pricing.summary?.totalQuantity || 0}
                    </div>
                  </div>
                </div>
                ` : ''}
                
                ${proposal.terms && proposal.terms.length > 0 ? `
                <div class="section">
                  <h3>–£–º–æ–≤–∏ —Å–ø—ñ–≤–ø—Ä–∞—Ü—ñ</h3>
                  <div class="terms-grid">
                    ${proposal.terms.map(term => `
                      <div class="term-item">${term}</div>
                    `).join('')}
                  </div>
                </div>
                ` : ''}
              </div>
              
              <div class="footer">
                <p>–î—è–∫—É—î–º–æ –∑–∞ —ñ–Ω—Ç–µ—Ä–µ—Å –¥–æ –Ω–∞—à–æ—ó –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó!</p>
                <p>–î–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∑–≤–µ—Ä—Ç–∞–π—Ç–µ—Å—è –¥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞</p>
              </div>
            </div>
          </div>
        </body>
        <script src="https://cdn.jsdelivr.net/npm/html2pdf.js@0.10.1/dist/html2pdf.bundle.min.js"></script>
        <script>
          (function(){
            function loadPdfLibs(callback){
              if (window.html2pdf || (window.jspdf && window.jspdf.jsPDF && window.html2canvas)) {
                callback();
                return;
              }
              var s = document.createElement('script');
              s.src = 'https://cdn.jsdelivr.net/npm/html2pdf.js@0.10.1/dist/html2pdf.bundle.min.js';
              s.onload = callback;
              s.onerror = function(){ callback(new Error('failed')); };
              document.body.appendChild(s);
            }

            function exportAsPdf(){
              var content = document.querySelector('.proposal-card');
              if (!content) return;
              var fileCompany = ${JSON.stringify((proposal.companyName || 'proposal'))};
              var safeName = String(fileCompany).replace(/[^a-z0-9\-_]+/gi, '_');

              if (window.html2pdf) {
                // Use html2pdf if available
                var width = content.scrollWidth || content.offsetWidth || 794;
                var height = content.scrollHeight || 1123;
                var opt = {
                  margin: 0,
                  filename: 'proposal_' + safeName + '.pdf',
                  image: { type: 'jpeg', quality: 0.98 },
                  html2canvas: { scale: 2, useCORS: true, letterRendering: true, backgroundColor: '#ffffff' },
                  jsPDF: { unit: 'px', format: [width, height], orientation: 'portrait' },
                  pagebreak: { mode: ['avoid-all'] }
                };
                window.html2pdf().set(opt).from(content).save();
                return;
              }

              var jsPDF = (window.jspdf && window.jspdf.jsPDF) ? window.jspdf.jsPDF : null;
              if (jsPDF && typeof window.html2canvas === 'function') {
                window.html2canvas(content, { scale: 2, useCORS: true, letterRendering: true, backgroundColor: '#ffffff' })
                  .then(function(canvas){
                    var imgData = canvas.toDataURL('image/jpeg', 0.98);
                    var pdf = new jsPDF('p', 'px', [canvas.width, canvas.height]);
                    pdf.addImage(imgData, 'JPEG', 0, 0, canvas.width, canvas.height);
                    pdf.save('proposal_' + safeName + '.pdf');
                  })
                  .catch(function(){ window.print(); });
                return;
              }

              // As a last resort
              window.print();
            }

            var btn = document.getElementById('downloadPdfBtn');
            if (!btn) return;
            btn.addEventListener('click', function(){
              loadPdfLibs(function(){
                exportAsPdf();
              });
            });
          })();
        </script>
        </html>
      `;
      
      return html;
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó HTML:', error);
      throw error;
    }
  }

  /**
   * –ü–∞—Ä—Å–∏–Ω–≥ —Ç–µ–∫—Å—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä–∞
   */
  parseManagerText(text) {
    const result = {
      products: [],
      pricing: {},
      discounts: [],
      calculations: {}
    };
    
    // –†–æ–∑–±–∏–≤–∞—î–º–æ –Ω–∞ —Ä—è–¥–∫–∏
    const lines = text.split('\n').filter(line => line.trim());
    
    lines.forEach(line => {
      const trimmedLine = line.trim();
      
      // –®—É–∫–∞—î–º–æ —Ç–æ–≤–∞—Ä–∏ (—Ä—è–¥–∫–∏ –∑ —Ü–∏—Ñ—Ä–∞–º–∏ —Ç–∞ —Ü—ñ–Ω–∞–º–∏)
      if (trimmedLine.match(/^\d+\.\s*.*\d+.*–≥—Ä–Ω/)) {
        const product = this.parseProductLine(trimmedLine);
        if (product) {
          result.products.push(product);
        }
      }
      
      // –®—É–∫–∞—î–º–æ –∑–Ω–∏–∂–∫–∏
      if (trimmedLine.toLowerCase().includes('–∑–Ω–∏–∂–∫–∞') || trimmedLine.toLowerCase().includes('—Å–∫–∏–¥–∫–∞')) {
        const discount = this.parseComplexDiscounts(trimmedLine);
        if (discount && Array.isArray(discount)) {
          result.discounts.push(...discount);
        }
      }
    });
    
    // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –≤–∏–≥–æ–¥–∏ —Ç–∞ –∑–Ω–∏–∂–∫–∏
    result.calculations = this.calculateDiscountsAndSavings(result.products, result.discounts);
    
    return result;
  }

  /**
   * –ü–∞—Ä—Å–∏–Ω–≥ —Å–∫–ª–∞–¥–Ω–∏—Ö –∑–Ω–∏–∂–æ–∫
   */
  parseComplexDiscounts(line) {
    try {
      const discounts = [];
      
      // –®—É–∫–∞—î–º–æ –∫–æ–º–±—ñ–Ω–∞—Ü—ñ—ó –∑–Ω–∏–∂–æ–∫
      // –ü—Ä–∏–∫–ª–∞–¥: "–≤—ñ–¥ 5 —à—Ç –∑–Ω–∏–∂–∫–∞ 10%, –≤—ñ–¥ 10 —à—Ç –∑–Ω–∏–∂–∫–∞ 15%, –≤—ñ–¥ 20 —à—Ç –∑–Ω–∏–∂–∫–∞ 25%"
      const discountPattern = /(?:–≤—ñ–¥\s+)?(\d+)\s+(?:—à—Ç|—à—Ç—É–∫?|—è—â–∏–∫?|—è—â–∏–∫—ñ–≤?)\s+–∑–Ω–∏–∂–∫–∞\s+(\d+)%/gi;
      let match;
      
      while ((match = discountPattern.exec(line)) !== null) {
        discounts.push({
          minQuantity: parseInt(match[1]),
          discountPercent: parseInt(match[2]),
          type: 'quantity'
        });
      }
      
      // –°–æ—Ä—Ç—É—î–º–æ –∑–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—é (–≤—ñ–¥ –º–µ–Ω—à–æ—ó –¥–æ –±—ñ–ª—å—à–æ—ó)
      discounts.sort((a, b) => a.minQuantity - b.minQuantity);
      
      return discounts;
    } catch (error) {
      console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑—ñ–±—Ä–∞—Ç–∏ —Å–∫–ª–∞–¥–Ω—ñ –∑–Ω–∏–∂–∫–∏:', line);
      return [];
    }
  }

  /**
   * –ü–∞—Ä—Å–∏–Ω–≥ —Ä—è–¥–∫–∞ –∑ —Ç–æ–≤–∞—Ä–æ–º
   */
  parseProductLine(line) {
    try {
      // –ü—Ä–∏–∫–ª–∞–¥: "1.–°—Ç–∞–∫–∞–Ω –ö–£–ü–û–õ–¨–ù–´–ô 420–º–ª –†–ï–¢ LF (50—à—Ç/1000—à—Ç) –æ—Å–Ω–æ–≤–Ω–∞ —Ü—ñ–Ω–∞ 2,92 –≥—Ä–Ω"
      const match = line.match(/^\d+\.\s*(.+?)\s*\((\d+)—à—Ç\/(\d+)—à—Ç\)\s*.*?(\d+[,.]?\d*)\s*–≥—Ä–Ω/);
      
      if (match) {
        return {
          name: match[1].trim(),
          minQuantity: parseInt(match[2]),
          maxQuantity: parseInt(match[3]),
          basePrice: parseFloat(match[4].replace(',', '.')),
          unit: '—à—Ç',
          category: '–°—Ç–∞–∫–∞–Ω–∏'
        };
      }
      
      // –°–ø—Ä–æ—â–µ–Ω–∏–π –ø–∞—Ä—Å–∏–Ω–≥, —è–∫—â–æ –Ω–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑—ñ–±—Ä–∞—Ç–∏ —Å–∫–ª–∞–¥–Ω—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É
      const simpleMatch = line.match(/^\d+\.\s*(.+?)\s*(\d+[,.]?\d*)\s*–≥—Ä–Ω/);
      if (simpleMatch) {
        return {
          name: simpleMatch[1].trim(),
          basePrice: parseFloat(simpleMatch[2].replace(',', '.')),
          unit: '—à—Ç',
          category: '–¢–æ–≤–∞—Ä'
        };
      }
      
      return null;
    } catch (error) {
      console.warn('‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑—ñ–±—Ä–∞—Ç–∏ —Ä—è–¥–æ–∫ —Ç–æ–≤–∞—Ä—É:', line);
      return null;
    }
  }

  /**
   * –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –∑–Ω–∏–∂–æ–∫ —Ç–∞ –≤–∏–≥–æ–¥ –¥–ª—è –±–∞–≥–∞—Ç—å–æ—Ö —Ç–æ–≤–∞—Ä—ñ–≤
   */
  calculateDiscountsAndSavings(products, discounts) {
    const calculations = {
      totalBasePrice: 0,
      totalWithDiscounts: 0,
      savings: 0,
      discountExamples: [],
      productSummary: {}, // –î–æ–¥–∞—î–º–æ –ø—ñ–¥—Å—É–º–æ–∫ –ø–æ —Ç–æ–≤–∞—Ä–∞—Ö
      totalProducts: products.length
    };
    
    // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –±–∞–∑–æ–≤—É –≤–∞—Ä—Ç—ñ—Å—Ç—å –ø–æ –∫–æ–∂–Ω–æ–º—É —Ç–æ–≤–∞—Ä—É
    products.forEach(product => {
      calculations.totalBasePrice += product.basePrice;
      
      // –ì—Ä—É–ø—É—î–º–æ —Ç–æ–≤–∞—Ä–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö
      if (!calculations.productSummary[product.category]) {
        calculations.productSummary[product.category] = {
          count: 0,
          totalPrice: 0,
          items: []
        };
      }
      calculations.productSummary[product.category].count++;
      calculations.productSummary[product.category].totalPrice += product.basePrice;
      calculations.productSummary[product.category].items.push(product.name);
    });
    
    // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –ø—Ä–∏–∫–ª–∞–¥–∏ –∑–Ω–∏–∂–æ–∫ –¥–ª—è —Ä—ñ–∑–Ω–∏—Ö –∫–æ–º–±—ñ–Ω–∞—Ü—ñ–π
    if (discounts && discounts.length > 0) {
      discounts.forEach(discount => {
        if (discount.type === 'quantity') {
          // –î–ª—è –∫–æ–∂–Ω–æ–≥–æ —Ä—ñ–≤–Ω—è –∑–Ω–∏–∂–∫–∏ –ø–æ–∫–∞–∑—É—î–º–æ –ø—Ä–∏–∫–ª–∞–¥
          const exampleQuantity = discount.minQuantity;
          const discountMultiplier = (100 - discount.discountPercent) / 100;
          
          // –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –¥–ª—è –≤—Å—ñ—Ö —Ç–æ–≤–∞—Ä—ñ–≤ —Ä–∞–∑–æ–º
          const examplePrice = calculations.totalBasePrice * exampleQuantity * discountMultiplier;
          const savings = calculations.totalBasePrice * exampleQuantity * (discount.discountPercent / 100);
          
          calculations.discountExamples.push({
            quantity: exampleQuantity,
            discountPercent: discount.discountPercent,
            originalPrice: calculations.totalBasePrice * exampleQuantity,
            discountedPrice: examplePrice,
            savings: savings,
            description: `–ü—Ä–∏ –∑–∞–∫—É–ø—ñ–≤–ª—ñ ${exampleQuantity} —à—Ç –∫–æ–∂–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä—É`
          });
        }
      });
    }
    
    return calculations;
  }

  /**
   * –ê–Ω–∞–ª—ñ–∑ —Ç–µ–∫—Å—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∑ –≤–∏–±–æ—Ä–æ–º –º–µ—Ç–æ–¥—É
   */
  async analyzeManagerText(rawText, useGemini = false) {
    try {
      console.log('üîç –ê–Ω–∞–ª—ñ–∑ —Ç–µ–∫—Å—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä–∞...');
      
      let parsedData;
      
      if (useGemini && this.geminiAPIKey) {
        console.log('ü§ñ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ Gemini API –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É...');
        parsedData = await this.analyzeWithGemini(rawText);
      } else {
        console.log('üìù –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–≤–∏—á–∞–π–Ω–∏–π –ø–∞—Ä—Å–∏–Ω–≥...');
        parsedData = this.parseManagerText(rawText);
      }
      
      // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –æ—Ç—Ä–∏–º–∞–ª–∏ –º–∏ –≤–∞–ª—ñ–¥–Ω—ñ –¥–∞–Ω—ñ
      if (!parsedData) {
        console.warn('‚ö†Ô∏è parsedData is undefined or null after analysis. Creating default structure.');
        parsedData = {
          products: [],
          pricing: {},
          discounts: [],
          calculations: {}
        };
      }
      
      // –°—Ç–≤–æ—Ä—é—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω—É –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—é –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é –≤—Å—ñ—Ö –ø–æ–ª—ñ–≤
      const structuredProposal = {
        companyName: parsedData.companyName || '–ö–æ–º–ø–∞–Ω—ñ—è',
        products: parsedData.products || [],
        pricing: parsedData.pricing || {},
        discounts: parsedData.discounts || [],
        calculations: parsedData.calculations || {},
        description: this.generateDescriptionFromText(rawText),
        benefits: this.generateBenefitsFromText(rawText),
        terms: this.generateTermsFromText(rawText),
        aiGenerated: true,
        aiVersion: useGemini ? '3.0 (Gemini)' : '2.0',
        generatedAt: new Date().toISOString()
      };
      
      console.log('‚úÖ –¢–µ–∫—Å—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø—Ä–æ–∞–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω–æ —Ç–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–æ');
      return structuredProposal;
      
    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–Ω–∞–ª—ñ–∑—É —Ç–µ–∫—Å—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä–∞:', error);
      // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –±–∞–∑–æ–≤—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∑–∞–º—ñ—Å—Ç—å —Ç–æ–≥–æ, —â–æ–± –∫–∏–¥–∞—Ç–∏ –ø–æ–º–∏–ª–∫—É
      return {
        companyName: '–ö–æ–º–ø–∞–Ω—ñ—è',
        products: [],
        pricing: {},
        discounts: [],
        calculations: {},
        description: '–ü–æ–º–∏–ª–∫–∞ –∞–Ω–∞–ª—ñ–∑—É —Ç–µ–∫—Å—Ç—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ñ–æ—Ä–º–∞—Ç –≤–≤–µ–¥–µ–Ω–Ω—è.',
        benefits: ['–ë–∞–∑–æ–≤—ñ —É–º–æ–≤–∏'],
        terms: ['–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ —É–º–æ–≤–∏'],
        aiGenerated: false,
        aiVersion: 'Error',
        generatedAt: new Date().toISOString()
      };
    }
  }

  /**
   * –ê–Ω–∞–ª—ñ–∑ —Ç–µ–∫—Å—Ç—É –∑ Gemini API
   */
  async analyzeWithGemini(rawText) {
    try {
      if (!this.geminiAPIKey) {
        throw new Error('Gemini API –∫–ª—é—á –Ω–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ');
      }

      const prompt = `
      –ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π –Ω–∞—Å—Ç—É–ø–Ω–∏–π —Ç–µ–∫—Å—Ç –∫–æ–º–µ—Ä—Ü—ñ–π–Ω–æ—ó –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó —Ç–∞ –≤–∏—Ç—è–≥–Ω–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é:

      "${rawText}"

      –ü–æ–≤–µ—Ä–Ω–∏ JSON –∑ —Ç–∞–∫–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä–æ—é:
      {
        "companyName": "–Ω–∞–∑–≤–∞ –∫–æ–º–ø–∞–Ω—ñ—ó –∞–±–æ '–ö–æ–º–ø–∞–Ω—ñ—è' —è–∫—â–æ –Ω–µ –≤–∫–∞–∑–∞–Ω–æ",
        "products": [
          {
            "name": "–Ω–∞–∑–≤–∞ —Ç–æ–≤–∞—Ä—É",
            "basePrice": —á–∏—Å–ª–æ,
            "minQuantity": —á–∏—Å–ª–æ,
            "maxQuantity": —á–∏—Å–ª–æ,
            "unit": "–æ–¥–∏–Ω–∏—Ü—è –≤–∏–º—ñ—Ä—É",
            "category": "–∫–∞—Ç–µ–≥–æ—Ä—ñ—è"
          }
        ],
        "discounts": [
          {
            "minQuantity": —á–∏—Å–ª–æ,
            "discountPercent": —á–∏—Å–ª–æ,
            "type": "quantity"
          }
        ]
      }
      `;

      const response = await fetch(`${this.geminiEndpoint}?key=${this.geminiAPIKey}`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          contents: [{
            parts: [{
              text: prompt
            }]
          }]
        })
      });

      const data = await response.json();

      if (data.candidates && data.candidates[0] && data.candidates[0].content) {
        // –û–±'—î–¥–Ω—É—î–º–æ –≤—Å—ñ —á–∞—Å—Ç–∏–Ω–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤ –æ–¥–∏–Ω —Ç–µ–∫—Å—Ç
        const parts = data.candidates[0].content.parts || [];
        const aiResponse = parts.map(p => p.text || '').join('\n');

        // –ü–∞—Ä—Å–∏–º–æ JSON –≤—ñ–¥–ø–æ–≤—ñ–¥—å –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º –º–æ–∂–ª–∏–≤–∏—Ö ```json –±–ª–æ–∫—ñ–≤
        const parsedData = this.extractJsonFromText(aiResponse);
        if (parsedData) {
          return this.processGeminiResponse(parsedData);
        }

        console.warn('‚ö†Ô∏è –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–π JSON –≤—ñ–¥ Gemini. –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ—Å—å –¥–æ –∑–≤–∏—á–∞–π–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥—É.');
        return this.parseManagerText(rawText);
      }

      // If Gemini returns an invalid structure, fall back to regular parsing
      console.warn('‚ö†Ô∏è –ù–µ–∫–æ—Ä–µ–∫—Ç–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ Gemini API, –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –∑–≤–∏—á–∞–π–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥—É.');
      return this.parseManagerText(rawText);

    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–Ω–∞–ª—ñ–∑—É –∑ Gemini:', error);
      // Fallback to regular parsing in case of API errors
      return this.parseManagerText(rawText);
    }
  }

  /**
   * –í–∏—Ç—è–≥—É—î JSON –∑ —Ç–µ–∫—Å—Ç—É (–ø—ñ–¥—Ç—Ä–∏–º—É—î ```json –±–ª–æ–∫–∏ —Ç–∞ –∑–º—ñ—à–∞–Ω–∏–π —Ç–µ–∫—Å—Ç)
   */
  extractJsonFromText(text) {
    if (!text || typeof text !== 'string') return null;
    // 1) –ü—Ä—è–º–∞ —Å–ø—Ä–æ–±–∞
    try {
      return JSON.parse(text);
    } catch (_) {}

    // 2) –ë–ª–æ–∫ –∫–æ–¥—É ```json ... ```
    const fenceMatch = text.match(/```\s*json\s*([\s\S]*?)```/i) || text.match(/```\s*([\s\S]*?)```/i);
    if (fenceMatch && fenceMatch[1]) {
      const fenced = fenceMatch[1].trim();
      try {
        return JSON.parse(fenced);
      } catch (_) {}
    }

    // 3) –ï–≤—Ä–∏—Å—Ç–∏–∫–∞: –ø–µ—Ä—à–∏–π { –¥–æ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ }
    const start = text.indexOf('{');
    const end = text.lastIndexOf('}');
    if (start !== -1 && end !== -1 && end > start) {
      const candidate = text.slice(start, end + 1);
      try {
        return JSON.parse(candidate);
      } catch (_) {}
    }

    return null;
  }

  /**
   * –û–±—Ä–æ–±–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –≤—ñ–¥ Gemini API
   */
  processGeminiResponse(geminiData) {
    try {
      const result = {
        companyName: geminiData.companyName || '–ö–æ–º–ø–∞–Ω—ñ—è',
        products: [],
        pricing: {},
        discounts: [],
        calculations: {}
      };

      // –û–±—Ä–æ–±–ª—è—î–º–æ —Ç–æ–≤–∞—Ä–∏
      if (geminiData.products && Array.isArray(geminiData.products)) {
        result.products = geminiData.products.map(product => ({
          name: product.name || '–¢–æ–≤–∞—Ä',
          basePrice: product.basePrice || 0,
          minQuantity: product.minQuantity || 1,
          maxQuantity: product.maxQuantity || 1000,
          unit: product.unit || '—à—Ç',
          category: product.category || '–¢–æ–≤–∞—Ä'
        }));
      }

      // –û–±—Ä–æ–±–ª—è—î–º–æ –∑–Ω–∏–∂–∫–∏
      if (geminiData.discounts && Array.isArray(geminiData.discounts)) {
        result.discounts = geminiData.discounts.map(discount => ({
          minQuantity: discount.minQuantity || 1,
          discountPercent: discount.discountPercent || 0,
          type: discount.type || 'quantity'
        }));
      }

      // –†–æ–∑—Ä–∞—Ö–æ–≤—É—î–º–æ –≤–∏–≥–æ–¥–∏ —Ç–∞ –∑–Ω–∏–∂–∫–∏
      result.calculations = this.calculateDiscountsAndSavings(result.products, result.discounts);

      return result;

    } catch (error) {
      console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ Gemini:', error);
      // Fallback to regular parsing
      return this.parseManagerText(geminiData.rawText || '');
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –æ–ø–∏—Å—É –∑ —Ç–µ–∫—Å—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä–∞
   */
  generateDescriptionFromText(text) {
    if (text.toLowerCase().includes('—Å—Ç–∞–∫–∞–Ω')) {
      return '–ü—Ä–æ–ø–æ–∑–∏—Ü—ñ—è –ø–æ —Ü—ñ–Ω–∞–º —Ç–æ–≤–∞—Ä—ñ–≤ - —Å—Ç–∞–∫–∞–Ω–∏ —Ä—ñ–∑–Ω–∏—Ö –æ–±\'—î–º—ñ–≤ —Ç–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ–π. –í–∫–ª—é—á–∞—î –≥–Ω—É—á–∫—ñ —É–º–æ–≤–∏ –∑–∞–∫—É–ø—ñ–≤–ª—ñ —Ç–∞ —Å–∏—Å—Ç–µ–º—É –∑–Ω–∏–∂–æ–∫ –¥–ª—è –≤–µ–ª–∏–∫–∏—Ö –æ–±—Å—è–≥—ñ–≤.';
    }
    
    return '–°–ø–µ—Ü—ñ–∞–ª—å–Ω–∞ –∫–æ–º–µ—Ä—Ü—ñ–π–Ω–∞ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è –∑ –≤–∏–≥—ñ–¥–Ω–æ—é —Å–∏—Å—Ç–µ–º–æ—é –∑–Ω–∏–∂–æ–∫ —Ç–∞ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∞–º–∏ –≤–∏–≥–æ–¥–∏ –¥–ª—è –∫–ª—ñ—î–Ω—Ç–∞.';
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –ø–µ—Ä–µ–≤–∞–≥ –∑ —Ç–µ–∫—Å—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä–∞
   */
  generateBenefitsFromText(text) {
    const benefits = [];
    
    if (text.toLowerCase().includes('–∑–Ω–∏–∂–∫–∞')) {
      benefits.push('–°–∏—Å—Ç–µ–º–∞ –ø—Ä–æ–≥—Ä–µ—Å–∏–≤–Ω–∏—Ö –∑–Ω–∏–∂–æ–∫ –¥–ª—è –≤–µ–ª–∏–∫–∏—Ö –æ–±—Å—è–≥—ñ–≤');
      benefits.push('–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –≤–∏–≥–æ–¥–∏ –ø—Ä–∏ –∑–∞–∫—É–ø—ñ–≤–ª—ñ');
    }
    
    if (text.toLowerCase().includes('—Å—Ç–∞–∫–∞–Ω')) {
      benefits.push('–®–∏—Ä–æ–∫–∏–π –∞—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç —Å—Ç–∞–∫–∞–Ω—ñ–≤ —Ä—ñ–∑–Ω–∏—Ö –æ–±\'—î–º—ñ–≤');
      benefits.push('–Ø–∫—ñ—Å–Ω—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª–∏ —Ç–∞ –Ω–∞–¥—ñ–π–Ω–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è');
    }
    
    benefits.push('–ì–Ω—É—á–∫—ñ —É–º–æ–≤–∏ –æ–ø–ª–∞—Ç–∏ —Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏');
    benefits.push('–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è –ø–æ –≤–∏–±–æ—Ä—É —Ç–æ–≤–∞—Ä—É');
    
    return benefits;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —É–º–æ–≤ –∑ —Ç–µ–∫—Å—Ç—É –º–µ–Ω–µ–¥–∂–µ—Ä–∞
   */
  generateTermsFromText(text) {
    const terms = [];
    
    if (text.toLowerCase().includes('–∑–Ω–∏–∂–∫–∞')) {
      terms.push('–ó–Ω–∏–∂–∫–∏ –¥—ñ—é—Ç—å –ø—Ä–∏ –∑–∞–∫—É–ø—ñ–≤–ª—ñ –≤—ñ–¥ –≤–∫–∞–∑–∞–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ');
      terms.push('–†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –∑–Ω–∏–∂–æ–∫ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ');
    }
    
    terms.push('–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è - –∑–∞ –¥–æ–º–æ–≤–ª–µ–Ω—ñ—Å—Ç—é');
    terms.push('–¢–µ—Ä–º—ñ–Ω –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è - 1-3 —Ä–æ–±–æ—á—ñ –¥–Ω—ñ');
    terms.push('–û–ø–ª–∞—Ç–∞: –ø–µ—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ –∞–±–æ –∑–∞ –¥–æ–º–æ–≤–ª–µ–Ω—ñ—Å—Ç—é');
    
    return terms;
  }

  /**
   * –û—á–∏—â–µ–Ω–Ω—è AI-—Å–µ—Ä–≤—ñ—Å—É
   */
  cleanup() {
    this.isInitialized = false;
    this.pricingRules = {};
    this.templates = {};
    console.log('üßπ AI-—Å–µ—Ä–≤—ñ—Å –æ—á–∏—â–µ–Ω–æ');
  }
}

// –°—Ç–≤–æ—Ä—é—î–º–æ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä
export const commercialProposalAIService = new CommercialProposalAIService(); 